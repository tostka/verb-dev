
NAME
    Initialize-ModuleFingerprint
    
SYNOPSIS
    Initialize-ModuleFingerprint.ps1 - Profile a specified module and summarize commands into a semantic-version 'fingerprint'.
    
    
SYNTAX
    Initialize-ModuleFingerprint [-Path] <String> [-whatIf] [<CommonParameters>]
    
    
DESCRIPTION
    Initialize-ModuleFingerprint.ps1 - Profile a specified module and summarize commands into a semantic-version 'fingerprint'.
    Rounded out the sample logic KM posted on the above site, along with matching processing function: Step-ModuleVersionCalculated
    

PARAMETERS
    -Path <String>
        Path to .psm1-hosting directory of the Module[-path 'C:\sc\PowerShell-Statistics\Statistics' ]
        
        Required?                    true
        Position?                    1
        Default value                
        Accept pipeline input?       true (ByValue, ByPropertyName)
        Accept wildcard characters?  false
        
    -whatIf [<SwitchParameter>]
        Parameter to run a Test no-change pass [-Whatif switch]
        
        Required?                    false
        Position?                    named
        Default value                False
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    <CommonParameters>
        This cmdlet supports the common parameters: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer, PipelineVariable, and OutVariable. For more information, see 
        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216). 
    
INPUTS
    None. Does not accepted piped input.(.NET types, can add description)
    
    
OUTPUTS
    None. Returns no objects or output (.NET types)
    
    
NOTES
    
    
        Version     : 1.0.0
        Author      : Todd Kadrie
        Website     : http://www.toddomation.com
        Twitter     : @tostka / http://twitter.com/tostka
        CreatedDate : 2021-10-09
        FileName    : 
        License     : (none asserted)
        Copyright   : (none asserted)
        Github      : https://github.com/tostka/verb-XXX
        Tags        : Powershell
        AddedCredit : Kevin Marquette
        AddedWebsite: https://powershellexplained.com/2017-10-14-Powershell-module-semantic-version/
        AddedTwitter: 
        REVISIONS
        * 11:02 AM 1/15/2024 had various fundemental breaks - looks like was mid-revision, and not finished, and this isn't routinely used outside of new mods (or on processbuilk... 
        when not-preexisting .ps1): Fixes:
            - fixed $moddir.FullName -> $moddir ; 
            - researched it's use: it's not used in step-moduleversioncalculated (which has it's own copy of the logic), is used in uwps\processbulk-NewModule.ps1, not breaking 
        anything cuz running on existing fingerprint files
            - pulled in undefined varis from other calling scripts: $moddir, $modroot, if not defined; hard break in #187: $psd1MBasename (was using .psm1 rplc for a .psd1 file) ; 
            - fixed all $psd1m.fullname -> $psd1m ; added results test to the gcm -module block (break had no cmds comming back); fixed catch block w-w -fore use ; 
        * 2:29 PM 5/16/2022 add: backup-fileTDO of the fingerprintfile
        * 9:58 AM 10/26/2021 updated all echos, wh, ww, wv's with wlts's, updated KM logic to match step-ModuleVersionCalculated's latest
        * 6:11 PM 10/15/2021 rem'd # raa, replaced psd1/psm1-location code with Get-PSModuleFile(), which is a variant of BuildHelpers get-psModuleManifest. 
        * 12:36 PM 10/13/2021 added else block to catch mods with inconsistent names between root dir, and .psm1 file, (or even .psm1 location); upgraded catchblock to curr std; added 
        splats and verbose echos for debugging outlier processing errors
        * 7:41 PM 10/11/2021 cleaned up rem'd requires
        * 9:08 PM 10/9/2021 init version
    
    -------------------------- EXAMPLE 1 --------------------------
    
    PS>Initialize-ModuleFingerprint -path 'C:\sc\Get-MediaInfo' -whatif -verbose ;
    
    Fingerprint the specified module path, with whatif and verbose specified
    
    
    
    
    -------------------------- EXAMPLE 2 --------------------------
    
    PS C:\>$whatif = $true ;
    
    foreach($mod in $mods){
        if(test-path "$($mod)\fingerprint"){write-host -fore green "---`nPRESENT:$($mod)\fingerprint`n```" }
        else {Initialize-ModuleFingerprint -path $mod -whatif:$($whatif) -verbose} ;
    } ;
    Sample code to process list of module root directory paths and initialize fingerprints in the dirs currently lacking the files.
    
    
    
    
    
RELATED LINKS
    https://github.com/tostka/verb-dev
    https://powershellexplained.com/2017-10-14-Powershell-module-semantic-version/
    
    Requires -RunasAdministrator
    VALIDATORS: [ValidateNotNull()][ValidateNotNullOrEmpty()][ValidateLength(24,25)][ValidateLength(5)][ValidatePattern("some\sregex\sexpr")][ValidateSet("USEA","GBMK","AUSYD")][Validat
    eScript({Test-Path $_ -PathType 'Container'})][ValidateScript({Test-Path $_})][ValidateRange(21,65)][ValidateCount(1,3)] 



