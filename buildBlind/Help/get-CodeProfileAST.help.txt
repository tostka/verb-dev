
NAME
    get-CodeProfileAST
    
SYNOPSIS
    get-CodeProfileAST - Parse and return script/module/function compoonents, Module using Language.FunctionDefinitionAst parser
    
    
SYNTAX
    get-CodeProfileAST [-Path] <FileInfo> [-Functions] [-Parameters] [-Variables] [-Aliases] [-GenericCommands] [-All] [-showDebug] [-whatIf] [<CommonParameters>]
    
    
DESCRIPTION
    get-CodeProfileAST - Parse and return script/module/function compoonents, Module using Language.FunctionDefinitionAst parser
    

PARAMETERS
    -Path <FileInfo>
        
        Required?                    true
        Position?                    1
        Default value                
        Accept pipeline input?       true (ByValue, ByPropertyName)
        Accept wildcard characters?  false
        
    -Functions [<SwitchParameter>]
        Flag to return Functions-only [-Functions]
        
        Required?                    false
        Position?                    named
        Default value                False
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Parameters [<SwitchParameter>]
        
        Required?                    false
        Position?                    named
        Default value                False
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Variables [<SwitchParameter>]
        Flag to return Variables-only [-Variables]
        
        Required?                    false
        Position?                    named
        Default value                False
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -Aliases [<SwitchParameter>]
        Flag to return Aliases-only [-Aliases]
        
        Required?                    false
        Position?                    named
        Default value                False
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -GenericCommands [<SwitchParameter>]
        Flag to return GenericCommands-only [-GenericCommands]
        
        Required?                    false
        Position?                    named
        Default value                False
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -All [<SwitchParameter>]
        Flag to return All [-All]
        
        Required?                    false
        Position?                    named
        Default value                False
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -showDebug [<SwitchParameter>]
        Parameter to display Debugging messages [-ShowDebug switch]
        
        Required?                    false
        Position?                    named
        Default value                False
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    -whatIf [<SwitchParameter>]
        Parameter to run a Test no-change pass [-Whatif switch]
        
        Required?                    false
        Position?                    named
        Default value                False
        Accept pipeline input?       false
        Accept wildcard characters?  false
        
    <CommonParameters>
        This cmdlet supports the common parameters: Verbose, Debug,
        ErrorAction, ErrorVariable, WarningAction, WarningVariable,
        OutBuffer, PipelineVariable, and OutVariable. For more information, see 
        about_CommonParameters (https:/go.microsoft.com/fwlink/?LinkID=113216). 
    
INPUTS
    None
    
    
OUTPUTS
    Outputs a system.object containing:
    * Parameters : Details on all Parameters in the file
    * Functions : Details on all Functions in the file
    * VariableAssignments : Details on all Variables assigned in the file
    
    
NOTES
    
    
        Version     : 1.1.0
        Author      : Todd Kadrie
        Website     : https://www.toddomation.com
        Twitter     : @tostka / http://twitter.com/tostka
        CreatedDate : 3:56 PM 12/8/2019
        FileName    : get-CodeProfileAST.ps1
        License     : MIT License
        Copyright   : (c) 2019 Todd Kadrie
        Github      : https://github.com/tostka
        AddedCredit :
        AddedWebsite:
        AddedTwitter:
        REVISIONS
        * 8:44 AM 5/20/2022 flip output hash -> obj; renamed $fileparam -> $path; fliped $path from string to sys.fileinfo; 
            flipped AST call to include asttokens in returns; added verbose echos - runs 3m on big .psm1's (125 funcs)
        # 12:30 PM 4/28/2022 ren get-ScriptProfileAST -> get-CodeProfileAST, aliased original name (more descriptive, as covers .ps1|.psm1), add extension validator for -File; ren'd 
        -File -> Path, aliased: 'PSPath','File', strongly typed [string] (per BP).
        # 1:01 PM 5/27/2020 moved alias: profile-FileAST win func
        # 5:25 PM 2/29/2020 ren profile-FileASt -> get-ScriptProfileAST (aliased orig name)
        # * 7:50 AM 1/29/2020 added Cmdletbinding
        * 9:04 AM 12/30/2019 profile-FileAST: updated CBH: added .INPUTS & OUTPUTS, including hash properties returned
        * 3:56 PM 12/8/2019 INIT
    
    -------------------------- EXAMPLE 1 --------------------------
    
    PS C:\>$ASTProfile = get-CodeProfileAST -File c:\pathto\script.ps1 -showdebug:$($showdebug) -verbose:$VerbosePreference -whatif:$($whatif) ;
    
    Return the raw $ASTProfile object to the piepline (default behavior)
    
    
    
    
    -------------------------- EXAMPLE 2 --------------------------
    
    PS C:\>$FunctionNames = (get-CodeProfileAST -File c:\usr\work\exch\scripts\verb-dev.ps1 -Functions).functions.name ;
    
    Return the Functions within the specified script, and select the name properties of the functions object returned.
    
    
    
    
    -------------------------- EXAMPLE 3 --------------------------
    
    PS C:\>$AliasAssignments = (get-CodeProfileAST -File c:\usr\work\exch\scripts\verb-dev.ps1 -Aliases).Aliases.extent.text;
    
    Return the set/new-Alias commands from the specified script, selecting the full syntax of the command
    
    
    
    
    -------------------------- EXAMPLE 4 --------------------------
    
    PS C:\>$WhatifLines = ((get-CodeProfileAST -File c:\usr\work\exch\scripts\verb-dev.ps1 -GenericCommands).GenericCommands | ?{$_.extent -like '*whatif*' } | select -expand 
    extent).text
    
    Return any GenericCommands from the specified script, that have whatif within the line
    
    
    
    
    -------------------------- EXAMPLE 5 --------------------------
    
    PS C:\>$bRet = (get-CodeProfileAST -File c:\usr\work\exch\scripts\verb-dev.ps1 -All) ;
    
    $bRet.functions.name ;
    $bret.variables.extent.text
    $bret.aliases.extent.text
    
    Return ALL variant objects - Functions, Parameters, Variables, aliases, GenericCommands - from the specified script, and output the function names, variable names, and alias 
    assignement commands
    
    
    
    
    
RELATED LINKS
    



