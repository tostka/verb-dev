**********************
Windows PowerShell transcript start
Start time: 20240917130213
Username: TORO\kadritss
RunAs User: TORO\kadritss
Configuration Name: 
Machine: LYN-9C5CTV3 (Microsoft Windows NT 10.0.19045.0)
Host Application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
Process ID: 15248
PSVersion: 5.1.19041.4780
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.19041.4780
Platform: Win32NT
BuildVersion: 10.0.19041.4780
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
OS: Microsoft Windows NT 10.0.19045.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-io-Transcript-BATCH-EXEC-20240917-1302PM-trans-log.txt
13:02:13: INFO:  #*======v VERB-dev.psm1:verb-io v======
13:02:13: VERBOSE:  ($modRoot is blank, assigning from mandetory param:$ModDirPath)
13:02:13:(executing:Get-BuildEnvironment -Path c:\sc\verb-io 
(use -NoBuildInfo if hangs))
13:02:13: INFO:  Run: reset-ModulePublishingDirectory -ModuleName verb-io
VERBOSE: $PSBoundParameters:
Key        Value  
---        -----  
ModuleName verb-io
whatIf     False  
Verbose    True
13:02:13: ##  
#*------v PROCESSING : verb-io v------
13:02:13: INFO:  Pre-purge (CHANGELOG|README)\.md$ Root dir matches from :
processing:Resource...
13:02:13: INFO:  verb-io resolved $ModPubPath:C:\sc\verb-io\verb-io\
$ModResPath:C:\sc\verb-io\Resource\
13:02:13: VERBOSE:  (Reset module Resource files (purge from C:\sc\verb-io\verb-io\))
processing:Licenses...
13:02:13: INFO:  verb-io resolved $ModPubPath:C:\sc\verb-io\verb-io\
$ModResPath:C:\sc\verb-io\Licenses\
13:02:13: VERBOSE:  (Reset module Licenses files (purge from C:\sc\verb-io\verb-io\))
processing:Docs...
13:02:13: INFO:  verb-io resolved $ModPubPath:C:\sc\verb-io\verb-io\
$ModResPath:C:\sc\verb-io\Docs\
13:02:13: VERBOSE:  (Reset module Docs files (purge from C:\sc\verb-io\verb-io\))
13:02:13: INFO:  ==C:\sc\verb-io\CHANGELOG.md:
WARNING: removing matched C:\sc\verb-io\verb-io\CHANGELOG.md...
VERBOSE: Performing the operation "Remove File" on target "C:\sc\verb-io\verb-io\CHANGELOG.md".
13:02:13: INFO:  ==C:\sc\verb-io\README.md:
WARNING: removing matched C:\sc\verb-io\verb-io\README.md...
VERBOSE: Performing the operation "Remove File" on target "C:\sc\verb-io\verb-io\README.md".
13:02:13: INFO:  ==C:\sc\verb-io\Docs\Quick-Start-Installation-and-Example.md:
WARNING: removing matched C:\sc\verb-io\verb-io\Quick-Start-Installation-and-Example.md...
VERBOSE: Performing the operation "Remove File" on target "C:\sc\verb-io\verb-io\Quick-Start-Installation-and-Example.md".
13:02:13: INFO:  ==C:\sc\verb-io\Docs\test-MediaFile.jpg:
WARNING: removing matched C:\sc\verb-io\verb-io\test-MediaFile.jpg...
VERBOSE: Performing the operation "Remove File" on target "C:\sc\verb-io\verb-io\test-MediaFile.jpg".
13:02:13: ##  
#*------^ PROCESSING : verb-io ^------
13:02:13: INFO:  Run: populate-ModulePublishingDirectory -ModuleName verb-io
VERBOSE: $PSBoundParameters:
Key        Value  
---        -----  
ModuleName verb-io
whatIf     False  
Verbose    True
13:02:13: ##  
#*------v PROCESSING : verb-io v------
13:02:13: INFO:  Locating (CHANGELOG|README)\.md$ Root dir matches from :
processing:Resource...
13:02:13: INFO:  verb-io resolved $ModPubPath:C:\sc\verb-io\verb-io\
$ModResPath:C:\sc\verb-io\Resource\
13:02:13: VERBOSE:  (Recopy module Resource files (copy from C:\sc\verb-io\verb-io\))
processing:Licenses...
13:02:13: INFO:  verb-io resolved $ModPubPath:C:\sc\verb-io\verb-io\
$ModResPath:C:\sc\verb-io\Licenses\
13:02:13: VERBOSE:  (Recopy module Licenses files (copy from C:\sc\verb-io\verb-io\))
processing:Docs...
13:02:13: INFO:  verb-io resolved $ModPubPath:C:\sc\verb-io\verb-io\
$ModResPath:C:\sc\verb-io\Docs\
13:02:13: VERBOSE:  (Recopy module Docs files (copy from C:\sc\verb-io\verb-io\))
13:02:13: INFO:  copy-item w
Name                           Value                                                         
----                           -----                                                         
path                           {C:\sc\verb-io\CHANGELOG.md, C:\sc\verb-io\README.md, C:\sc...
destination                    C:\sc\verb-io\verb-io\                                        
force                          True                                                          
erroraction                    STOP                                                          
verbose                        True                                                          
whatif                         False
--$pltCI.path:
C:\sc\verb-io\CHANGELOG.md
C:\sc\verb-io\README.md
C:\sc\verb-io\Docs\Quick-Start-Installation-and-Example.md
C:\sc\verb-io\Docs\test-MediaFile.jpg
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-io\CHANGELOG.md Destination: C:\sc\verb-io\verb-io\CHANGELOG.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-io\README.md Destination: C:\sc\verb-io\verb-io\README.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-io\Docs\Quick-Start-Installation-and-Example.md Destination: C:\sc\verb-io\verb-io\Quick-Start-Installation-and-Example.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-io\Docs\test-MediaFile.jpg Destination: C:\sc\verb-io\verb-io\test-MediaFile.jpg".
13:02:13: ##  
#*------^ PROCESSING : verb-io ^------
13:02:13: INFO:  Validate updated verb-io\verb-io dir contents against Manifest:
Run: test-modulemanifest -Path C:\sc\verb-io\verb-io\verb-io.psd1
VERBOSE: Loading module from path 'C:\sc\verb-io\verb-io\verb-IO.psm1'.
13:02:13: VERBOSE:  ((no $ttmm_Err: test-ModuleManifest had no errors))
13:02:13: INFO:  NON-Republish pass detected:
MERGE parm specified as well:`n-Merge Public|Internal|Classes include subdirs module content into updated .psm1
-Sign updated files.
-Uninstall/Remove existing profile module
-Copy new module to profile
-Confirm: Get-Module -ListAvailable
-Check/Update existing Psd1 Version
-Publish-Module
-Remove existing installed profile module
-Test Install-Module
-Test Import-Module
13:02:13: INFO:  -Merge specified...
13:02:13: INFO:  ConvertTo-ModuleMergedTDO w
Name                           Value                                                         
----                           -----                                                         
ModuleName                     verb-io                                                       
ModuleSourcePath               {c:\sc\verb-io\Public, c:\sc\verb-io\Internal}                
ModuleDestinationPath          c:\sc\verb-io\verb-io                                         
RequiredVersion                15.0.0                                                        
LogSpec                        {logging, logfile, transcript}                                
NoAliasExport                                                                                
ErrorAction                    Stop                                                          
showdebug                      False                                                         
whatif                         False
VERBOSE: $PSBoundParameters:
Key                   Value                                         
---                   -----                                         
ModuleName            verb-io                                       
ModuleSourcePath      {c:\sc\verb-io\Public, c:\sc\verb-io\Internal}
ModuleDestinationPath c:\sc\verb-io\verb-io                         
RequiredVersion       15.0.0                                        
LogSpec               {logging, logfile, transcript}                
NoAliasExport         False                                         
ErrorAction           Stop                                          
showDebug             False                                         
whatIf                False
13:02:13: INFO:  ConvertTo-ModuleMergedTDO w
Name                           Value                                                         
----                           -----                                                         
ModuleName                     verb-io                                                       
ModuleSourcePath               {c:\sc\verb-io\Public, c:\sc\verb-io\Internal}                
ModuleDestinationPath          c:\sc\verb-io\verb-io                                         
RequiredVersion                15.0.0                                                        
LogSpec                        {logging, logfile, transcript}                                
NoAliasExport                                                                                
ErrorAction                    Stop                                                          
showdebug                      False                                                         
whatif                         False
VERBOSE: (backup-FileTDO -path c:\sc\verb-io\verb-io\verb-io.psm1)
VERBOSE: (backup-FileTDO -path c:\sc\verb-io\verb-io\verb-io.psd1)
DEADWOOD REMOVAL:remove-UnneededFileVariants w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-io\verb-io                                         
Include                        verb-io.psm1_*                                                
Pattern                        \.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$                               
FilterOn                       CreationTime                                                  
Keep                           2                                                             
KeepToday                      True                                                          
verbose                        True                                                          
whatif                         False
13:02:14:gci w
Name                           Value                                                         
----                           -----                                                         
path                           c:\sc\verb-io\verb-io\*                                       
include                        verb-io.psm1_*                                                
ErrorAction                    Stop
VERBOSE: $cuttime:09/17/2024 00:00:00
VERBOSE: post-filtering on pattern:\.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$
(5 in set *before* filtering)
(4 in set *after* filtering)
VERBOSE: filtering on files prior to $cuttime:09/17/2024 00:00:00 AM, on CreationTime property
(4 in set *before* filtering)
(3 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(3 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
13:02:14:Reducing matched population from 5 to 1 files via:
post-filtered files with regex pattern:\.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$
filtered files on CreationTime prior to 09/17/2024 00:00:00 AM
13:02:14:Remove-Item w 
Name                           Value                                                         
----                           -----                                                         
path                           C:\sc\verb-io\verb-io\verb-io.psm1_20240828-1651PM            
ErrorAction                    STOP                                                          
whatif                         False
13:02:14: INFO:  (NON-dyn psm1 detected - purging existing non-CBH content...)
VERBOSE: L13:02:14:(doesn't appear to be an inter meta-CBH block)
VERBOSE: adding $PostCBHBlock
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Value    {# verb-io.psm1...                                                                  
Path     c:\sc\verb-io\verb-io\verb-io.psm1_TMP                                              
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False
VERBOSE: 13:02:14:(Set-ContentFixEncoding:c:\sc\verb-io\verb-io\verb-io.psm1_TMP)
VERBOSE: 13:02:14:Set-Content w
Name                           Value                                                         
----                           -----                                                         
PassThru                       True                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
encoding                       UTF8                                                          
ErrorAction                    STOP
-Value[0,2]:
# verb-io.psm1
<#
13:02:14: INFO:  Initialize-PSModuleDirectories w
Name                           Value                                                         
----                           -----                                                         
ModuleSourcePath               {c:\sc\verb-io\Public, c:\sc\verb-io\Internal}                
ModuleDestinationPath          c:\sc\verb-io\verb-io                                         
ErrorAction                    Stop                                                          
whatif                         False
VERBOSE: $PSBoundParameters:
Key                   Value                                         
---                   -----                                         
ModuleSourcePath      {c:\sc\verb-io\Public, c:\sc\verb-io\Internal}
ModuleDestinationPath c:\sc\verb-io\verb-io                         
ErrorAction           Stop                                          
whatIf                False
VERBOSE: (non-pipeline - param - input)
13:02:14: INFO:  
#*------v (1/2):C:\sc\verb-io\Public v------
13:02:14: INFO:  Processing 160 $ComponentScripts files through Remove-AuthenticodeSignature...
13:02:14: INFO:  Remove-AuthenticodeSignature w
Name                           Value                                                         
----                           -----                                                         
Path                           {C:\sc\verb-io\Public\Add-ContentFixEncoding.ps1, C:\sc\ver...
whatif                         False                                                         
verbose                        True
VERBOSE: 13:02:14:((1/160):C:\sc\verb-io\Public\Add-ContentFixEncoding.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:14:((2/160):C:\sc\verb-io\Public\Add-DirectoryWatch.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:14:((3/160):C:\sc\verb-io\Public\Add-PSTitleBar.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:14:((4/160):C:\sc\verb-io\Public\Authenticate-File.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:14:((5/160):C:\sc\verb-io\Public\backup-FileTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:14:((6/160):C:\sc\verb-io\Public\clear-HostIndent.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:14:((7/160):C:\sc\verb-io\Public\Close-IfAlreadyRunning.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((8/160):C:\sc\verb-io\Public\Compare-ObjectsSideBySide.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((9/160):C:\sc\verb-io\Public\Compare-ObjectsSideBySide3.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((10/160):C:\sc\verb-io\Public\Compare-ObjectsSideBySide4.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((11/160):C:\sc\verb-io\Public\Compress-ArchiveFile.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((12/160):C:\sc\verb-io\Public\convert-BinaryToDecimalStorageUnits.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((13/160):C:\sc\verb-io\Public\convert-ColorHexCodeToWindowsMediaColorsName.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((14/160):C:\sc\verb-io\Public\convert-DehydratedBytesToGB.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((15/160):C:\sc\verb-io\Public\convert-DehydratedBytesToMB.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((16/160):C:\sc\verb-io\Public\Convert-FileEncoding.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((17/160):C:\sc\verb-io\Public\ConvertFrom-CanonicalOU.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((18/160):C:\sc\verb-io\Public\ConvertFrom-CanonicalUser.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((19/160):C:\sc\verb-io\Public\ConvertFrom-CmdList.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((20/160):C:\sc\verb-io\Public\ConvertFrom-DN.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((21/160):C:\sc\verb-io\Public\ConvertFrom-IniFile.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((22/160):C:\sc\verb-io\Public\convertFrom-MarkdownTable.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((23/160):C:\sc\verb-io\Public\ConvertFrom-SourceTable.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((24/160):C:\sc\verb-io\Public\ConvertFrom-UncPath.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((25/160):C:\sc\verb-io\Public\convert-HelpToMarkdown.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((26/160):C:\sc\verb-io\Public\Convert-NumbertoWords.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((27/160):C:\sc\verb-io\Public\ConvertTo-HashIndexed.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((28/160):C:\sc\verb-io\Public\convertto-MarkdownTable.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((29/160):C:\sc\verb-io\Public\convertTo-Object.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((30/160):C:\sc\verb-io\Public\ConvertTo-SRT.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((31/160):C:\sc\verb-io\Public\ConvertTo-UncPath.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((32/160):C:\sc\verb-io\Public\convert-VideoToMp3.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((33/160):C:\sc\verb-io\Public\copy-Profile.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((34/160):C:\sc\verb-io\Public\copy-ProfileTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((35/160):C:\sc\verb-io\Public\count-object.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((36/160):C:\sc\verb-io\Public\Create-ScheduledTaskLegacy.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((37/160):C:\sc\verb-io\Public\dump-Shortcuts.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((38/160):C:\sc\verb-io\Public\Echo-Finish.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((39/160):C:\sc\verb-io\Public\Echo-ScriptEnd.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((40/160):C:\sc\verb-io\Public\Echo-Start.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((41/160):C:\sc\verb-io\Public\Expand-ArchiveFile.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((42/160):C:\sc\verb-io\Public\Expand-IsoFile.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((43/160):C:\sc\verb-io\Public\extract-Icon.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((44/160):C:\sc\verb-io\Public\Find-LockedFileProcess.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((45/160):C:\sc\verb-io\Public\Format-Json.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((46/160):C:\sc\verb-io\Public\get-AliasDefinition.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((47/160):C:\sc\verb-io\Public\Get-AverageItems.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((48/160):C:\sc\verb-io\Public\get-colorcombo.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((49/160):C:\sc\verb-io\Public\get-ColorNames.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((50/160):C:\sc\verb-io\Public\Get-CombinationTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((51/160):C:\sc\verb-io\Public\get-ConsoleText.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((52/160):C:\sc\verb-io\Public\Get-CountItems.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((53/160):C:\sc\verb-io\Public\Get-FileEncoding.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((54/160):C:\sc\verb-io\Public\Get-FileEncodingExtended.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((55/160):C:\sc\verb-io\Public\get-filesignature.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((56/160):C:\sc\verb-io\Public\get-FileType.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((57/160):C:\sc\verb-io\Public\get-FolderEmpty.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((58/160):C:\sc\verb-io\Public\Get-FolderSize.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((59/160):C:\sc\verb-io\Public\Get-FolderSize2.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((60/160):C:\sc\verb-io\Public\Get-FsoShortName.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((61/160):C:\sc\verb-io\Public\Get-FsoShortPath.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((62/160):C:\sc\verb-io\Public\Get-FsoTypeObj.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((63/160):C:\sc\verb-io\Public\get-HostIndent.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((64/160):C:\sc\verb-io\Public\Get-KnownFolderTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((65/160):C:\sc\verb-io\Public\get-LoremName.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((66/160):C:\sc\verb-io\Public\Get-PermutationTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((67/160):C:\sc\verb-io\Public\Get-ProductItems.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((68/160):C:\sc\verb-io\Public\get-ProfileFilesTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((69/160):C:\sc\verb-io\Public\get-RegistryValue.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((70/160):C:\sc\verb-io\Public\Get-ScheduledTaskLegacy.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((71/160):C:\sc\verb-io\Public\Get-Shortcut.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((72/160):C:\sc\verb-io\Public\Get-SumItems.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((73/160):C:\sc\verb-io\Public\get-TaskReport.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((74/160):C:\sc\verb-io\Public\Get-Time.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((75/160):C:\sc\verb-io\Public\Get-TimeStamp.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((76/160):C:\sc\verb-io\Public\get-TimeStampNow.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((77/160):C:\sc\verb-io\Public\get-Uptime.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((78/160):C:\sc\verb-io\Public\Invoke-Flasher.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((79/160):C:\sc\verb-io\Public\Invoke-Pause.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((80/160):C:\sc\verb-io\Public\Invoke-Pause2.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((81/160):C:\sc\verb-io\Public\invoke-SoundCue.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((82/160):C:\sc\verb-io\Public\Invoke-TakeownFileTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((83/160):C:\sc\verb-io\Public\Invoke-TakeownFolderTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((84/160):C:\sc\verb-io\Public\Invoke-TakeownRegistryTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((85/160):C:\sc\verb-io\Public\mount-UnavailableMappedDrives.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((86/160):C:\sc\verb-io\Public\move-FileOnReboot.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((87/160):C:\sc\verb-io\Public\New-RandomFilename.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((88/160):C:\sc\verb-io\Public\new-Shortcut.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((89/160):C:\sc\verb-io\Public\out-Clipboard.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((90/160):C:\sc\verb-io\Public\Out-Excel.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((91/160):C:\sc\verb-io\Public\Out-Excel-Events.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((92/160):C:\sc\verb-io\Public\parse-PSTitleBar.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((93/160):C:\sc\verb-io\Public\play-beep.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((94/160):C:\sc\verb-io\Public\pop-HostIndent.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((95/160):C:\sc\verb-io\Public\Pop-LocationFirst.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((96/160):C:\sc\verb-io\Public\prompt-Continue.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((97/160):C:\sc\verb-io\Public\push-HostIndent.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((98/160):C:\sc\verb-io\Public\Read-FolderBrowserDialog.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((99/160):C:\sc\verb-io\Public\read-Host2.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((100/160):C:\sc\verb-io\Public\Read-InputBoxChoice.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((101/160):C:\sc\verb-io\Public\Read-InputBoxChoiceHostUI.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((102/160):C:\sc\verb-io\Public\Read-InputBoxDialog.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((103/160):C:\sc\verb-io\Public\Read-MessageBoxDialog.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((104/160):C:\sc\verb-io\Public\Read-MultiLineInputBoxDialog.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((105/160):C:\sc\verb-io\Public\read-MultiLineInputDialogAdvanced.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((106/160):C:\sc\verb-io\Public\Read-OpenFileDialog.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((107/160):C:\sc\verb-io\Public\Read-PasswordInputBoxDialog.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((108/160):C:\sc\verb-io\Public\rebuild-PSTitleBar.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((109/160):C:\sc\verb-io\Public\Remove-AuthenticodeSignature.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((110/160):C:\sc\verb-io\Public\Remove-DirectoryWatch.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((111/160):C:\sc\verb-io\Public\Remove-InvalidFileNameChars.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((112/160):C:\sc\verb-io\Public\Remove-InvalidVariableNameChars.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((113/160):C:\sc\verb-io\Public\remove-ItemRetry.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((114/160):C:\sc\verb-io\Public\remove-JsonComments.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((115/160):C:\sc\verb-io\Public\Remove-PSTitleBar.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((116/160):C:\sc\verb-io\Public\Remove-ScheduledTaskLegacy.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((117/160):C:\sc\verb-io\Public\remove-UnneededFileVariants.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((118/160):C:\sc\verb-io\Public\repair-FileEncoding.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((119/160):C:\sc\verb-io\Public\replace-PSTitleBarText.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((120/160):C:\sc\verb-io\Public\reset-ConsoleColors.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((121/160):C:\sc\verb-io\Public\reset-HostIndent.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((122/160):C:\sc\verb-io\Public\restore-FileTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((123/160):C:\sc\verb-io\Public\Run-ScheduledTaskLegacy.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((124/160):C:\sc\verb-io\Public\Save-ConsoleOutputToClipBoard.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((125/160):C:\sc\verb-io\Public\search-Excel.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((126/160):C:\sc\verb-io\Public\select-first.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((127/160):C:\sc\verb-io\Public\select-last.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((128/160):C:\sc\verb-io\Public\Select-StringAll.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((129/160):C:\sc\verb-io\Public\set-AuthenticodeSignatureTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((130/160):C:\sc\verb-io\Public\set-ConsoleColors.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((131/160):C:\sc\verb-io\Public\Set-ContentFixEncoding.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((132/160):C:\sc\verb-io\Public\set-FileAssociation.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((133/160):C:\sc\verb-io\Public\set-HostIndent.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((134/160):C:\sc\verb-io\Public\set-ItemReadOnlyTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((135/160):C:\sc\verb-io\Public\set-PSTitleBar.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((136/160):C:\sc\verb-io\Public\Set-RegistryValue.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((137/160):C:\sc\verb-io\Public\Set-Shortcut.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((138/160):C:\sc\verb-io\Public\Shorten-Path.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((139/160):C:\sc\verb-io\Public\Show-MsgBox.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((140/160):C:\sc\verb-io\Public\Start-SleepCountdown.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((141/160):C:\sc\verb-io\Public\stop-driveburn.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((142/160):C:\sc\verb-io\Public\test-FileLock.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((143/160):C:\sc\verb-io\Public\test-FileSysAutomaticVariables.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((144/160):C:\sc\verb-io\Public\test-IsLink.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((145/160):C:\sc\verb-io\Public\test-IsUncPath.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((146/160):C:\sc\verb-io\Public\test-LineEndings.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((147/160):C:\sc\verb-io\Public\test-MediaFile.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((148/160):C:\sc\verb-io\Public\test-MissingMediaSummary.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((149/160):C:\sc\verb-io\Public\Test-PendingReboot.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((150/160):C:\sc\verb-io\Public\test-PSTitleBar.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((151/160):C:\sc\verb-io\Public\Test-RegistryKey.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((152/160):C:\sc\verb-io\Public\Test-RegistryValue.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((153/160):C:\sc\verb-io\Public\Test-RegistryValueNotNull.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((154/160):C:\sc\verb-io\Public\Touch-File.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((155/160):C:\sc\verb-io\Public\trim-FileList.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((156/160):C:\sc\verb-io\Public\unless.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((157/160):C:\sc\verb-io\Public\write-hostCallOutTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((158/160):C:\sc\verb-io\Public\write-hostColorMatch.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((159/160):C:\sc\verb-io\Public\write-HostIndent.ps1:has no existing Authenticode signature)
VERBOSE: 13:02:15:((160/160):C:\sc\verb-io\Public\Write-ProgressHelper.ps1:has no existing Authenticode signature)
13:02:15: INFO:  Processing (1/160):C:\sc\verb-io\Public\Add-ContentFixEncoding.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Add-ContentFixEncoding.ps1 v------
function Add-ContentFixEncoding {
13:02:15: INFO:  Processing (2/160):C:\sc\verb-io\Public\Add-DirectoryWatch.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Add-DirectoryWatch.ps1 v------
Function Add-DirectoryWatch {
13:02:15: INFO:  Processing (3/160):C:\sc\verb-io\Public\Add-PSTitleBar.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Add-PSTitleBar.ps1 v------
Function Add-PSTitleBar {
13:02:15: INFO:  Processing (4/160):C:\sc\verb-io\Public\Authenticate-File.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Authenticate-File.ps1 v------
function Authenticate-File {
13:02:15: INFO:  Processing (5/160):C:\sc\verb-io\Public\backup-FileTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v backup-FileTDO.ps1 v------
function backup-FileTDO {
13:02:15: INFO:  Processing (6/160):C:\sc\verb-io\Public\clear-HostIndent.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v clear-HostIndent.ps1 v------
function clear-HostIndent {
13:02:15: INFO:  Processing (7/160):C:\sc\verb-io\Public\Close-IfAlreadyRunning.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Close-IfAlreadyRunning.ps1 v------
Function Close-IfAlreadyRunning {
13:02:15: INFO:  Processing (8/160):C:\sc\verb-io\Public\Compare-ObjectsSideBySide.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Compare-ObjectsSideBySide.ps1 v------
function Compare-ObjectsSideBySide{
13:02:15: INFO:  Processing (9/160):C:\sc\verb-io\Public\Compare-ObjectsSideBySide3.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Compare-ObjectsSideBySide3.ps1 v------
function Compare-ObjectsSideBySide3 {
13:02:15: INFO:  Processing (10/160):C:\sc\verb-io\Public\Compare-ObjectsSideBySide4.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Compare-ObjectsSideBySide4.ps1 v------
function Compare-ObjectsSideBySide4 {
13:02:15: INFO:  Processing (11/160):C:\sc\verb-io\Public\Compress-ArchiveFile.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Compress-ArchiveFile.ps1 v------
function Compress-ArchiveFile {
13:02:15: INFO:  Processing (12/160):C:\sc\verb-io\Public\convert-BinaryToDecimalStorageUnits.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-BinaryToDecimalStorageUnits.ps1 v------
Function convert-BinaryToDecimalStorageUnits {
13:02:15: INFO:  Processing (13/160):C:\sc\verb-io\Public\convert-ColorHexCodeToWindowsMediaColorsName.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-ColorHexCodeToWindowsMediaColorsName.ps1 v------
Function convert-ColorHexCodeToWindowsMediaColorsName {
13:02:15: INFO:  Processing (14/160):C:\sc\verb-io\Public\convert-DehydratedBytesToGB.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-DehydratedBytesToGB.ps1 v------
Function convert-DehydratedBytesToGB {
13:02:15: INFO:  Processing (15/160):C:\sc\verb-io\Public\convert-DehydratedBytesToMB.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-DehydratedBytesToMB.ps1 v------
Function convert-DehydratedBytesToMB {
13:02:15: INFO:  Processing (16/160):C:\sc\verb-io\Public\Convert-FileEncoding.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Convert-FileEncoding.ps1 v------
function Convert-FileEncoding {
13:02:15: INFO:  Processing (17/160):C:\sc\verb-io\Public\ConvertFrom-CanonicalOU.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertFrom-CanonicalOU.ps1 v------
function ConvertFrom-CanonicalOU {
13:02:15: INFO:  Processing (18/160):C:\sc\verb-io\Public\ConvertFrom-CanonicalUser.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertFrom-CanonicalUser.ps1 v------
function ConvertFrom-CanonicalUser {
13:02:15: INFO:  Processing (19/160):C:\sc\verb-io\Public\ConvertFrom-CmdList.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertFrom-CmdList.ps1 v------
filter ConvertFrom-CmdList {
13:02:15: INFO:  Processing (20/160):C:\sc\verb-io\Public\ConvertFrom-DN.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertFrom-DN.ps1 v------
function ConvertFrom-DN {
13:02:15: INFO:  Processing (21/160):C:\sc\verb-io\Public\ConvertFrom-IniFile.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertFrom-IniFile.ps1 v------
Function ConvertFrom-IniFile {
13:02:15: INFO:  Processing (22/160):C:\sc\verb-io\Public\convertFrom-MarkdownTable.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertFrom-MarkdownTable.ps1 v------
Function convertFrom-MarkdownTable {
13:02:15: INFO:  Processing (23/160):C:\sc\verb-io\Public\ConvertFrom-SourceTable.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertFrom-SourceTable.ps1 v------
if($host.version.major -gt 2){
13:02:15: INFO:  Processing (24/160):C:\sc\verb-io\Public\ConvertFrom-UncPath.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:15:(Add-ContentFixEncoding:)
VERBOSE: 13:02:15:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertFrom-UncPath.ps1 v------
Function ConvertFrom-UncPath {
13:02:16: INFO:  Processing (25/160):C:\sc\verb-io\Public\convert-HelpToMarkdown.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-HelpToMarkdown.ps1 v------
Function convert-HelpToMarkdown {
13:02:16: INFO:  Processing (26/160):C:\sc\verb-io\Public\Convert-NumbertoWords.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Convert-NumbertoWords.ps1 v------
function Convert-NumbertoWords {
13:02:16: INFO:  Processing (27/160):C:\sc\verb-io\Public\ConvertTo-HashIndexed.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertTo-HashIndexed.ps1 v------
Function ConvertTo-HashIndexed {
13:02:16: INFO:  Processing (28/160):C:\sc\verb-io\Public\convertto-MarkdownTable.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertto-MarkdownTable.ps1 v------
Function convertTo-MarkdownTable {
13:02:16: INFO:  Processing (29/160):C:\sc\verb-io\Public\convertTo-Object.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertTo-Object.ps1 v------
Function convertTo-Object {
13:02:16: INFO:  Processing (30/160):C:\sc\verb-io\Public\ConvertTo-SRT.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertTo-SRT.ps1 v------
function ConvertTo-SRT {
13:02:16: INFO:  Processing (31/160):C:\sc\verb-io\Public\ConvertTo-UncPath.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertTo-UncPath.ps1 v------
Function ConvertTo-UncPath {
13:02:16: INFO:  Processing (32/160):C:\sc\verb-io\Public\convert-VideoToMp3.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-VideoToMp3.ps1 v------
function convert-VideoToMp3 {
13:02:16: INFO:  Processing (33/160):C:\sc\verb-io\Public\copy-Profile.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v copy-Profile.ps1 v------
function copy-Profile {
13:02:16: INFO:  Processing (34/160):C:\sc\verb-io\Public\copy-ProfileTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v copy-ProfileTDO.ps1 v------
function copy-ProfileTDO {
13:02:16: INFO:  Processing (35/160):C:\sc\verb-io\Public\count-object.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v count-object.ps1 v------
function Count-Object {
13:02:16: INFO:  Processing (36/160):C:\sc\verb-io\Public\Create-ScheduledTaskLegacy.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Create-ScheduledTaskLegacy.ps1 v------
Function Create-ScheduledTaskLegacy {
13:02:16: INFO:  Processing (37/160):C:\sc\verb-io\Public\dump-Shortcuts.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v dump-Shortcuts.ps1 v------
function dump-Shortcuts {
13:02:16: INFO:  Processing (38/160):C:\sc\verb-io\Public\Echo-Finish.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Echo-Finish.ps1 v------
Function Echo-Finish {
13:02:16: INFO:  Processing (39/160):C:\sc\verb-io\Public\Echo-ScriptEnd.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Echo-ScriptEnd.ps1 v------
Function Echo-ScriptEnd {
13:02:16: INFO:  Processing (40/160):C:\sc\verb-io\Public\Echo-Start.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Echo-Start.ps1 v------
Function Echo-Start {
13:02:16: INFO:  Processing (41/160):C:\sc\verb-io\Public\Expand-ArchiveFile.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Expand-ArchiveFile.ps1 v------
function Expand-ArchiveFile {
13:02:16: INFO:  Processing (42/160):C:\sc\verb-io\Public\Expand-IsoFile.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Expand-IsoFile.ps1 v------
Function Expand-ISOFileTDO {
13:02:16: INFO:  Processing (43/160):C:\sc\verb-io\Public\extract-Icon.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v extract-Icon.ps1 v------
Function extract-Icon {
13:02:16: INFO:  Processing (44/160):C:\sc\verb-io\Public\Find-LockedFileProcess.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Find-LockedFileProcess.ps1 v------
function Find-LockedFileProcess {
13:02:16: INFO:  Processing (45/160):C:\sc\verb-io\Public\Format-Json.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Format-Json.ps1 v------
function Format-Json {
13:02:16: INFO:  Processing (46/160):C:\sc\verb-io\Public\get-AliasDefinition.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:16:(Add-ContentFixEncoding:)
VERBOSE: 13:02:16:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-AliasDefinition.ps1 v------
Function get-AliasDefinition {
13:02:17: INFO:  Processing (47/160):C:\sc\verb-io\Public\Get-AverageItems.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-AverageItems.ps1 v------
function Get-AverageItems {
13:02:17: INFO:  Processing (48/160):C:\sc\verb-io\Public\get-colorcombo.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-colorcombo.ps1 v------
function get-colorcombo {
13:02:17: INFO:  Processing (49/160):C:\sc\verb-io\Public\get-ColorNames.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-ColorNames.ps1 v------
function get-ColorNames {
13:02:17: INFO:  Processing (50/160):C:\sc\verb-io\Public\Get-CombinationTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-CombinationTDO.ps1 v------
function Get-CombinationTDO {
13:02:17: INFO:  Processing (51/160):C:\sc\verb-io\Public\get-ConsoleText.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-ConsoleText.ps1 v------
Function get-ConsoleText {
13:02:17: INFO:  Processing (52/160):C:\sc\verb-io\Public\Get-CountItems.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-CountItems.ps1 v------
function Get-CountItems {
13:02:17: INFO:  Processing (53/160):C:\sc\verb-io\Public\Get-FileEncoding.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-FileEncoding.ps1 v------
function Get-FileEncoding {
13:02:17: INFO:  Processing (54/160):C:\sc\verb-io\Public\Get-FileEncodingExtended.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-FileEncodingExtended.ps1 v------
function Get-FileEncodingExtended {
13:02:17: INFO:  Processing (55/160):C:\sc\verb-io\Public\get-filesignature.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-filesignature.ps1 v------
Function get-filesignature {
13:02:17: INFO:  Processing (56/160):C:\sc\verb-io\Public\get-FileType.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-FileType.ps1 v------
function Get-FileType {
13:02:17: INFO:  Processing (57/160):C:\sc\verb-io\Public\get-FolderEmpty.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-FolderEmpty.ps1 v------
Function get-FolderEmpty {
13:02:17: INFO:  Processing (58/160):C:\sc\verb-io\Public\Get-FolderSize.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-FolderSize.ps1 v------
function Get-FolderSize {
13:02:17: INFO:  Processing (59/160):C:\sc\verb-io\Public\Get-FolderSize2.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-FolderSize2.ps1 v------
Function Get-FolderSize2 {
13:02:17: INFO:  Processing (60/160):C:\sc\verb-io\Public\Get-FsoShortName.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-FsoShortName.ps1 v------
Function Get-FsoShortName {
13:02:17: INFO:  Processing (61/160):C:\sc\verb-io\Public\Get-FsoShortPath.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-FsoShortPath.ps1 v------
Function Get-FsoShortPath {
13:02:17: INFO:  Processing (62/160):C:\sc\verb-io\Public\Get-FsoTypeObj.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-FsoTypeObj.ps1 v------
Function Get-FsoTypeObj {
13:02:17: INFO:  Processing (63/160):C:\sc\verb-io\Public\get-HostIndent.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-HostIndent.ps1 v------
function get-HostIndent {
13:02:17: INFO:  Processing (64/160):C:\sc\verb-io\Public\Get-KnownFolderTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-KnownFolderTDO.ps1 v------
Function Get-KnownFolderTDO {
13:02:17: INFO:  Processing (65/160):C:\sc\verb-io\Public\get-LoremName.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-LoremName.ps1 v------
function get-LoremName {
13:02:17: INFO:  Processing (66/160):C:\sc\verb-io\Public\Get-PermutationTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-PermutationTDO.ps1 v------
function Get-PermutationTDO {
13:02:17: INFO:  Processing (67/160):C:\sc\verb-io\Public\Get-ProductItems.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-ProductItems.ps1 v------
function Get-ProductItems {
13:02:17: INFO:  Processing (68/160):C:\sc\verb-io\Public\get-ProfileFilesTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-ProfileFilesTDO.ps1 v------
function get-ProfileFilesTDO {
13:02:17: INFO:  Processing (69/160):C:\sc\verb-io\Public\get-RegistryValue.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-RegistryValue.ps1 v------
function get-RegistryValue {
13:02:17: INFO:  Processing (70/160):C:\sc\verb-io\Public\Get-ScheduledTaskLegacy.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-ScheduledTaskLegacy.ps1 v------
Function Get-ScheduledTaskLegacy {
13:02:17: INFO:  Processing (71/160):C:\sc\verb-io\Public\Get-Shortcut.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-Shortcut.ps1 v------
function Get-Shortcut {
13:02:17: INFO:  Processing (72/160):C:\sc\verb-io\Public\Get-SumItems.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-SumItems.ps1 v------
function Get-SumItems {
13:02:17: INFO:  Processing (73/160):C:\sc\verb-io\Public\get-TaskReport.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-TaskReport.ps1 v------
function get-TaskReport {
13:02:17: INFO:  Processing (74/160):C:\sc\verb-io\Public\Get-Time.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-Time.ps1 v------
function Get-Time {
13:02:17: INFO:  Processing (75/160):C:\sc\verb-io\Public\Get-TimeStamp.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-TimeStamp.ps1 v------
function Get-TimeStamp {
13:02:17: INFO:  Processing (76/160):C:\sc\verb-io\Public\get-TimeStampNow.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-TimeStampNow.ps1 v------
Function get-TimeStampNow () {
13:02:17: INFO:  Processing (77/160):C:\sc\verb-io\Public\get-Uptime.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-Uptime.ps1 v------
function get-Uptime {
13:02:17: INFO:  Processing (78/160):C:\sc\verb-io\Public\Invoke-Flasher.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Invoke-Flasher.ps1 v------
Function Invoke-Flasher {
13:02:17: INFO:  Processing (79/160):C:\sc\verb-io\Public\Invoke-Pause.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Invoke-Pause.ps1 v------
Function Invoke-Pause() {
13:02:17: INFO:  Processing (80/160):C:\sc\verb-io\Public\Invoke-Pause2.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Invoke-Pause2.ps1 v------
Function Invoke-Pause2() {
13:02:17: INFO:  Processing (81/160):C:\sc\verb-io\Public\invoke-SoundCue.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v invoke-SoundCue.ps1 v------
function invoke-SoundCue{
13:02:17: INFO:  Processing (82/160):C:\sc\verb-io\Public\Invoke-TakeownFileTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Invoke-TakeownFileTDO.ps1 v------
Function Invoke-TakeownFileTDO {
13:02:17: INFO:  Processing (83/160):C:\sc\verb-io\Public\Invoke-TakeownFolderTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Invoke-TakeownFolderTDO.ps1 v------
Function Invoke-TakeownFolderTDO {
13:02:17: INFO:  Processing (84/160):C:\sc\verb-io\Public\Invoke-TakeownRegistryTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Invoke-TakeownRegistryTDO.ps1 v------
Function Invoke-TakeownRegistryTDO {
13:02:17: INFO:  Processing (85/160):C:\sc\verb-io\Public\mount-UnavailableMappedDrives.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v mount-UnavailableMappedDrives.ps1 v------
Function mount-UnavailableMappedDrives{
13:02:17: INFO:  Processing (86/160):C:\sc\verb-io\Public\move-FileOnReboot.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v move-FileOnReboot.ps1 v------
function move-FileOnReboot {
13:02:17: INFO:  Processing (87/160):C:\sc\verb-io\Public\New-RandomFilename.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v New-RandomFilename.ps1 v------
function New-RandomFilename{
13:02:17: INFO:  Processing (88/160):C:\sc\verb-io\Public\new-Shortcut.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v new-Shortcut.ps1 v------
function new-Shortcut {
13:02:17: INFO:  Processing (89/160):C:\sc\verb-io\Public\out-Clipboard.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v out-Clipboard.ps1 v------
Function out-Clipboard {
13:02:17: INFO:  Processing (90/160):C:\sc\verb-io\Public\Out-Excel.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Out-Excel.ps1 v------
function Out-Excel {
13:02:17: INFO:  Processing (91/160):C:\sc\verb-io\Public\Out-Excel-Events.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Out-Excel-Events.ps1 v------
function Out-Excel-Events {
13:02:17: INFO:  Processing (92/160):C:\sc\verb-io\Public\parse-PSTitleBar.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:17:(Add-ContentFixEncoding:)
VERBOSE: 13:02:17:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v parse-PSTitleBar.ps1 v------
Function parse-PSTitleBar {
13:02:18: INFO:  Processing (93/160):C:\sc\verb-io\Public\play-beep.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v play-beep.ps1 v------
function play-beep {
13:02:18: INFO:  Processing (94/160):C:\sc\verb-io\Public\pop-HostIndent.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v pop-HostIndent.ps1 v------
function pop-HostIndent {
13:02:18: INFO:  Processing (95/160):C:\sc\verb-io\Public\Pop-LocationFirst.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Pop-LocationFirst.ps1 v------
function Pop-LocationFirst {
13:02:18: INFO:  Processing (96/160):C:\sc\verb-io\Public\prompt-Continue.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v prompt-Continue.ps1 v------
Function prompt-Continue {
13:02:18: INFO:  Processing (97/160):C:\sc\verb-io\Public\push-HostIndent.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v push-HostIndent.ps1 v------
function push-HostIndent {
13:02:18: INFO:  Processing (98/160):C:\sc\verb-io\Public\Read-FolderBrowserDialog.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Read-FolderBrowserDialog.ps1 v------
function Read-FolderBrowserDialog {
13:02:18: INFO:  Processing (99/160):C:\sc\verb-io\Public\read-Host2.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v read-Host2.ps1 v------
Function Read-Host2 {
13:02:18: INFO:  Processing (100/160):C:\sc\verb-io\Public\Read-InputBoxChoice.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Read-InputBoxChoice.ps1 v------
function Read-InputBoxChoice {
13:02:18: INFO:  Processing (101/160):C:\sc\verb-io\Public\Read-InputBoxChoiceHostUI.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Read-InputBoxChoiceHostUI.ps1 v------
function Read-InputBoxChoiceHostUI {
13:02:18: INFO:  Processing (102/160):C:\sc\verb-io\Public\Read-InputBoxDialog.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Read-InputBoxDialog.ps1 v------
function Read-InputBoxDialog {
13:02:18: INFO:  Processing (103/160):C:\sc\verb-io\Public\Read-MessageBoxDialog.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Read-MessageBoxDialog.ps1 v------
function Read-MessageBoxDialog {
13:02:18: INFO:  Processing (104/160):C:\sc\verb-io\Public\Read-MultiLineInputBoxDialog.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Read-MultiLineInputBoxDialog.ps1 v------
function read-MultiLineInputDialogAdvanced {
13:02:18: INFO:  Processing (105/160):C:\sc\verb-io\Public\read-MultiLineInputDialogAdvanced.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v read-MultiLineInputDialogAdvanced.ps1 v------
function read-MultiLineInputDialogAdvanced {
13:02:18: INFO:  Processing (106/160):C:\sc\verb-io\Public\Read-OpenFileDialog.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Read-OpenFileDialog.ps1 v------
function Read-OpenFileDialog {
13:02:18: INFO:  Processing (107/160):C:\sc\verb-io\Public\Read-PasswordInputBoxDialog.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Read-PasswordInputBoxDialog.ps1 v------
function Read-PasswordInputBoxDialog {
13:02:18: INFO:  Processing (108/160):C:\sc\verb-io\Public\rebuild-PSTitleBar.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v rebuild-PSTitleBar.ps1 v------
Function rebuild-PSTitleBar {
13:02:18: INFO:  Processing (109/160):C:\sc\verb-io\Public\Remove-AuthenticodeSignature.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-AuthenticodeSignature.ps1 v------
function Remove-AuthenticodeSignature {
13:02:18: INFO:  Processing (110/160):C:\sc\verb-io\Public\Remove-DirectoryWatch.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-DirectoryWatch.ps1 v------
Function Remove-DirectoryWatch {
13:02:18: INFO:  Processing (111/160):C:\sc\verb-io\Public\Remove-InvalidFileNameChars.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-InvalidFileNameChars.ps1 v------
Function Remove-InvalidFileNameChars {
13:02:18: INFO:  Processing (112/160):C:\sc\verb-io\Public\Remove-InvalidVariableNameChars.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-InvalidVariableNameChars.ps1 v------
Function Remove-InvalidVariableNameChars {
13:02:18: INFO:  Processing (113/160):C:\sc\verb-io\Public\remove-ItemRetry.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v remove-ItemRetry.ps1 v------
function remove-ItemRetry {
13:02:18: INFO:  Processing (114/160):C:\sc\verb-io\Public\remove-JsonComments.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v remove-JsonComments.ps1 v------
Function Remove-JsonComments{
13:02:18: INFO:  Processing (115/160):C:\sc\verb-io\Public\Remove-PSTitleBar.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-PSTitleBar.ps1 v------
Function Remove-PSTitleBar {
13:02:18: INFO:  Processing (116/160):C:\sc\verb-io\Public\Remove-ScheduledTaskLegacy.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-ScheduledTaskLegacy.ps1 v------
Function Remove-ScheduledTaskLegacy {
13:02:18: INFO:  Processing (117/160):C:\sc\verb-io\Public\remove-UnneededFileVariants.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v remove-UnneededFileVariants.ps1 v------
function remove-UnneededFileVariants {
13:02:18: INFO:  Processing (118/160):C:\sc\verb-io\Public\repair-FileEncoding.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v repair-FileEncoding.ps1 v------
function repair-FileEncoding {
13:02:18: INFO:  Processing (119/160):C:\sc\verb-io\Public\replace-PSTitleBarText.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v replace-PSTitleBarText.ps1 v------
Function replace-PSTitleBarText {
13:02:18: INFO:  Processing (120/160):C:\sc\verb-io\Public\reset-ConsoleColors.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v reset-ConsoleColors.ps1 v------
Function reset-ConsoleColors {
13:02:18: INFO:  Processing (121/160):C:\sc\verb-io\Public\reset-HostIndent.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v reset-HostIndent.ps1 v------
function reset-HostIndent {
13:02:18: INFO:  Processing (122/160):C:\sc\verb-io\Public\restore-FileTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v restore-FileTDO.ps1 v------
function restore-FileTDO {
13:02:18: INFO:  Processing (123/160):C:\sc\verb-io\Public\Run-ScheduledTaskLegacy.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Run-ScheduledTaskLegacy.ps1 v------
Function Run-ScheduledTaskLegacy {
13:02:18: INFO:  Processing (124/160):C:\sc\verb-io\Public\Save-ConsoleOutputToClipBoard.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Save-ConsoleOutputToClipBoard.ps1 v------
function Save-ConsoleOutputToClipBoard {
13:02:18: INFO:  Processing (125/160):C:\sc\verb-io\Public\search-Excel.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v search-Excel.ps1 v------
function search-Excel{
13:02:18: INFO:  Processing (126/160):C:\sc\verb-io\Public\select-first.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v select-first.ps1 v------
function select-first {
13:02:18: INFO:  Processing (127/160):C:\sc\verb-io\Public\select-last.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v select-last.ps1 v------
function Select-last {
13:02:18: INFO:  Processing (128/160):C:\sc\verb-io\Public\Select-StringAll.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Select-StringAll.ps1 v------
Function Select-StringAll {
13:02:18: INFO:  Processing (129/160):C:\sc\verb-io\Public\set-AuthenticodeSignatureTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v set-AuthenticodeSignatureTDO.ps1 v------
function set-AuthenticodeSignatureTDO {
13:02:18: INFO:  Processing (130/160):C:\sc\verb-io\Public\set-ConsoleColors.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v set-ConsoleColors.ps1 v------
Function set-ConsoleColors {
13:02:18: INFO:  Processing (131/160):C:\sc\verb-io\Public\Set-ContentFixEncoding.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Set-ContentFixEncoding.ps1 v------
function Set-ContentFixEncoding {
13:02:18: INFO:  Processing (132/160):C:\sc\verb-io\Public\set-FileAssociation.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v set-FileAssociation.ps1 v------
function set-FileAssociation {
13:02:18: INFO:  Processing (133/160):C:\sc\verb-io\Public\set-HostIndent.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:18:(Add-ContentFixEncoding:)
VERBOSE: 13:02:18:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v set-HostIndent.ps1 v------
function set-HostIndent {
13:02:19: INFO:  Processing (134/160):C:\sc\verb-io\Public\set-ItemReadOnlyTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v set-ItemReadOnlyTDO.ps1 v------
function set-ItemReadOnlyTDO {
13:02:19: INFO:  Processing (135/160):C:\sc\verb-io\Public\set-PSTitleBar.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v set-PSTitleBar.ps1 v------
Function set-PSTitleBar {
13:02:19: INFO:  Processing (136/160):C:\sc\verb-io\Public\Set-RegistryValue.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Set-RegistryValue.ps1 v------
function Set-RegistryValue {
13:02:19: INFO:  Processing (137/160):C:\sc\verb-io\Public\Set-Shortcut.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Set-Shortcut.ps1 v------
function Set-Shortcut {
13:02:19: INFO:  Processing (138/160):C:\sc\verb-io\Public\Shorten-Path.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Shorten-Path.ps1 v------
function Shorten-Path([string] $path) {
13:02:19: INFO:  Processing (139/160):C:\sc\verb-io\Public\Show-MsgBox.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Show-MsgBox.ps1 v------
function Show-MsgBox {
13:02:19: INFO:  Processing (140/160):C:\sc\verb-io\Public\Start-SleepCountdown.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Start-SleepCountdown.ps1 v------
function Start-SleepCountdown {
13:02:19: INFO:  Processing (141/160):C:\sc\verb-io\Public\stop-driveburn.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v stop-driveburn.ps1 v------
Function stop-driveburn {
13:02:19: INFO:  Processing (142/160):C:\sc\verb-io\Public\test-FileLock.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v test-FileLock.ps1 v------
function test-FileLock {
13:02:19: INFO:  Processing (143/160):C:\sc\verb-io\Public\test-FileSysAutomaticVariables.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v test-FileSysAutomaticVariables.ps1 v------
function test-FileSysAutomaticVariables {
13:02:19: INFO:  Processing (144/160):C:\sc\verb-io\Public\test-IsLink.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v test-IsLink.ps1 v------
function test-IsLink{
13:02:19: INFO:  Processing (145/160):C:\sc\verb-io\Public\test-IsUncPath.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v test-IsUncPath.ps1 v------
function test-IsUncPath {
13:02:19: INFO:  Processing (146/160):C:\sc\verb-io\Public\test-LineEndings.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v test-LineEndings.ps1 v------
function test-LineEndings {
13:02:19: INFO:  Processing (147/160):C:\sc\verb-io\Public\test-MediaFile.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v test-MediaFile.ps1 v------
Function test-MediaFile {
13:02:19: INFO:  Processing (148/160):C:\sc\verb-io\Public\test-MissingMediaSummary.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v test-MissingMediaSummary.ps1 v------
Function test-MissingMediaSummary {
13:02:19: INFO:  Processing (149/160):C:\sc\verb-io\Public\Test-PendingReboot.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Test-PendingReboot.ps1 v------
function Test-PendingReboot {
13:02:19: INFO:  Processing (150/160):C:\sc\verb-io\Public\test-PSTitleBar.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v test-PSTitleBar.ps1 v------
Function test-PSTitleBar {
13:02:19: INFO:  Processing (151/160):C:\sc\verb-io\Public\Test-RegistryKey.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Test-RegistryKey.ps1 v------
function Test-RegistryKey {
13:02:19: INFO:  Processing (152/160):C:\sc\verb-io\Public\Test-RegistryValue.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Test-RegistryValue.ps1 v------
function Test-RegistryValue {
13:02:19: INFO:  Processing (153/160):C:\sc\verb-io\Public\Test-RegistryValueNotNull.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Test-RegistryValueNotNull.ps1 v------
function Test-RegistryValueNotNull {
13:02:19: INFO:  Processing (154/160):C:\sc\verb-io\Public\Touch-File.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Touch-File.ps1 v------
Function Touch-File {
13:02:19: INFO:  Processing (155/160):C:\sc\verb-io\Public\trim-FileList.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v trim-FileList.ps1 v------
function trim-FileList {
13:02:19: INFO:  Processing (156/160):C:\sc\verb-io\Public\unless.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v unless.ps1 v------
function unless {
13:02:19: INFO:  Processing (157/160):C:\sc\verb-io\Public\write-hostCallOutTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v write-hostCallOutTDO.ps1 v------
function write-hostCallOutTDO {
13:02:19: INFO:  Processing (158/160):C:\sc\verb-io\Public\write-hostColorMatch.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v write-hostColorMatch.ps1 v------
function write-hostColorMatch {
13:02:19: INFO:  Processing (159/160):C:\sc\verb-io\Public\write-HostIndent.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v write-HostIndent.ps1 v------
function write-HostIndent {
13:02:19: INFO:  Processing (160/160):C:\sc\verb-io\Public\Write-ProgressHelper.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Write-ProgressHelper.ps1 v------
function Write-ProgressHelper {
13:02:19: INFO:  
#*------^ (1/2):C:\sc\verb-io\Public ^------
13:02:19: INFO:  
#*------v (2/2):C:\sc\verb-io\Internal v------
13:02:19: INFO:  Processing 0 $ComponentScripts files through Remove-AuthenticodeSignature...
13:02:19: INFO:  Remove-AuthenticodeSignature w
Name                           Value                                                         
----                           -----                                                         
Path                                                                                         
whatif                         False                                                         
verbose                        True
13:02:19: INFO:  
#*------^ (2/2):C:\sc\verb-io\Internal ^------
VERBOSE: (no Public\_CommonCode.ps1)
13:02:19: INFO:  (Updating Psm1 Export-ModuleMember -Function to reflect Public modules)
13:02:19: INFO:  Adding:FooterBlock...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:02:19:(Add-ContentFixEncoding:)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*======^ END FUNCTIONS ^======
Export-ModuleMember -Function Add-ContentFixEncoding,Add-DirectoryWatch,Add-PSTitleBar,Authenticate-File,backup-FileTDO,clear-HostIndent,Close-IfAlreadyRunning,Compare-ObjectsSideBySide,Compare-ObjectsSideBySide3,Compare-ObjectsSideBySide4,Compress-ArchiveFile,convert-BinaryToDecimalStorageUnits,convert-ColorHexCodeToWindowsMediaColorsName,convert-DehydratedBytesToGB,convert-DehydratedBytesToMB,Convert-FileEncoding,ConvertFrom-CanonicalOU,ConvertFrom-CanonicalUser,ConvertFrom-CmdList,ConvertFrom-DN,ConvertFrom-IniFile,convertFrom-MarkdownTable,ConvertFrom-SourceTable,Null,True,False,_debug-Column,_mask,_slice,_typeName,_errorRecord,ConvertFrom-UncPath,convert-HelpToMarkdown,_encodePartOfHtml,_getCode,_getRemark,Convert-NumbertoWords,_convert-3DigitNumberToWords,ConvertTo-HashIndexed,convertTo-MarkdownTable,convertTo-Object,ConvertTo-SRT,ConvertTo-UncPath,convert-VideoToMp3,copy-Profile,copy-ProfileTDO,Count-Object,Create-ScheduledTaskLegacy,dump-Shortcuts,Echo-Finish,Echo-ScriptEnd,Echo-Start,Expand-ArchiveFile,Expand-ISOFileTDO,extract-Icon,Find-LockedFileProcess,Format-Json,get-AliasDefinition,Get-AverageItems,get-colorcombo,get-ColorNames,Get-CombinationTDO,Combination,Combination,ToString,Choose,Successor,Element,LargestV,ApplyTo2,ApplyTo,get-ConsoleText,Get-CountItems,Get-FileEncoding,Get-FileEncodingExtended,get-filesignature,Get-FileType,get-FolderEmpty,Get-FolderSize,Convert-FileSize,Get-FolderSize2,Get-FsoShortName,Get-FsoShortPath,Get-FsoTypeObj,get-HostIndent,Get-KnownFolderTDO,get-LoremName,Get-PermutationTDO,Permutation,Permutation,Successor,Factorial,ApplyTo,ToString,Get-ProductItems,get-ProfileFilesTDO,_get-BackFileFiles,get-RegistryValue,Get-ScheduledTaskLegacy,Get-Shortcut,Get-SumItems,get-TaskReport,Get-Time,Get-TimeStamp,get-TimeStampNow,get-Uptime,Invoke-Flasher,Invoke-Pause,Invoke-Pause2,invoke-SoundCue,Invoke-TakeownFileTDO,Invoke-TakeownFolderTDO,Invoke-TakeownRegistryTDO,mount-UnavailableMappedDrives,move-FileOnReboot,New-RandomFilename,new-Shortcut,out-Clipboard,Out-Excel,Out-Excel-Events,parse-PSTitleBar,play-beep,pop-HostIndent,Pop-LocationFirst,prompt-Continue,push-HostIndent,Read-FolderBrowserDialog,Read-Host2,Read-InputBoxChoice,Read-InputBoxChoiceHostUI,Read-InputBoxDialog,Read-MessageBoxDialog,read-MultiLineInputDialogAdvanced,read-MultiLineInputDialogAdvanced,Read-OpenFileDialog,Read-PasswordInputBoxDialog,rebuild-PSTitleBar,Remove-AuthenticodeSignature,Remove-DirectoryWatch,Remove-InvalidFileNameChars,Remove-InvalidVariableNameChars,remove-ItemRetry,Remove-JsonComments,Remove-PSTitleBar,Remove-ScheduledTaskLegacy,remove-UnneededFileVariants,repair-FileEncoding,replace-PSTitleBarText,reset-ConsoleColors,reset-HostIndent,restore-FileTDO,Run-ScheduledTaskLegacy,Save-ConsoleOutputToClipBoard,search-Excel,select-first,Select-last,Select-StringAll,set-AuthenticodeSignatureTDO,test-CertificateTDO,_getstatus_,set-ConsoleColors,Set-ContentFixEncoding,set-FileAssociation,set-HostIndent,set-ItemReadOnlyTDO,set-PSTitleBar,Set-RegistryValue,Set-Shortcut,Shorten-Path,Show-MsgBox,Start-SleepCountdown,stop-driveburn,test-FileLock,test-FileSysAutomaticVariables,test-IsLink,test-IsUncPath,test-LineEndings,test-MediaFile,test-MissingMediaSummary,Test-PendingReboot,Test-RegistryKey,Test-RegistryValue,Test-RegistryValueNotNull,test-PSTitleBar,Test-RegistryKey,Test-RegistryValue,Test-RegistryValueNotNull,Touch-File,trim-FileList,unless,write-hostCallOutTDO,write-hostColorMatch,write-HostIndent,Write-ProgressHelper -Alias *
13:02:19: INFO:  Updating the Psd1 FunctionsToExport to match
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     c:\sc\verb-io\verb-io\verb-io.psd1_TMP                                              
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    {#...
VERBOSE: 13:02:19:(Set-ContentFixEncoding:c:\sc\verb-io\verb-io\verb-io.psd1_TMP)
VERBOSE: 13:02:19:Set-Content w
Name                           Value                                                         
----                           -----                                                         
PassThru                       True                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psd1_TMP                        
whatif                         False                                                         
encoding                       UTF8                                                          
ErrorAction                    STOP
-Value[0,2]:
#
# Module manifest for module 'verb-IO'
13:02:19: INFO:  confirm-ModuleBuildSync w
Name                           Value                                                         
----                           -----                                                         
ModPsdPath                     c:\sc\verb-io\verb-io\verb-io.psd1_TMP                        
RequiredVersion                15.0.0                                                        
NoTest                         True                                                          
whatif                         False                                                         
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                   
---             -----                                   
ModPsdPath      {c:\sc\verb-io\verb-io\verb-io.psd1_TMP}
RequiredVersion 15.0.0                                  
NoTest          True                                    
whatIf          False                                   
Verbose         True
13:02:19: INFO:  #*======v confirm-ModuleBuildSync:  v======
VERBOSE: (non-pipeline - param - input)
13:02:19: INFO:  (test-path confirms $ModPsm1 & $ModTestPs1)
13:02:19: INFO:  Import-PowerShellDataFile w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-io\verb-io\verb-io.psd1_TMP                        
ErrorAction                    Stop                                                          
verbose                        True
13:02:19: INFO:  (resolved Module attributes:
$ModuleName:	verb-io
$ModRoot:	c:\sc\verb-io
$ModPsd1:	c:\sc\verb-io\verb-io\verb-io.psd1_TMP
$ModPsm1:	c:\sc\verb-io\verb-io\verb-io.psm1_TMP
$ModTestPs1:	c:\sc\verb-io\Tests\verb-io.tests.ps1
$psd1Vers:	15.0.0
$psd1guid:	12cb1eb4-ac9c-405e-8711-e80c914a9b32)
13:02:19: INFO:  confirm-ModulePsd1Version w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-io\verb-io\verb-io.psd1_TMP                        
RequiredVersion                15.0.0                                                        
whatif                         False                                                         
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                   
---             -----                                   
Path            {c:\sc\verb-io\verb-io\verb-io.psd1_TMP}
RequiredVersion 15.0.0                                  
whatIf          False                                   
Verbose         True
13:02:19: INFO:  #*======v confirm-ModulePsd1Version: c:\sc\verb-io\verb-io\verb-io.psd1_TMP v======
VERBOSE: (non-pipeline - param - input)
13:02:19: INFO:  (Version already updated to match)
13:02:19: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Version                        15.0.0                                                        
Valid                          False
13:02:19: INFO:  (SET:$objReport.Valid = $true ;)
13:02:19: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Version                        15.0.0                                                        
Valid                          True
13:02:19: INFO:  #*======^ confirm-ModulePsd1Version: c:\sc\verb-io\verb-io\verb-io.psd1_TMP ^======
13:02:19: INFO:  (confirm-ModulePsd1Version:Success)
13:02:19: INFO:  confirm-ModulePsm1Version w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
RequiredVersion                15.0.0                                                        
whatif                         False                                                         
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                   
---             -----                                   
Path            {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}
RequiredVersion 15.0.0                                  
whatIf          False                                   
Verbose         True
13:02:19: INFO:  #*======v confirm-ModulePsm1Version: c:\sc\verb-io\verb-io\verb-io.psm1_TMP v======
VERBOSE: (non-pipeline - param - input)
13:02:19: WARNING:  In:c:\sc\verb-io\verb-io\verb-io.psm1_TMP
Version present:(13.0.0)
*does not* properly match:15.0.0
FORCING MATCHING UPDATE!
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     c:\sc\verb-io\verb-io\verb-io.psm1_TMP                                              
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    {# verb-io.psm1...
VERBOSE: 13:02:20:(Set-ContentFixEncoding:c:\sc\verb-io\verb-io\verb-io.psm1_TMP)
VERBOSE: 13:02:20:Set-Content w
Name                           Value                                                         
----                           -----                                                         
PassThru                       True                                                          
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
encoding                       UTF8                                                          
ErrorAction                    STOP
-Value[0,2]:
# verb-io.psm1
<#
13:02:20: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Version                        15.0.0                                                        
Valid                          False
13:02:20: INFO:  (SET:$objReport.Valid = $true ;)
13:02:20: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Version                        15.0.0                                                        
Valid                          True
13:02:20: INFO:  #*======^ confirm-ModulePsm1Version: c:\sc\verb-io\verb-io\verb-io.psm1_TMP ^======
13:02:20: INFO:  (confirm-ModulePsm1Version:Success)
13:02:20: INFO:  (-NoTest: skipping confirm-ModuleTestPs1Guid)
13:02:20: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Manifest                       c:\sc\verb-io\verb-io\verb-io.psd1_TMP                        
Module                         c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
Pester                         (SKIPPED)                                                     
Guid                           (SKIPPED)                                                     
Version                        15.0.0                                                        
Valid                          False
13:02:20: INFO:  (SET:$objReport.Valid = $true ;)
13:02:20: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Manifest                       c:\sc\verb-io\verb-io\verb-io.psd1_TMP                        
Module                         c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
Pester                         (SKIPPED)                                                     
Guid                           (SKIPPED)                                                     
Version                        15.0.0                                                        
Valid                          True
13:02:20: INFO:  #*======^ confirm-ModuleBuildSync:  ^======
13:02:20: INFO:  (confirm-ModuleBuildSync:Success)
13:02:20: INFO:  Test-ModuleTMPFiles w
Name                           Value                                                         
----                           -----                                                         
ModuleNamePSM1Path             c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key                Value                                   
---                -----                                   
ModuleNamePSM1Path {c:\sc\verb-io\verb-io\verb-io.psm1_TMP}
Verbose            True
13:02:20: INFO:  #*======v Test-ModuleTMPFiles: c:\sc\verb-io\verb-io\verb-io.psm1_TMP v======
VERBOSE: (non-pipeline - param - input)
13:02:20: INFO:  
Psm1:c:\sc\verb-io\verb-io\verb-io.psm1_TMP
Psd1:c:\sc\verb-io\verb-io\verb-io.psd1_TMP
13:02:20: INFO:  Creating Testable c:\sc\verb-io\verb-io\5ff6236a-2b10-475a-9910-574abe31c94a.psd1
 to validate c:\sc\verb-io\verb-io\verb-io.psd1_TMP will Test-ModuleManifest
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-io\verb-io\verb-io.psd1_TMP Destination: C:\sc\verb-io\verb-io\5ff6236a-2b10-475a-9910-574abe31c94a.psd1".
13:02:20: INFO:  Test-ModuleManifest w
Name                           Value                                                         
----                           -----                                                         
verbose                        True                                                          
Path                           c:\sc\verb-io\verb-io\5ff6236a-2b10-475a-9910-574abe31c94a....
ErrorVariable                  vManiErr                                                      
ErrorAction                    STOP
VERBOSE: Loading module from path 'C:\sc\verb-io\verb-io\verb-IO.psm1'.
13:02:20: INFO:  Test-ModuleManifest:PASSED
13:02:20: INFO:  Creating Testable c:\sc\verb-io\verb-io\5ff6236a-2b10-475a-9910-574abe31c94a.psm1
 to validate c:\sc\verb-io\verb-io\verb-io.psm1_TMP will Import-Module
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-io\verb-io\verb-io.psm1_TMP Destination: C:\sc\verb-io\verb-io\5ff6236a-2b10-475a-9910-574abe31c94a.psm1".
13:02:20: INFO:  n import-module w
Name                           Value                                                         
----                           -----                                                         
Name                           c:\sc\verb-io\verb-io\5ff6236a-2b10-475a-9910-574abe31c94a....
Force                          True                                                          
verbose                        True                                                          
ErrorAction                    STOP                                                          
ErrorVariable                  vIpMoErr                                                      
PassThru                       True
VERBOSE: Loading module from path 'C:\sc\verb-io\verb-io\5ff6236a-2b10-475a-9910-574abe31c94a.psm1'.
VERBOSE: Importing function 'Add-ContentFixEncoding'.
VERBOSE: Importing function 'Add-DirectoryWatch'.
VERBOSE: Importing function 'Add-PSTitleBar'.
WARNING: The names of some imported commands from the module '5ff6236a-2b10-475a-9910-574abe31c94a' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'Authenticate-File' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Authenticate-File'.
VERBOSE: Importing function 'backup-FileTDO'.
VERBOSE: Importing function 'clear-HostIndent'.
VERBOSE: Importing function 'Close-IfAlreadyRunning'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide3'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide4'.
VERBOSE: Importing function 'Compress-ArchiveFile'.
VERBOSE: Importing function 'convert-BinaryToDecimalStorageUnits'.
VERBOSE: Importing function 'convert-ColorHexCodeToWindowsMediaColorsName'.
VERBOSE: Importing function 'convert-DehydratedBytesToGB'.
VERBOSE: Importing function 'convert-DehydratedBytesToMB'.
VERBOSE: Importing function 'Convert-FileEncoding'.
VERBOSE: Importing function 'convert-HelpToMarkdown'.
VERBOSE: Importing function 'Convert-NumbertoWords'.
VERBOSE: Importing function 'convert-VideoToMp3'.
VERBOSE: Importing function 'ConvertFrom-CanonicalOU'.
VERBOSE: Importing function 'ConvertFrom-CanonicalUser'.
VERBOSE: Importing function 'ConvertFrom-CmdList'.
VERBOSE: Importing function 'ConvertFrom-DN'.
VERBOSE: Importing function 'ConvertFrom-IniFile'.
VERBOSE: Importing function 'convertFrom-MarkdownTable'.
VERBOSE: Importing function 'ConvertFrom-SourceTable'.
VERBOSE: Importing function 'ConvertFrom-UncPath'.
VERBOSE: Importing function 'ConvertTo-HashIndexed'.
VERBOSE: Importing function 'convertTo-MarkdownTable'.
VERBOSE: Importing function 'convertTo-Object'.
VERBOSE: Importing function 'ConvertTo-SRT'.
VERBOSE: Importing function 'ConvertTo-UncPath'.
VERBOSE: Importing function 'copy-Profile'.
VERBOSE: Importing function 'copy-ProfileTDO'.
VERBOSE: The 'Count-Object' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Count-Object'.
VERBOSE: The 'Create-ScheduledTaskLegacy' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "New".
VERBOSE: Importing function 'Create-ScheduledTaskLegacy'.
VERBOSE: The 'dump-Shortcuts' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Get".
VERBOSE: Importing function 'dump-Shortcuts'.
VERBOSE: The 'Echo-Finish' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-Finish'.
VERBOSE: The 'Echo-ScriptEnd' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-ScriptEnd'.
VERBOSE: The 'Echo-Start' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-Start'.
VERBOSE: Importing function 'Expand-ArchiveFile'.
VERBOSE: Importing function 'Expand-ISOFileTDO'.
VERBOSE: The 'extract-Icon' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Export".
VERBOSE: Importing function 'extract-Icon'.
VERBOSE: Importing function 'Find-LockedFileProcess'.
VERBOSE: Importing function 'Format-Json'.
VERBOSE: Importing function 'get-AliasDefinition'.
VERBOSE: Importing function 'Get-AverageItems'.
VERBOSE: Importing function 'get-colorcombo'.
VERBOSE: Importing function 'get-ColorNames'.
VERBOSE: Importing function 'Get-CombinationTDO'.
VERBOSE: Importing function 'get-ConsoleText'.
VERBOSE: Importing function 'Get-CountItems'.
VERBOSE: Importing function 'Get-FileEncoding'.
VERBOSE: Importing function 'Get-FileEncodingExtended'.
VERBOSE: Importing function 'get-filesignature'.
VERBOSE: Importing function 'Get-FileType'.
VERBOSE: Importing function 'get-FolderEmpty'.
VERBOSE: Importing function 'Get-FolderSize'.
VERBOSE: Importing function 'Get-FolderSize2'.
VERBOSE: Importing function 'Get-FsoShortName'.
VERBOSE: Importing function 'Get-FsoShortPath'.
VERBOSE: Importing function 'Get-FsoTypeObj'.
VERBOSE: Importing function 'get-HostIndent'.
VERBOSE: Importing function 'Get-KnownFolderTDO'.
VERBOSE: Importing function 'get-LoremName'.
VERBOSE: Importing function 'Get-PermutationTDO'.
VERBOSE: Importing function 'Get-ProductItems'.
VERBOSE: Importing function 'get-ProfileFilesTDO'.
VERBOSE: Importing function 'get-RegistryValue'.
VERBOSE: Importing function 'Get-ScheduledTaskLegacy'.
VERBOSE: Importing function 'Get-Shortcut'.
VERBOSE: Importing function 'Get-SumItems'.
VERBOSE: Importing function 'get-TaskReport'.
VERBOSE: Importing function 'Get-Time'.
VERBOSE: Importing function 'Get-TimeStamp'.
VERBOSE: Importing function 'get-TimeStampNow'.
VERBOSE: Importing function 'get-Uptime'.
VERBOSE: Importing function 'Invoke-Flasher'.
VERBOSE: Importing function 'Invoke-Pause'.
VERBOSE: Importing function 'Invoke-Pause2'.
VERBOSE: Importing function 'invoke-SoundCue'.
VERBOSE: Importing function 'Invoke-TakeownFileTDO'.
VERBOSE: Importing function 'Invoke-TakeownFolderTDO'.
VERBOSE: Importing function 'Invoke-TakeownRegistryTDO'.
VERBOSE: Importing function 'mount-UnavailableMappedDrives'.
VERBOSE: Importing function 'move-FileOnReboot'.
VERBOSE: Importing function 'New-RandomFilename'.
VERBOSE: Importing function 'new-Shortcut'.
VERBOSE: Importing function 'out-Clipboard'.
VERBOSE: Importing function 'Out-Excel'.
WARNING: Some imported command names contain one or more of the following restricted characters: # , ( ) {{ }} [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: The command name 'Out-Excel-Events' from the module '5ff6236a-2b10-475a-9910-574abe31c94a' contains one or more of the following restricted characters: # , ( ) { } [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: Importing function 'Out-Excel-Events'.
VERBOSE: The 'parse-PSTitleBar' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'parse-PSTitleBar'.
VERBOSE: The 'play-beep' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'play-beep'.
VERBOSE: Importing function 'pop-HostIndent'.
VERBOSE: Importing function 'Pop-LocationFirst'.
VERBOSE: The 'prompt-Continue' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Read".
VERBOSE: Importing function 'prompt-Continue'.
VERBOSE: Importing function 'push-HostIndent'.
VERBOSE: Importing function 'Read-FolderBrowserDialog'.
VERBOSE: Importing function 'Read-Host2'.
VERBOSE: Importing function 'Read-InputBoxChoice'.
VERBOSE: Importing function 'Read-InputBoxChoiceHostUI'.
VERBOSE: Importing function 'Read-InputBoxDialog'.
VERBOSE: Importing function 'Read-MessageBoxDialog'.
VERBOSE: Importing function 'read-MultiLineInputDialogAdvanced'.
VERBOSE: Importing function 'Read-OpenFileDialog'.
VERBOSE: Importing function 'Read-PasswordInputBoxDialog'.
VERBOSE: The 'rebuild-PSTitleBar' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Initialize".
VERBOSE: Importing function 'rebuild-PSTitleBar'.
VERBOSE: Importing function 'Remove-AuthenticodeSignature'.
VERBOSE: Importing function 'Remove-DirectoryWatch'.
VERBOSE: Importing function 'Remove-InvalidFileNameChars'.
VERBOSE: Importing function 'Remove-InvalidVariableNameChars'.
VERBOSE: Importing function 'remove-ItemRetry'.
VERBOSE: Importing function 'Remove-JsonComments'.
VERBOSE: Importing function 'Remove-PSTitleBar'.
VERBOSE: Importing function 'Remove-ScheduledTaskLegacy'.
VERBOSE: Importing function 'remove-UnneededFileVariants'.
VERBOSE: Importing function 'repair-FileEncoding'.
VERBOSE: The 'replace-PSTitleBarText' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'replace-PSTitleBarText'.
VERBOSE: Importing function 'reset-ConsoleColors'.
VERBOSE: Importing function 'reset-HostIndent'.
VERBOSE: Importing function 'restore-FileTDO'.
VERBOSE: The 'Run-ScheduledTaskLegacy' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Invoke,Start".
VERBOSE: Importing function 'Run-ScheduledTaskLegacy'.
VERBOSE: Importing function 'Save-ConsoleOutputToClipBoard'.
VERBOSE: Importing function 'search-Excel'.
VERBOSE: Importing function 'select-first'.
VERBOSE: Importing function 'Select-last'.
VERBOSE: Importing function 'Select-StringAll'.
VERBOSE: Importing function 'set-AuthenticodeSignatureTDO'.
VERBOSE: Importing function 'set-ConsoleColors'.
VERBOSE: Importing function 'Set-ContentFixEncoding'.
VERBOSE: Importing function 'set-FileAssociation'.
VERBOSE: Importing function 'set-HostIndent'.
VERBOSE: Importing function 'set-ItemReadOnlyTDO'.
VERBOSE: Importing function 'set-PSTitleBar'.
VERBOSE: Importing function 'Set-RegistryValue'.
VERBOSE: Importing function 'Set-Shortcut'.
VERBOSE: The 'Shorten-Path' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Shorten-Path'.
VERBOSE: Importing function 'Show-MsgBox'.
VERBOSE: Importing function 'Start-SleepCountdown'.
VERBOSE: Importing function 'stop-driveburn'.
VERBOSE: Importing function 'test-FileLock'.
VERBOSE: Importing function 'test-FileSysAutomaticVariables'.
VERBOSE: Importing function 'test-IsLink'.
VERBOSE: Importing function 'test-IsUncPath'.
VERBOSE: Importing function 'test-LineEndings'.
VERBOSE: Importing function 'test-MediaFile'.
VERBOSE: Importing function 'test-MissingMediaSummary'.
VERBOSE: Importing function 'Test-PendingReboot'.
VERBOSE: Importing function 'test-PSTitleBar'.
VERBOSE: Importing function 'Test-RegistryKey'.
VERBOSE: Importing function 'Test-RegistryValue'.
VERBOSE: Importing function 'Test-RegistryValueNotNull'.
VERBOSE: The 'Touch-File' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Touch-File'.
VERBOSE: The 'trim-FileList' command in the 5ff6236a-2b10-475a-9910-574abe31c94a' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'trim-FileList'.
VERBOSE: Importing function 'unless'.
VERBOSE: Importing function 'write-hostCallOutTDO'.
VERBOSE: Importing function 'write-hostColorMatch'.
VERBOSE: Importing function 'write-HostIndent'.
VERBOSE: Importing function 'Write-ProgressHelper'.
VERBOSE: Importing alias 'add-PSTitle'.
VERBOSE: Importing alias 'backup-File'.
VERBOSE: Importing alias 'c-hi'.
VERBOSE: Importing alias 'cfst'.
VERBOSE: Importing alias 'check-FileLock'.
VERBOSE: Importing alias 'ColorMatch'.
VERBOSE: Importing alias 'Compress-ZipFile'.
VERBOSE: Importing alias 'convert-ToMp3'.
VERBOSE: Importing alias 'convertfrom-mdt'.
VERBOSE: Importing alias 'ConvertTo-CanonicalName'.
VERBOSE: Importing alias 'ConvertTo-DNOU'.
VERBOSE: Importing alias 'ConvertTo-DNUser'.
VERBOSE: Importing alias 'convertTo-Mp3'.
VERBOSE: Importing alias 'copy-Profile'.
VERBOSE: Importing alias 'expand-ISOFile'.
VERBOSE: Importing alias 'Expand-ZipFile'.
VERBOSE: Importing alias 'fix-encoding'.
VERBOSE: Importing alias 'gald'.
VERBOSE: Importing alias 'gclr'.
VERBOSE: Importing alias 'Get-ProfileFiles'.
VERBOSE: Importing alias 'get-RegistryProperty'.
VERBOSE: Importing alias 'get-ScheduledTaskReport'.
VERBOSE: Importing alias 'in-markdowntable'.
VERBOSE: Importing alias 'in-mdt'.
VERBOSE: Importing alias 'invoke-audio'.
VERBOSE: Importing alias 'invoke-sound'.
VERBOSE: Importing alias 'out-markdowntable'.
VERBOSE: Importing alias 'out-mdt'.
VERBOSE: Importing alias 'pop-hi'.
VERBOSE: Importing alias 'popd1'.
VERBOSE: Importing alias 'push-hi'.
VERBOSE: Importing alias 'r-hi'.
VERBOSE: Importing alias 'Remove-IllegalFileNameChars'.
VERBOSE: Importing alias 'restore-file'.
VERBOSE: Importing alias 'revert-File'.
VERBOSE: Importing alias 's-hi'.
VERBOSE: Importing alias 'sdb'.
VERBOSE: Importing alias 'set-ConsColor'.
VERBOSE: Importing alias 'Set-FileContent'.
VERBOSE: Importing alias 'set-PSTitle'.
VERBOSE: Importing alias 'set-RegistryProperty'.
VERBOSE: Importing alias 'sign-file'.
VERBOSE: Importing alias 'test-IsHardLink'.
VERBOSE: Importing alias 'test-IsJunction'.
VERBOSE: Importing alias 'test-IsSymlink'.
VERBOSE: Importing alias 'tmf'.
VERBOSE: Importing alias 'touch'.
VERBOSE: Importing alias 'Unwatch-Directory'.
VERBOSE: Importing alias 'update-RegistryProperty'.
VERBOSE: Importing alias 'vmf'.
VERBOSE: Importing alias 'w-hCO'.
VERBOSE: Importing alias 'w-hi'.
VERBOSE: Importing alias 'Watch-Directory'.
VERBOSE: Importing alias 'write-hostAlert'.
13:02:21: INFO:  Ipmo: PASSED
13:02:21: INFO:  (remove-module -name c:\sc\verb-io\verb-io\5ff6236a-2b10-475a-9910-574abe31c94a.psm1 -force)
13:02:21: INFO:  (remove-item -path c:\sc\verb-io\verb-io\5ff6236a-2b10-475a-9910-574abe31c94a.psm1 -ErrorAction SilentlyContinue ;
13:02:21: INFO:  (remove-item -path c:\sc\verb-io\verb-io\5ff6236a-2b10-475a-9910-574abe31c94a.psd1 -ErrorAction SilentlyContinue ;
13:02:21: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Manifest                       5ff6236a-2b10-475a-9910-574abe31c94a                          
Module                         5ff6236a-2b10-475a-9910-574abe31c94a                          
Valid                          False
13:02:21: INFO:  (SET:$objReport.Valid = $true ;)
13:02:21: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Manifest                       5ff6236a-2b10-475a-9910-574abe31c94a                          
Module                         5ff6236a-2b10-475a-9910-574abe31c94a                          
Valid                          True
13:02:21: INFO:  #*======^ Test-ModuleTMPFiles: c:\sc\verb-io\verb-io\verb-io.psm1_TMP ^======
13:02:21: INFO:  Processing error free: Overwriting temp .psm1 with temp copy
copy-item w
Name                           Value                                                         
----                           -----                                                         
Destination                    c:\sc\verb-io\verb-io\verb-io.psm1                            
Path                           c:\sc\verb-io\verb-io\verb-io.psm1_TMP                        
whatif                         False                                                         
ErrorAction                    STOP
13:02:21: INFO:  Processing error free: Overwriting temp .psd1 with temp copy
copy-item w
Name                           Value                                                         
----                           -----                                                         
Destination                    c:\sc\verb-io\verb-io\verb-io.psd1                            
Path                           c:\sc\verb-io\verb-io\verb-io.psd1_TMP                        
whatif                         False                                                         
ErrorAction                    STOP
13:02:21: INFO:  #*======^ ConvertTo-ModuleMergedTDO: ^======
VERBOSE: Loading module from path 'C:\sc\verb-io\verb-io\verb-IO.psm1'.
13:02:21: VERBOSE:  ((no $ttmm_Err: test-ModuleManifest had no errors))
13:02:21: INFO:  (Test-ModuleManifest:PASSED)
13:02:21: INFO:  Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-io\Tests\verb-io.tests.ps1
13:02:21: INFO:  confirm-ModuleBuildSync w
Name                           Value                                                         
----                           -----                                                         
ModPsdPath                     C:\sc\verb-io\verb-io\verb-io.psd1                            
RequiredVersion                15.0.0                                                        
whatif                         False                                                         
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                               
---             -----                               
ModPsdPath      {C:\sc\verb-io\verb-io\verb-io.psd1}
RequiredVersion 15.0.0                              
whatIf          False                               
Verbose         True
13:02:21: INFO:  #*======v confirm-ModuleBuildSync:  v======
VERBOSE: (non-pipeline - param - input)
13:02:21: INFO:  (test-path confirms $ModPsm1 & $ModTestPs1)
13:02:21: INFO:  Import-PowerShellDataFile w
Name                           Value                                                         
----                           -----                                                         
Path                           C:\sc\verb-io\verb-io\verb-io.psd1                            
ErrorAction                    Stop                                                          
verbose                        True
13:02:21: INFO:  (resolved Module attributes:
$ModuleName:	verb-io
$ModRoot:	c:\sc\verb-io
$ModPsd1:	C:\sc\verb-io\verb-io\verb-io.psd1
$ModPsm1:	C:\sc\verb-io\verb-io\verb-io.psm1
$ModTestPs1:	c:\sc\verb-io\Tests\verb-io.tests.ps1
$psd1Vers:	15.0.0
$psd1guid:	12cb1eb4-ac9c-405e-8711-e80c914a9b32)
13:02:21: INFO:  confirm-ModulePsd1Version w
Name                           Value                                                         
----                           -----                                                         
Path                           C:\sc\verb-io\verb-io\verb-io.psd1                            
RequiredVersion                15.0.0                                                        
whatif                         False                                                         
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                               
---             -----                               
Path            {C:\sc\verb-io\verb-io\verb-io.psd1}
RequiredVersion 15.0.0                              
whatIf          False                               
Verbose         True
13:02:21: INFO:  #*======v confirm-ModulePsd1Version: C:\sc\verb-io\verb-io\verb-io.psd1 v======
VERBOSE: (non-pipeline - param - input)
13:02:21: INFO:  (Version already updated to match)
13:02:21: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Version                        15.0.0                                                        
Valid                          False
13:02:21: INFO:  (SET:$objReport.Valid = $true ;)
13:02:21: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Version                        15.0.0                                                        
Valid                          True
13:02:21: INFO:  #*======^ confirm-ModulePsd1Version: C:\sc\verb-io\verb-io\verb-io.psd1 ^======
13:02:21: INFO:  (confirm-ModulePsd1Version:Success)
13:02:21: INFO:  confirm-ModulePsm1Version w
Name                           Value                                                         
----                           -----                                                         
Path                           C:\sc\verb-io\verb-io\verb-io.psm1                            
RequiredVersion                15.0.0                                                        
whatif                         False                                                         
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                               
---             -----                               
Path            {C:\sc\verb-io\verb-io\verb-io.psm1}
RequiredVersion 15.0.0                              
whatIf          False                               
Verbose         True
13:02:21: INFO:  #*======v confirm-ModulePsm1Version: C:\sc\verb-io\verb-io\verb-io.psm1 v======
VERBOSE: (non-pipeline - param - input)
13:02:21: INFO:  (Version already updated to match)
13:02:21: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Version                        15.0.0                                                        
Valid                          False
13:02:21: INFO:  (SET:$objReport.Valid = $true ;)
13:02:21: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Version                        15.0.0                                                        
Valid                          True
13:02:21: INFO:  #*======^ confirm-ModulePsm1Version: C:\sc\verb-io\verb-io\verb-io.psm1 ^======
13:02:21: INFO:  (confirm-ModulePsm1Version:Success)
13:02:21: INFO:  Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-io\Tests\verb-io.tests.ps1
13:02:21: INFO:  confirm-ModuleTestPs1Guid w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-io\Tests\verb-io.tests.ps1                         
RequiredGuid                   12cb1eb4-ac9c-405e-8711-e80c914a9b32                          
whatif                         False                                                         
verbose                        True
VERBOSE: $PSBoundParameters:
Key          Value                                  
---          -----                                  
Path         {c:\sc\verb-io\Tests\verb-io.tests.ps1}
RequiredGuid 12cb1eb4-ac9c-405e-8711-e80c914a9b32   
whatIf       False                                  
Verbose      True
13:02:21: INFO:  #*======v confirm-ModuleTestPs1Guid: c:\sc\verb-io\Tests\verb-io.tests.ps1 v======
VERBOSE: (non-pipeline - param - input)
13:02:21: INFO:  (Guid  already updated to match)
13:02:21: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Guid                           12cb1eb4-ac9c-405e-8711-e80c914a9b32                          
Valid                          False
13:02:21: INFO:  (SET:$objReport.Valid = $true ;)
13:02:21: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Guid                           12cb1eb4-ac9c-405e-8711-e80c914a9b32                          
Valid                          True
13:02:21: INFO:  #*======^ confirm-ModuleTestPs1Guid: c:\sc\verb-io\Tests\verb-io.tests.ps1 ^======
13:02:21: INFO:  (confirm-ModuleTestPs1Guid:Success)
13:02:21: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Manifest                       C:\sc\verb-io\verb-io\verb-io.psd1                            
Module                         C:\sc\verb-io\verb-io\verb-io.psm1                            
Pester                         c:\sc\verb-io\Tests\verb-io.tests.ps1                         
Guid                           12cb1eb4-ac9c-405e-8711-e80c914a9b32                          
Version                        15.0.0                                                        
Valid                          False
13:02:21: INFO:  (SET:$objReport.Valid = $true ;)
13:02:21: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Manifest                       C:\sc\verb-io\verb-io\verb-io.psd1                            
Module                         C:\sc\verb-io\verb-io\verb-io.psm1                            
Pester                         c:\sc\verb-io\Tests\verb-io.tests.ps1                         
Guid                           12cb1eb4-ac9c-405e-8711-e80c914a9b32                          
Version                        15.0.0                                                        
Valid                          True
13:02:21: INFO:  #*======^ confirm-ModuleBuildSync:  ^======
13:02:21: INFO:  (confirm-ModuleBuildSync:Success)
13:02:21: VERBOSE:  ($Psd1filelist populated: export-cliXML:c:\sc\verb-io\Psd1filelist)
13:02:21: INFO:  Updating the Psd1 FileList to with populated $Psd1filelist...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     C:\sc\verb-io\verb-io\verb-io.psd1                                                  
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    {#...
VERBOSE: 13:02:21:(Set-ContentFixEncoding:C:\sc\verb-io\verb-io\verb-io.psd1)
VERBOSE: 13:02:21:Set-Content w
Name                           Value                                                         
----                           -----                                                         
PassThru                       True                                                          
Path                           C:\sc\verb-io\verb-io\verb-io.psd1                            
whatif                         False                                                         
encoding                       UTF8                                                          
ErrorAction                    STOP
-Value[0,2]:
#
# Module manifest for module 'verb-IO'
VERBOSE: Get-ChildItem c:\sc\verb-io\* -recur | where-object {.name -match $rgxGuidModFiles}
13:02:21: INFO:  Signing appropriate files...
VERBOSE: (MONOLITH module:collecting non-include sign files)
13:02:21: INFO:  set-AuthenticodeSignatureTDO w
Name                           Value                                                         
----                           -----                                                         
file                           {C:\sc\verb-io\rebuild-module.ps1, C:\sc\verb-io\requiremen...
ErrorAction                    Stop                                                          
whatif                         False
Current certificate 5AC9D2B4552E48854D47CBA1352944E9 chain and revocation status is valid
(NOTE:-CRLMode:'NoCheck', no Certificate Revocation Check performed)
(C:\sc\verb-io\rebuild-module.ps1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-io\requirements.psd1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-io\Tests\PPoShScriptingStyle.psd1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-io\Tests\ToddomationScriptingStyle-medium.psd1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-io\Tests\verb-IO.tests.ps1 has a valid existing AuthenticodeSignature, skipping)

Directory: C:\sc\verb-io\verb-IO


SignerCertificate                        Status Path        
-----------------                        ------ ----        
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5 Valid  verb-IO.psd1

Directory: C:\sc\verb-io\verb-IO


SignerCertificate                        Status Path        
-----------------                        ------ ----        
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5 Valid  verb-IO.psm1
13:02:21: INFO:  Removing existing profile verb-io content...
13:02:21: INFO:  Uninstall-ModuleForce w
Name                           Value                                                         
----                           -----                                                         
ModuleName                     verb-io                                                       
Verbose                        True                                                          
whatif                         False
VERBOSE: $PSBoundParameters:
Key        Value    
---        -----    
ModuleName {verb-io}
Verbose    True     
whatIf     False
VERBOSE: (non-pipeline - param - input)
13:02:24: INFO:  
#*------v Uninstall PSGet Mod:verb-IO:v13.0.0 v------
13:02:24: INFO:  Uninstall-Script w
Name                           Value                                                         
----                           -----                                                         
Force                          True                                                          
Whatif                         False                                                         
Verbose                        True
VERBOSE: Populating RepositorySourceLocation property for module verb-IO.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\13.0.0\verb-IO.psm1'.
VERBOSE: Performing the operation "Uninstall-Module" on target "Version '13.0.0' of module 'verb-IO'".
VERBOSE: Successfully uninstalled the module 'verb-IO' from module base 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\13.0.0'.
13:02:37: INFO:  
#*------^ Uninstall PSGet Mod:verb-IO:v13.0.0 ^------
13:02:37: INFO:  (Processing $env:PSModulePath paths, for surviving locked copies of verb-io to *manually* purge...)
13:02:37: INFO:  Checking: verb-io below: C:\Users\kadritss\Documents\WindowsPowerShell\Modules...
13:02:37:-GracefulFail specified, using EA:'Continue'
13:02:37:No existing Match:test-path -path C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\*.*
13:02:37: INFO:  Checking: verb-io below: C:\ProgramData\Boxstarter...
13:02:37:-GracefulFail specified, using EA:'Continue'
13:02:37:No existing Match:test-path -path C:\ProgramData\Boxstarter\verb-io\*.*
13:02:37: INFO:  Checking: verb-io below: C:\Program Files\WindowsPowerShell\Modules...
13:02:37:-GracefulFail specified, using EA:'Continue'
13:02:37:No existing Match:test-path -path C:\Program Files\WindowsPowerShell\Modules\verb-io\*.*
13:02:37: INFO:  Checking: verb-io below: C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules...
13:02:37:-GracefulFail specified, using EA:'Continue'
13:02:37:No existing Match:test-path -path C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\verb-io\*.*
13:02:37: INFO:  Checking: verb-io below: C:\Program Files (x86)\AutoIt3\AutoItX...
13:02:37:-GracefulFail specified, using EA:'Continue'
13:02:37:No existing Match:test-path -path C:\Program Files (x86)\AutoIt3\AutoItX\verb-io\*.*
13:02:37: INFO:  (no $sRet returned on call)
13:02:37: INFO:  Copying module to profile (net of .git & .vscode dirs, and backed up content)...
13:02:37: INFO:  $srcFiles:post-filter out:
\\(Package|Tests|logs)\\|(\.ps[dm]1_(\d+-\d+[AP]M|TMP)|-LOG-BATCH-EXEC-\d+-\d+[AP]M-log\.txt|\\(fingerprint|Psd1filelist))$
13:02:37: INFO:  Discovered mod-copy files ($srcFiles.fullname):w
C:\sc\verb-io\verb-IO\CHANGELOG.md
C:\sc\verb-io\verb-IO\LICENSE.txt
C:\sc\verb-io\verb-IO\Quick-Start-Installation-and-Example.md
C:\sc\verb-io\verb-IO\README.md
C:\sc\verb-io\verb-IO\test-MediaFile.jpg
C:\sc\verb-io\verb-IO\verb-IO.psd1
C:\sc\verb-io\verb-IO\verb-IO.psm1
13:02:37: INFO:  Non-Pre-existing:$to:C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io
Pre-creating before copy...
VERBOSE: Performing the operation "Create Directory" on target "Destination: C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io".
13:02:37: INFO:  Mode   LastWriteTime        Length Name   
----   -------------        ------ ----   
d----- 9/17/2024 1:02:37 PM        verb-io
13:02:37: INFO:  -Merge:exclude $MergeBuildExcl \\(Public|Internal|External|Private)\\.*.ps1$ files from temp build copy
13:02:37: INFO:  Recursively remove empty subdirs below C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io...
.
13:02:37: INFO:  Move/Flatten Resource etc files into root of temp Build dir...
13:02:37: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io COPY of Quick-Start-Installation-and-Example.md
13:02:37: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io COPY of test-MediaFile.jpg
13:02:37: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io COPY of CHANGELOG.md
13:02:37: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io COPY of LICENSE.txt
13:02:37: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io COPY of README.md
13:02:37: INFO:  copy/Flatten Resource etc files into source root c:\sc\verb-io\verb-io dir...
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-io\Docs\Quick-Start-Installation-and-Example.md Destination: C:\sc\verb-io\verb-io\Quick-Start-Installation-and-Example.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-io\Docs\test-MediaFile.jpg Destination: C:\sc\verb-io\verb-io\test-MediaFile.jpg".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-io\CHANGELOG.md Destination: C:\sc\verb-io\verb-io\CHANGELOG.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-io\LICENSE.txt Destination: C:\sc\verb-io\verb-io\LICENSE.txt".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-io\README.md Destination: C:\sc\verb-io\verb-io\README.md".
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io\verb-IO.psm1'.
13:02:37: INFO:  Resolved $ModPsdPath:
C:\sc\verb-io\verb-io\verb-io.psd1
13:02:37: VERBOSE:  (resolve-path the CUMods verb-io.psd1 location)
13:02:37: INFO:  
==Verifying CU:Mods\verb-io\verb-io\Quick-Start-Installation-and-Example.md:
validated Quick-Start-Installation-and-Example.md is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io\Quick-Start-Installation-and-Example.md
13:02:37: INFO:  
==Verifying CU:Mods\verb-io\verb-io\test-MediaFile.jpg:
validated test-MediaFile.jpg is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io\test-MediaFile.jpg
13:02:37: INFO:  
==Verifying CU:Mods\verb-io\verb-io\CHANGELOG.md:
validated CHANGELOG.md is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io\CHANGELOG.md
13:02:37: INFO:  
==Verifying CU:Mods\verb-io\verb-io\LICENSE.txt:
validated LICENSE.txt is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io\LICENSE.txt
13:02:37: INFO:  
==Verifying CU:Mods\verb-io\verb-io\README.md:
validated README.md is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io\README.md
13:02:37: INFO:  Running pre-Publish-Module .psd1 test:
Test-ModuleManifest -path C:\sc\verb-io\verb-io\verb-io.psd1
VERBOSE: Loading module from path 'C:\sc\verb-io\verb-io\verb-IO.psm1'.
13:02:37: VERBOSE:  ((no $ttmm_Err: test-ModuleManifest had no errors))
13:02:37: INFO:  (Test-ModuleManifest:PASSED)
13:02:37: INFO:  (Profiling Repo: get-PSRepository -name lyncRepo...)
13:02:37: VERBOSE:  ((confirmed:$tRepo.PublishLocation accessible))
13:02:37: PROMPT:  Large # of funcitons: array of function names char length (C:\usr\work\ps\scripts\logs\processbulk-NewModule-verb-dev-LOG-BATCH-EXEC-20240917-1254PM-log.txttagdemo.length) -gt $iSkipAutomaticTagsThreshold:2000
Adding -SkipAutomaticTags param to Publish-Module call, to work around NuGit bug #344
13:02:37: INFO:  
Publish-Module w
Name                           Value                                                         
----                           -----                                                         
Name                           verb-io                                                       
Repository                     lyncRepo                                                      
RequiredVersion                15.0.0                                                        
Verbose                        True                                                          
ErrorAction                    Stop                                                          
errorVariable                  pbmo_Err                                                      
whatif                         False                                                         
SkipAutomaticTags              True
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Publish Location:'\\lynmsv10\lync_fs\scripts\sc'.
VERBOSE: Module 'verb-io' was found in 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\verb-io'.
VERBOSE: Loading module from path 'C:\Users\kadritss\AppData\Local\Temp\543116120\verb-io\verb-IO.psm1'.
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'lyncRepo'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is '\\lynmsv10\lync_fs\scripts\sc' and PackageManagementProvider is 'NuGet'.
VERBOSE: Total package yield:'0' for the specified package 'verb-io'.
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'lyncRepo'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is '\\lynmsv10\lync_fs\scripts\sc' and PackageManagementProvider is 'NuGet'.
VERBOSE: Total package yield:'1' for the specified package 'verb-io'.
VERBOSE: Performing the operation "Publish-Module" on target "Version '15.0.0' of module 'verb-IO'".
VERBOSE: Calling Publish-PSArtifactUtility
VERBOSE: Calling New-NuspecFile
VERBOSE: Calling New-NugetPackage
VERBOSE: Calling C:\chocolatey\bin\nuget.exe pack "C:\Users\kadritss\AppData\Local\Temp\543116120\verb-io\verb-IO.nuspec" -outputdirectory "C:\Users\kadritss\AppData\Local\Temp\543116120\verb-io" -noninteractive
VERBOSE: C:\chocolatey\bin\nuget.exe output:
VERBOSE: 	Attempting to build package from 'verb-IO.nuspec'.
VERBOSE: 	The package verb-IO.15.0.0 is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn why package readmes are important.
VERBOSE: 	Successfully created package 'C:\Users\kadritss\AppData\Local\Temp\543116120\verb-io\verb-IO.15.0.0.nupkg'.
VERBOSE:
VERBOSE: finished running C:\chocolatey\bin\nuget.exe with exit code 0
VERBOSE: Created Nuget Package C:\Users\kadritss\AppData\Local\Temp\543116120\verb-io\verb-IO.15.0.0.nupkg
VERBOSE: Successfully created nuget package at C:\Users\kadritss\AppData\Local\Temp\543116120\verb-io\verb-IO.15.0.0.nupkg
VERBOSE: Calling Publish-NugetPackage -NupkgPath C:\Users\kadritss\AppData\Local\Temp\543116120\verb-io\verb-IO.15.0.0.nupkg -Destination \\lynmsv10\lync_fs\scripts\sc -NugetExePath C:\chocolatey\bin\nuget.exe -UseDotnetCli:False
VERBOSE: Pushing verb-IO.15.0.0.nupkg to '\\lynmsv10\lync_fs\scripts\sc'...
Your package was pushed.
VERBOSE: Successfully published module 'verb-IO' to the module publish location '\\lynmsv10\lync_fs\scripts\sc'. Please allow few minutes for 'verb-IO' to show up in the search results.

13:02:55: WARNING:

13:02:55: WARNING:  FOUND $pbmo_Err: import-module HAD ERRORS! (no action, could be non-impacting)
WARNING: ===:System.Management.Automation.StopUpstreamCommandsException: System error.
   at Microsoft.PowerShell.Commands.SelectObjectCommand.ProcessRecord()
   at System.Management.Automation.CommandProcessor.ProcessRecord()

13:02:55: WARNING:

13:02:55: WARNING:  Publish-Module PBMO UNDEFINED ERROR!

13:02:55: WARNING:  System.Management.Automation.StopUpstreamCommandsException: System error.

13:02:55: WARNING:

13:02:55: WARNING:     at Microsoft.PowerShell.Commands.SelectObjectCommand.ProcessRecord()

13:02:55: WARNING:

13:02:55: WARNING:     at System.Management.Automation.CommandProcessor.ProcessRecord()

13:02:55: WARNING:  (But PublishModule doesn't bother to return a functional Error object with an Exception, so we can't trust/parse or act on it. Just echo)
13:02:55: INFO:  Waiting for:find-module -name verb-io -Repository lyncRepo ...
.
13:02:55:-GracefulFail specified, using EA:'Continue'
13:02:55:remove-item w
Name                           Value                                                         
----                           -----                                                         
Path                           {C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb...
Recurse                        True                                                          
ErrorAction                    Continue                                                      
whatif                         False
13:02:55: INFO:  Install-Module w
Name                           Value                                                         
----                           -----                                                         
Name                           verb-io                                                       
Repository                     lyncRepo                                                      
RequiredVersion                15.0.0                                                        
scope                          CurrentUser                                                   
force                          True                                                          
AllowClobber                   True                                                          
errorVariable                  ismo_Err                                                      
ErrorAction                    Stop                                                          
whatif                         False
13:02:59: VERBOSE:  ((no $ismo_Err: Install-Module had no errors))
13:02:59: INFO:  Testing Module:Import-Module w
Name                           Value                                                         
----                           -----                                                         
Name                           verb-io                                                       
ErrorAction                    Stop                                                          
errorVariable                  ipmo_Err                                                      
force                          True                                                          
verbose                        True
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\15.0.0\verb-io.psd1'.
VERBOSE: Populating RepositorySourceLocation property for module verb-io.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\15.0.0\verb-IO.psm1'.
VERBOSE: Importing function 'Add-ContentFixEncoding'.
VERBOSE: Importing function 'Add-DirectoryWatch'.
VERBOSE: Importing function 'Add-PSTitleBar'.
WARNING: The names of some imported commands from the module 'verb-io' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'Authenticate-File' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Authenticate-File'.
VERBOSE: Importing function 'backup-FileTDO'.
VERBOSE: Importing function 'clear-HostIndent'.
VERBOSE: Importing function 'Close-IfAlreadyRunning'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide3'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide4'.
VERBOSE: Importing function 'Compress-ArchiveFile'.
VERBOSE: Importing function 'convert-BinaryToDecimalStorageUnits'.
VERBOSE: Importing function 'convert-ColorHexCodeToWindowsMediaColorsName'.
VERBOSE: Importing function 'convert-DehydratedBytesToGB'.
VERBOSE: Importing function 'convert-DehydratedBytesToMB'.
VERBOSE: Importing function 'Convert-FileEncoding'.
VERBOSE: Importing function 'convert-HelpToMarkdown'.
VERBOSE: Importing function 'Convert-NumbertoWords'.
VERBOSE: Importing function 'convert-VideoToMp3'.
VERBOSE: Importing function 'ConvertFrom-CanonicalOU'.
VERBOSE: Importing function 'ConvertFrom-CanonicalUser'.
VERBOSE: Importing function 'ConvertFrom-CmdList'.
VERBOSE: Importing function 'ConvertFrom-DN'.
VERBOSE: Importing function 'ConvertFrom-IniFile'.
VERBOSE: Importing function 'convertFrom-MarkdownTable'.
VERBOSE: Importing function 'ConvertFrom-SourceTable'.
VERBOSE: Importing function 'ConvertFrom-UncPath'.
VERBOSE: Importing function 'ConvertTo-HashIndexed'.
VERBOSE: Importing function 'convertTo-MarkdownTable'.
VERBOSE: Importing function 'convertTo-Object'.
VERBOSE: Importing function 'ConvertTo-SRT'.
VERBOSE: Importing function 'ConvertTo-UncPath'.
VERBOSE: Importing function 'copy-Profile'.
VERBOSE: Importing function 'copy-ProfileTDO'.
VERBOSE: The 'Count-Object' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Count-Object'.
VERBOSE: The 'Create-ScheduledTaskLegacy' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "New".
VERBOSE: Importing function 'Create-ScheduledTaskLegacy'.
VERBOSE: The 'dump-Shortcuts' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Get".
VERBOSE: Importing function 'dump-Shortcuts'.
VERBOSE: The 'Echo-Finish' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-Finish'.
VERBOSE: The 'Echo-ScriptEnd' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-ScriptEnd'.
VERBOSE: The 'Echo-Start' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-Start'.
VERBOSE: Importing function 'Expand-ArchiveFile'.
VERBOSE: Importing function 'Expand-ISOFileTDO'.
VERBOSE: The 'extract-Icon' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Export".
VERBOSE: Importing function 'extract-Icon'.
VERBOSE: Importing function 'Find-LockedFileProcess'.
VERBOSE: Importing function 'Format-Json'.
VERBOSE: Importing function 'get-AliasDefinition'.
VERBOSE: Importing function 'Get-AverageItems'.
VERBOSE: Importing function 'get-colorcombo'.
VERBOSE: Importing function 'get-ColorNames'.
VERBOSE: Importing function 'Get-CombinationTDO'.
VERBOSE: Importing function 'get-ConsoleText'.
VERBOSE: Importing function 'Get-CountItems'.
VERBOSE: Importing function 'Get-FileEncoding'.
VERBOSE: Importing function 'Get-FileEncodingExtended'.
VERBOSE: Importing function 'get-filesignature'.
VERBOSE: Importing function 'Get-FileType'.
VERBOSE: Importing function 'get-FolderEmpty'.
VERBOSE: Importing function 'Get-FolderSize'.
VERBOSE: Importing function 'Get-FolderSize2'.
VERBOSE: Importing function 'Get-FsoShortName'.
VERBOSE: Importing function 'Get-FsoShortPath'.
VERBOSE: Importing function 'Get-FsoTypeObj'.
VERBOSE: Importing function 'get-HostIndent'.
VERBOSE: Importing function 'Get-KnownFolderTDO'.
VERBOSE: Importing function 'get-LoremName'.
VERBOSE: Importing function 'Get-PermutationTDO'.
VERBOSE: Importing function 'Get-ProductItems'.
VERBOSE: Importing function 'get-ProfileFilesTDO'.
VERBOSE: Importing function 'get-RegistryValue'.
VERBOSE: Importing function 'Get-ScheduledTaskLegacy'.
VERBOSE: Importing function 'Get-Shortcut'.
VERBOSE: Importing function 'Get-SumItems'.
VERBOSE: Importing function 'get-TaskReport'.
VERBOSE: Importing function 'Get-Time'.
VERBOSE: Importing function 'Get-TimeStamp'.
VERBOSE: Importing function 'get-TimeStampNow'.
VERBOSE: Importing function 'get-Uptime'.
VERBOSE: Importing function 'Invoke-Flasher'.
VERBOSE: Importing function 'Invoke-Pause'.
VERBOSE: Importing function 'Invoke-Pause2'.
VERBOSE: Importing function 'invoke-SoundCue'.
VERBOSE: Importing function 'Invoke-TakeownFileTDO'.
VERBOSE: Importing function 'Invoke-TakeownFolderTDO'.
VERBOSE: Importing function 'Invoke-TakeownRegistryTDO'.
VERBOSE: Importing function 'mount-UnavailableMappedDrives'.
VERBOSE: Importing function 'move-FileOnReboot'.
VERBOSE: Importing function 'New-RandomFilename'.
VERBOSE: Importing function 'new-Shortcut'.
VERBOSE: Importing function 'out-Clipboard'.
VERBOSE: Importing function 'Out-Excel'.
WARNING: Some imported command names contain one or more of the following restricted characters: # , ( ) {{ }} [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: The command name 'Out-Excel-Events' from the module 'verb-io' contains one or more of the following restricted characters: # , ( ) { } [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: Importing function 'Out-Excel-Events'.
VERBOSE: The 'parse-PSTitleBar' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'parse-PSTitleBar'.
VERBOSE: The 'play-beep' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'play-beep'.
VERBOSE: Importing function 'pop-HostIndent'.
VERBOSE: Importing function 'Pop-LocationFirst'.
VERBOSE: The 'prompt-Continue' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Read".
VERBOSE: Importing function 'prompt-Continue'.
VERBOSE: Importing function 'push-HostIndent'.
VERBOSE: Importing function 'Read-FolderBrowserDialog'.
VERBOSE: Importing function 'Read-Host2'.
VERBOSE: Importing function 'Read-InputBoxChoice'.
VERBOSE: Importing function 'Read-InputBoxChoiceHostUI'.
VERBOSE: Importing function 'Read-InputBoxDialog'.
VERBOSE: Importing function 'Read-MessageBoxDialog'.
VERBOSE: Importing function 'read-MultiLineInputDialogAdvanced'.
VERBOSE: Importing function 'Read-OpenFileDialog'.
VERBOSE: Importing function 'Read-PasswordInputBoxDialog'.
VERBOSE: The 'rebuild-PSTitleBar' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Initialize".
VERBOSE: Importing function 'rebuild-PSTitleBar'.
VERBOSE: Importing function 'Remove-AuthenticodeSignature'.
VERBOSE: Importing function 'Remove-DirectoryWatch'.
VERBOSE: Importing function 'Remove-InvalidFileNameChars'.
VERBOSE: Importing function 'Remove-InvalidVariableNameChars'.
VERBOSE: Importing function 'remove-ItemRetry'.
VERBOSE: Importing function 'Remove-JsonComments'.
VERBOSE: Importing function 'Remove-PSTitleBar'.
VERBOSE: Importing function 'Remove-ScheduledTaskLegacy'.
VERBOSE: Importing function 'remove-UnneededFileVariants'.
VERBOSE: Importing function 'repair-FileEncoding'.
VERBOSE: The 'replace-PSTitleBarText' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'replace-PSTitleBarText'.
VERBOSE: Importing function 'reset-ConsoleColors'.
VERBOSE: Importing function 'reset-HostIndent'.
VERBOSE: Importing function 'restore-FileTDO'.
VERBOSE: The 'Run-ScheduledTaskLegacy' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Invoke,Start".
VERBOSE: Importing function 'Run-ScheduledTaskLegacy'.
VERBOSE: Importing function 'Save-ConsoleOutputToClipBoard'.
VERBOSE: Importing function 'search-Excel'.
VERBOSE: Importing function 'select-first'.
VERBOSE: Importing function 'Select-last'.
VERBOSE: Importing function 'Select-StringAll'.
VERBOSE: Importing function 'set-AuthenticodeSignatureTDO'.
VERBOSE: Importing function 'set-ConsoleColors'.
VERBOSE: Importing function 'Set-ContentFixEncoding'.
VERBOSE: Importing function 'set-FileAssociation'.
VERBOSE: Importing function 'set-HostIndent'.
VERBOSE: Importing function 'set-ItemReadOnlyTDO'.
VERBOSE: Importing function 'set-PSTitleBar'.
VERBOSE: Importing function 'Set-RegistryValue'.
VERBOSE: Importing function 'Set-Shortcut'.
VERBOSE: The 'Shorten-Path' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Shorten-Path'.
VERBOSE: Importing function 'Show-MsgBox'.
VERBOSE: Importing function 'Start-SleepCountdown'.
VERBOSE: Importing function 'stop-driveburn'.
VERBOSE: Importing function 'test-FileLock'.
VERBOSE: Importing function 'test-FileSysAutomaticVariables'.
VERBOSE: Importing function 'test-IsLink'.
VERBOSE: Importing function 'test-IsUncPath'.
VERBOSE: Importing function 'test-LineEndings'.
VERBOSE: Importing function 'test-MediaFile'.
VERBOSE: Importing function 'test-MissingMediaSummary'.
VERBOSE: Importing function 'Test-PendingReboot'.
VERBOSE: Importing function 'test-PSTitleBar'.
VERBOSE: Importing function 'Test-RegistryKey'.
VERBOSE: Importing function 'Test-RegistryValue'.
VERBOSE: Importing function 'Test-RegistryValueNotNull'.
VERBOSE: The 'Touch-File' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Touch-File'.
VERBOSE: The 'trim-FileList' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'trim-FileList'.
VERBOSE: Importing function 'unless'.
VERBOSE: Importing function 'write-hostCallOutTDO'.
VERBOSE: Importing function 'write-hostColorMatch'.
VERBOSE: Importing function 'write-HostIndent'.
VERBOSE: Importing function 'Write-ProgressHelper'.
VERBOSE: Importing alias 'add-PSTitle'.
VERBOSE: Importing alias 'backup-File'.
VERBOSE: Importing alias 'c-hi'.
VERBOSE: Importing alias 'cfst'.
VERBOSE: Importing alias 'check-FileLock'.
VERBOSE: Importing alias 'ColorMatch'.
VERBOSE: Importing alias 'Compress-ZipFile'.
VERBOSE: Importing alias 'convert-ToMp3'.
VERBOSE: Importing alias 'convertfrom-mdt'.
VERBOSE: Importing alias 'ConvertTo-CanonicalName'.
VERBOSE: Importing alias 'ConvertTo-DNOU'.
VERBOSE: Importing alias 'ConvertTo-DNUser'.
VERBOSE: Importing alias 'convertTo-Mp3'.
VERBOSE: Importing alias 'copy-Profile'.
VERBOSE: Importing alias 'expand-ISOFile'.
VERBOSE: Importing alias 'Expand-ZipFile'.
VERBOSE: Importing alias 'fix-encoding'.
VERBOSE: Importing alias 'gald'.
VERBOSE: Importing alias 'gclr'.
VERBOSE: Importing alias 'Get-ProfileFiles'.
VERBOSE: Importing alias 'get-RegistryProperty'.
VERBOSE: Importing alias 'get-ScheduledTaskReport'.
VERBOSE: Importing alias 'in-markdowntable'.
VERBOSE: Importing alias 'in-mdt'.
VERBOSE: Importing alias 'invoke-audio'.
VERBOSE: Importing alias 'invoke-sound'.
VERBOSE: Importing alias 'out-markdowntable'.
VERBOSE: Importing alias 'out-mdt'.
VERBOSE: Importing alias 'pop-hi'.
VERBOSE: Importing alias 'popd1'.
VERBOSE: Importing alias 'push-hi'.
VERBOSE: Importing alias 'r-hi'.
VERBOSE: Importing alias 'Remove-IllegalFileNameChars'.
VERBOSE: Importing alias 'restore-file'.
VERBOSE: Importing alias 'revert-File'.
VERBOSE: Importing alias 's-hi'.
VERBOSE: Importing alias 'sdb'.
VERBOSE: Importing alias 'set-ConsColor'.
VERBOSE: Importing alias 'Set-FileContent'.
VERBOSE: Importing alias 'set-PSTitle'.
VERBOSE: Importing alias 'set-RegistryProperty'.
VERBOSE: Importing alias 'sign-file'.
VERBOSE: Importing alias 'test-IsHardLink'.
VERBOSE: Importing alias 'test-IsJunction'.
VERBOSE: Importing alias 'test-IsSymlink'.
VERBOSE: Importing alias 'tmf'.
VERBOSE: Importing alias 'touch'.
VERBOSE: Importing alias 'Unwatch-Directory'.
VERBOSE: Importing alias 'update-RegistryProperty'.
VERBOSE: Importing alias 'vmf'.
VERBOSE: Importing alias 'w-hCO'.
VERBOSE: Importing alias 'w-hi'.
VERBOSE: Importing alias 'Watch-Directory'.
VERBOSE: Importing alias 'write-hostAlert'.
13:02:59: VERBOSE:  ((no $ipmo_Err: test-ModuleManifest had no errors))
13:02:59: INFO:  Retrieving matching Repo .nupkg file:
gci \\lynmsv10\lync_fs\scripts\sc\verb-io.15.0.0.nupkgl..
13:02:59: INFO:  Proper updated .nupkg file found:verb-io.15.0.0.nupkg, copying to local Pkg directory.
13:02:59:Copy-Item w
Name                           Value                                                         
----                           -----                                                         
path                           \\lynmsv10\lync_fs\scripts\sc\verb-io.15.0.0.nupkg            
destination                    c:\sc\verb-io\Package                                         
whatif                         False
13:03:00: INFO:  remove-UnneededFileVariants w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-io\Package                                         
Include                        verb-io*.nupkg                                                
Pattern                                                                                      
FilterOn                       CreationTime                                                  
Keep                           2                                                             
KeepToday                      True                                                          
verbose                        True                                                          
whatif                         False
13:03:00:gci w
Name                           Value                                                         
----                           -----                                                         
path                           c:\sc\verb-io\Package\*                                       
include                        verb-io*.nupkg                                                
ErrorAction                    Stop
VERBOSE: $cuttime:09/17/2024 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/17/2024 00:00:00 AM, on CreationTime property
(4 in set *before* filtering)
(3 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(3 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
13:03:00:Reducing matched population from 4 to 1 files via:
filtered files on CreationTime prior to 09/17/2024 00:00:00 AM
13:03:00:Remove-Item w 
Name                           Value                                                         
----                           -----                                                         
path                           C:\sc\verb-io\Package\verb-io.11.0.5.nupkg                    
ErrorAction                    STOP                                                          
whatif                         False
True
13:03:00: INFO:  remove-UnneededFileVariants w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-io\Tests                                           
Include                        ScriptAnalyzer-Results-*.xml                                  
Pattern                                                                                      
FilterOn                       CreationTime                                                  
Keep                           4                                                             
KeepToday                      True                                                          
verbose                        True                                                          
whatif                         False
13:03:00:gci w
Name                           Value                                                         
----                           -----                                                         
path                           c:\sc\verb-io\Tests\*                                         
include                        ScriptAnalyzer-Results-*.xml                                  
ErrorAction                    Stop
VERBOSE: $cuttime:09/17/2024 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/17/2024 00:00:00 AM, on CreationTime property
(5 in set *before* filtering)
(5 in set *after* filtering)
VERBOSE: attempting to retain remaining 4 generations net of prior filtering
(5 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:4 spec - insufficient older files available)
13:03:00:Reducing matched population from 5 to 1 files via:
filtered files on CreationTime prior to 09/17/2024 00:00:00 AM
13:03:00:Remove-Item w 
Name                           Value                                                         
----                           -----                                                         
path                           C:\sc\verb-io\Tests\ScriptAnalyzer-Results-20230926-1115AM.xml
ErrorAction                    STOP                                                          
whatif                         False
True
13:03:00: INFO:  -RunTest specified: Running Pester Test script:
c:\sc\verb-io\Tests\verb-io.tests.ps1
13:03:00:
#*------v RUNNING c:\sc\verb-io\Tests\verb-io.tests.ps1: v------
WARNING: The names of some imported commands from the module 'verb-io' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
WARNING: Some imported command names contain one or more of the following restricted characters: # , ( ) {{ }} [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
Describing Module Information
   Context Manifest Testing
    [+] Valid Module Manifest 35ms
PS>TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
    [-] Valid Manifest Name 93ms
      RuntimeException: '-Be' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 137
PS>TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
    [-] Generic Version Check 100ms
      RuntimeException: '-Not' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 140
    [+] Valid Author 12ms
    [+] Valid Company Name 11ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Valid License 9ms
      Expected: value to not be empty
      154:             $ModuleInformation.LicenseURI | Should not BeNullOrEmpty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 154
PS>TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
    [-] Valid Manifest Description 85ms
      RuntimeException: '-Not' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 162
PS>TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
    [-] Valid Manifest Root Module 79ms
      RuntimeException: '-Be' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 170
PS>TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
    [-] Valid Manifest GUID 81ms
      RuntimeException: '-Be' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 173
    [+] Required Modules 11ms
   Context Exported Functions
PS>TerminatingError(): "Expected: {160}
But was:  {204}"
>> TerminatingError(): "Expected: {160}
But was:  {204}"
    [-] Proper Number of Functions Exported 114ms
      Expected: {160}
      But was:  {204}
      214:             $ExportedCount | Should be $FileCount
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 214
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Exports All Public Functions 160ms
      Expected: {True}
      But was:  {False}
      224:                 $ExFunctions -contains $FunctionName | Should Be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 224
    [+] Compare Missing Functions 16ms
Describing Help
   Context Function - add-PSTitle
    [+] Synopsis 146ms
    [+] Description 167ms
    [+] Examples 205ms
Describing Help
   Context Function - backup-File
    [+] Synopsis 115ms
    [+] Description 256ms
    [+] Examples 112ms
Describing Help
   Context Function - check-FileLock
    [+] Synopsis 194ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 402ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 132ms
Describing Help
   Context Function - c-hi
    [+] Synopsis 193ms
    [+] Description 105ms
    [+] Examples 180ms
Describing Help
   Context Function - Compress-ZipFile
    [+] Synopsis 130ms
    [+] Description 263ms
    [+] Examples 117ms
Describing Help
   Context Function - convertfrom-mdt
    [+] Synopsis 178ms
    [+] Description 116ms
    [+] Examples 179ms
Describing Help
   Context Function - ConvertTo-CanonicalName
    [+] Synopsis 231ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 204ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 195ms
Describing Help
   Context Function - ConvertTo-DNOU
    [+] Synopsis 120ms
    [+] Description 192ms
    [+] Examples 108ms
Describing Help
   Context Function - ConvertTo-DNUser
    [+] Synopsis 273ms
    [+] Description 110ms
    [+] Examples 203ms
Describing Help
   Context Function - convertTo-Mp3
    [+] Synopsis 195ms
    [+] Description 108ms
    [+] Examples 634ms
Describing Help
   Context Function - convert-ToMp3
    [+] Synopsis 117ms
    [+] Description 185ms
    [+] Examples 122ms
Describing Help
   Context Function - copy-Profile
    [+] Synopsis 207ms
    [+] Description 192ms
    [+] Examples 109ms
Describing Help
   Context Function - expand-ISOFile
PS>TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
>> TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
    [-] Synopsis 194ms
      MetadataException: The alias "PsPath" is declared multiple times.
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 248
PS>TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
>> TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
    [-] Description 106ms
      MetadataException: The alias "PsPath" is declared multiple times.
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
>> TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
    [-] Examples 298ms
      MetadataException: The alias "PsPath" is declared multiple times.
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 254
Describing Help
   Context Function - Expand-ZipFile
    [+] Synopsis 257ms
    [+] Description 109ms
    [+] Examples 176ms
Describing Help
   Context Function - fix-encoding
    [+] Synopsis 127ms
    [+] Description 175ms
    [+] Examples 119ms
Describing Help
   Context Function - Get-ProfileFiles
    [+] Synopsis 174ms
    [+] Description 278ms
    [+] Examples 109ms
Describing Help
   Context Function - get-RegistryProperty
    [+] Synopsis 192ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 116ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 195ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - get-ScheduledTaskReport
    [+] Synopsis 124ms
    [+] Description 191ms
    [+] Examples 106ms
Describing Help
   Context Function - in-markdowntable
    [+] Synopsis 292ms
    [+] Description 114ms
    [+] Examples 172ms
Describing Help
   Context Function - in-mdt
    [+] Synopsis 125ms
    [+] Description 188ms
    [+] Examples 297ms
Describing Help
   Context Function - invoke-audio
    [+] Synopsis 130ms
    [+] Description 162ms
    [+] Examples 114ms
Describing Help
   Context Function - invoke-sound
    [+] Synopsis 119ms
    [+] Description 197ms
    [+] Examples 111ms
Describing Help
   Context Function - out-markdowntable
    [+] Synopsis 304ms
    [+] Description 116ms
    [+] Examples 218ms
Describing Help
   Context Function - out-mdt
    [+] Synopsis 288ms
    [+] Description 120ms
    [+] Examples 238ms
Describing Help
   Context Function - pop-hi
    [+] Synopsis 302ms
    [+] Description 166ms
    [+] Examples 237ms
Describing Help
   Context Function - push-hi
    [+] Synopsis 143ms
    [+] Description 207ms
    [+] Examples 239ms
Describing Help
   Context Function - Remove-IllegalFileNameChars
    [+] Synopsis 184ms
    [+] Description 203ms
    [+] Examples 128ms
Describing Help
   Context Function - restore-file
    [+] Synopsis 376ms
    [+] Description 216ms
    [+] Examples 120ms
Describing Help
   Context Function - revert-File
    [+] Synopsis 337ms
    [+] Description 133ms
    [+] Examples 179ms
Describing Help
   Context Function - r-hi
    [+] Synopsis 145ms
    [+] Description 162ms
    [+] Examples 689ms
Describing Help
   Context Function - set-ConsColor
    [+] Synopsis 138ms
    [+] Description 268ms
    [+] Examples 131ms
Describing Help
   Context Function - Set-FileContent
    [+] Synopsis 238ms
    [+] Description 117ms
    [+] Examples 223ms
Describing Help
   Context Function - set-PSTitle
    [+] Synopsis 342ms
    [+] Description 176ms
    [+] Examples 116ms
Describing Help
   Context Function - set-RegistryProperty
    [+] Synopsis 292ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 122ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 196ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - s-hi
    [+] Synopsis 120ms
    [+] Description 196ms
    [+] Examples 115ms
Describing Help
   Context Function - sign-file
    [+] Synopsis 261ms
    [+] Description 127ms
    [+] Examples 364ms
Describing Help
   Context Function - test-IsHardLink
    [+] Synopsis 126ms
    [+] Description 220ms
    [+] Examples 140ms
Describing Help
   Context Function - test-IsJunction
    [+] Synopsis 160ms
    [+] Description 184ms
    [+] Examples 128ms
Describing Help
   Context Function - test-IsSymlink
    [+] Synopsis 305ms
    [+] Description 114ms
    [+] Examples 196ms
Describing Help
   Context Function - Unwatch-Directory
    [+] Synopsis 141ms
    [+] Description 206ms
    [+] Examples 121ms
Describing Help
   Context Function - update-RegistryProperty
    [+] Synopsis 216ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 115ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 297ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - Watch-Directory
    [+] Synopsis 196ms
    [+] Description 252ms
    [+] Examples 112ms
Describing Help
   Context Function - w-hCO
    [+] Synopsis 205ms
    [+] Description 115ms
    [+] Examples 245ms
Describing Help
   Context Function - w-hi
    [+] Synopsis 191ms
    [+] Description 117ms
    [+] Examples 192ms
Describing Help
   Context Function - write-hostAlert
    [+] Synopsis 228ms
    [+] Description 123ms
    [+] Examples 211ms
Describing Help
   Context Function - Add-ContentFixEncoding
    [+] Synopsis 243ms
    [+] Description 138ms
    [+] Examples 217ms
Describing Help
   Context Function - Add-DirectoryWatch
    [+] Synopsis 124ms
    [+] Description 226ms
    [+] Examples 134ms
Describing Help
   Context Function - Add-PSTitleBar
    [+] Synopsis 344ms
    [+] Description 128ms
    [+] Examples 215ms
Describing Help
   Context Function - Authenticate-File
    [+] Synopsis 118ms
    [+] Description 225ms
    [+] Examples 121ms
Describing Help
   Context Function - backup-FileTDO
    [+] Synopsis 941ms
    [+] Description 151ms
    [+] Examples 189ms
Describing Help
   Context Function - clear-HostIndent
    [+] Synopsis 127ms
    [+] Description 213ms
    [+] Examples 110ms
Describing Help
   Context Function - Close-IfAlreadyRunning
    [+] Synopsis 130ms
    [+] Description 345ms
    [+] Examples 116ms
Describing Help
   Context Function - Compare-ObjectsSideBySide
    [+] Synopsis 270ms
    [+] Description 123ms
    [+] Examples 216ms
Describing Help
   Context Function - Compare-ObjectsSideBySide3
    [+] Synopsis 253ms
    [+] Description 124ms
    [+] Examples 420ms
Describing Help
   Context Function - Compare-ObjectsSideBySide4
    [+] Synopsis 120ms
    [+] Description 201ms
    [+] Examples 139ms
Describing Help
   Context Function - Compress-ArchiveFile
    [+] Synopsis 252ms
    [+] Description 109ms
    [+] Examples 213ms
Describing Help
   Context Function - convert-BinaryToDecimalStorageUnits
    [+] Synopsis 123ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 339ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 125ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - convert-ColorHexCodeToWindowsMediaColorsName
    [+] Synopsis 210ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 220ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 127ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - convert-DehydratedBytesToGB
    [+] Synopsis 171ms
    [+] Description 110ms
    [+] Examples 268ms
Describing Help
   Context Function - convert-DehydratedBytesToMB
    [+] Synopsis 195ms
    [+] Description 138ms
    [+] Examples 206ms
Describing Help
   Context Function - Convert-FileEncoding
    [+] Synopsis 322ms
    [+] Description 112ms
    [+] Examples 191ms
Describing Help
   Context Function - ConvertFrom-CanonicalOU
    [+] Synopsis 126ms
    [+] Description 228ms
    [+] Examples 259ms
Describing Help
   Context Function - ConvertFrom-CanonicalUser
    [+] Synopsis 149ms
    [+] Description 249ms
    [+] Examples 123ms
Describing Help
   Context Function - ConvertFrom-DN
    [+] Synopsis 184ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 413ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 127ms
Describing Help
   Context Function - ConvertFrom-IniFile
    [+] Synopsis 282ms
    [+] Description 124ms
    [+] Examples 233ms
Describing Help
   Context Function - convertFrom-MarkdownTable
    [+] Synopsis 365ms
    [+] Description 122ms
    [+] Examples 221ms
Describing Help
   Context Function - ConvertFrom-SourceTable
    [+] Synopsis 137ms
    [+] Description 204ms
    [+] Examples 119ms
Describing Help
   Context Function - ConvertFrom-UncPath
    [+] Synopsis 230ms
    [+] Description 117ms
    [+] Examples 809ms
Describing Help
   Context Function - convert-HelpToMarkdown
    [+] Synopsis 133ms
    [+] Description 215ms
    [+] Examples 117ms
Describing Help
   Context Function - Convert-NumbertoWords
    [+] Synopsis 239ms
    [+] Description 208ms
    [+] Examples 155ms
Describing Help
   Context Function - ConvertTo-HashIndexed
    [+] Synopsis 214ms
    [+] Description 152ms
    [+] Examples 345ms
Describing Help
   Context Function - convertTo-MarkdownTable
    [+] Synopsis 197ms
    [+] Description 125ms
    [+] Examples 196ms
Describing Help
   Context Function - convertTo-Object
    [+] Synopsis 120ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 226ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 113ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - ConvertTo-SRT
    [+] Synopsis 346ms
    [+] Description 123ms
    [+] Examples 227ms
Describing Help
   Context Function - ConvertTo-UncPath
    [+] Synopsis 130ms
    [+] Description 238ms
    [+] Examples 137ms
Describing Help
   Context Function - convert-VideoToMp3
    [+] Synopsis 268ms
    [+] Description 190ms
    [+] Examples 128ms
Describing Help
   Context Function - copy-Profile
    [+] Synopsis 212ms
    [+] Description 144ms
    [+] Examples 212ms
Describing Help
   Context Function - copy-ProfileTDO
    [+] Synopsis 123ms
    [+] Description 288ms
    [+] Examples 110ms
Describing Help
   Context Function - Count-Object
    [+] Synopsis 186ms
    [+] Description 194ms
    [+] Examples 111ms
Describing Help
   Context Function - Create-ScheduledTaskLegacy
    [+] Synopsis 290ms
    [+] Description 112ms
    [+] Examples 184ms
Describing Help
   Context Function - dump-Shortcuts
    [+] Synopsis 134ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 309ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 211ms
Describing Help
   Context Function - Echo-Finish
    [+] Synopsis 122ms
    [+] Description 196ms
    [+] Examples 116ms
Describing Help
   Context Function - Echo-ScriptEnd
    [+] Synopsis 182ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 313ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 156ms
Describing Help
   Context Function - Echo-Start
    [+] Synopsis 181ms
    [+] Description 113ms
    [+] Examples 181ms
Describing Help
   Context Function - Expand-ArchiveFile
    [+] Synopsis 191ms
    [+] Description 120ms
    [+] Examples 276ms
Describing Help
   Context Function - Expand-ISOFileTDO
PS>TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
>> TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
    [-] Synopsis 111ms
      MetadataException: The alias "PsPath" is declared multiple times.
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 248
PS>TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
>> TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
    [-] Description 99ms
      MetadataException: The alias "PsPath" is declared multiple times.
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
>> TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
    [-] Examples 171ms
      MetadataException: The alias "PsPath" is declared multiple times.
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 254
Describing Help
   Context Function - extract-Icon
    [+] Synopsis 188ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 120ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 216ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - Find-LockedFileProcess
    [+] Synopsis 162ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 416ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 134ms
Describing Help
   Context Function - Format-Json
    [+] Synopsis 271ms
    [+] Description 112ms
    [+] Examples 225ms
Describing Help
   Context Function - get-AliasDefinition
    [+] Synopsis 154ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 793ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 228ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - Get-AverageItems
    [+] Synopsis 145ms
    [+] Description 240ms
    [+] Examples 122ms
Describing Help
   Context Function - get-colorcombo
    [+] Synopsis 261ms
    [+] Description 132ms
    [+] Examples 343ms
Describing Help
   Context Function - get-ColorNames
    [+] Synopsis 137ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (get-ColorNames.ps1 
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (get-ColorNames.ps1
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

    [+] Description 263ms
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:254 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (get-ColorNames.ps1 
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:254 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (get-ColorNames.ps1
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

    [+] Examples 300ms
Describing Help
   Context Function - Get-CombinationTDO
    [+] Synopsis 123ms
    [+] Description 318ms
    [+] Examples 114ms
Describing Help
   Context Function - get-ConsoleText
    [+] Synopsis 208ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 115ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 192ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - Get-CountItems
    [+] Synopsis 211ms
    [+] Description 114ms
    [+] Examples 327ms
Describing Help
   Context Function - Get-FileEncoding
    [+] Synopsis 120ms
    [+] Description 177ms
    [+] Examples 116ms
Describing Help
   Context Function - Get-FileEncodingExtended
    [+] Synopsis 340ms
    [+] Description 129ms
    [+] Examples 195ms
Describing Help
   Context Function - get-filesignature
    [+] Synopsis 122ms
    [+] Description 217ms
    [+] Examples 239ms
Describing Help
   Context Function - Get-FileType
    [+] Synopsis 127ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 297ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 124ms
Describing Help
   Context Function - get-FolderEmpty
    [+] Synopsis 219ms
    [+] Description 114ms
    [+] Examples 178ms
Describing Help
   Context Function - Get-FolderSize
    [+] Synopsis 193ms
    [+] Description 105ms
    [+] Examples 169ms
Describing Help
   Context Function - Get-FolderSize2
    [+] Synopsis 217ms
    [+] Description 216ms
    [+] Examples 114ms
Describing Help
   Context Function - Get-FsoShortName
    [+] Synopsis 198ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 203ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 187ms
Describing Help
   Context Function - Get-FsoShortPath
    [+] Synopsis 129ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 373ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 219ms
Describing Help
   Context Function - Get-FsoTypeObj
    [+] Synopsis 129ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 282ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 131ms
Describing Help
   Context Function - get-HostIndent
    [+] Synopsis 209ms
    [+] Description 118ms
    [+] Examples 837ms
Describing Help
   Context Function - Get-KnownFolderTDO
    [+] Synopsis 294ms
    [+] Description 163ms
    [+] Examples 244ms
Describing Help
   Context Function - get-LoremName
    [+] Synopsis 174ms
    [+] Description 201ms
    [+] Examples 153ms
Describing Help
   Context Function - Get-PermutationTDO
    [+] Synopsis 173ms
    [+] Description 190ms
    [+] Examples 121ms
Describing Help
   Context Function - Get-ProductItems
    [+] Synopsis 219ms
    [+] Description 134ms
    [+] Examples 189ms
Describing Help
   Context Function - get-ProfileFilesTDO
    [+] Synopsis 125ms
    [+] Description 329ms
    [+] Examples 137ms
Describing Help
   Context Function - get-RegistryValue
    [+] Synopsis 214ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 127ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 208ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - Get-ScheduledTaskLegacy
    [+] Synopsis 304ms
    [+] Description 133ms
    [+] Examples 206ms
Describing Help
   Context Function - Get-Shortcut
    [+] Synopsis 155ms
    [+] Description 243ms
    [+] Examples 119ms
Describing Help
   Context Function - Get-SumItems
    [+] Synopsis 205ms
    [+] Description 132ms
    [+] Examples 341ms
Describing Help
   Context Function - get-TaskReport
    [+] Synopsis 178ms
    [+] Description 182ms
    [+] Examples 125ms
Describing Help
   Context Function - Get-Time
    [+] Synopsis 199ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{syntax=@{synt...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{syntax=@{synt...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 203ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 192ms
Describing Help
   Context Function - Get-TimeStamp
    [+] Synopsis 273ms
    [+] Description 110ms
    [+] Examples 174ms
Describing Help
   Context Function - get-TimeStampNow
    [+] Synopsis 121ms
    [+] Description 223ms
    [+] Examples 113ms
Describing Help
   Context Function - get-Uptime
    [+] Synopsis 356ms
    [+] Description 293ms
    [+] Examples 332ms
Describing Help
   Context Function - Invoke-Flasher
    [+] Synopsis 203ms
    [+] Description 121ms
    [+] Examples 195ms
Describing Help
   Context Function - Invoke-Pause
    [+] Synopsis 135ms
    [+] Description 224ms
    [+] Examples 127ms
Describing Help
   Context Function - Invoke-Pause2
    [+] Synopsis 359ms
    [+] Description 117ms
    [+] Examples 231ms
Describing Help
   Context Function - invoke-SoundCue
    [+] Synopsis 128ms
    [+] Description 180ms
    [+] Examples 119ms
Describing Help
   Context Function - Invoke-TakeownFileTDO
    [+] Synopsis 285ms
    [+] Description 254ms
    [+] Examples 172ms
Describing Help
   Context Function - Invoke-TakeownFolderTDO
    [+] Synopsis 216ms
    [+] Description 135ms
    [+] Examples 233ms
Describing Help
   Context Function - Invoke-TakeownRegistryTDO
    [+] Synopsis 125ms
    [+] Description 723ms
    [+] Examples 220ms
Describing Help
   Context Function - mount-UnavailableMappedDrives
    [+] Synopsis 147ms
    [+] Description 265ms
    [+] Examples 125ms
Describing Help
   Context Function - move-FileOnReboot
    [+] Synopsis 351ms
    [+] Description 122ms
    [+] Examples 230ms
Describing Help
   Context Function - New-RandomFilename
    [+] Synopsis 126ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 221ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 124ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - new-Shortcut
    [+] Synopsis 320ms
    [+] Description 193ms
    [+] Examples 146ms
Describing Help
   Context Function - out-Clipboard
    [+] Synopsis 253ms
    [+] Description 210ms
    [+] Examples 291ms
Describing Help
   Context Function - Out-Excel
    [+] Synopsis 140ms
    [+] Description 202ms
    [+] Examples 199ms
Describing Help
   Context Function - Out-Excel-Events
    [+] Synopsis 122ms
    [+] Description 286ms
    [+] Examples 125ms
Describing Help
   Context Function - parse-PSTitleBar
    [+] Synopsis 120ms
    [+] Description 196ms
    [+] Examples 113ms
Describing Help
   Context Function - play-beep
    [+] Synopsis 197ms
    [+] Description 112ms
    [+] Examples 298ms
Describing Help
   Context Function - pop-HostIndent
    [+] Synopsis 122ms
    [+] Description 232ms
    [+] Examples 118ms
Describing Help
   Context Function - Pop-LocationFirst
    [+] Synopsis 200ms
    [+] Description 181ms
    [+] Examples 113ms
Describing Help
   Context Function - prompt-Continue
    [+] Synopsis 242ms
    [+] Description 222ms
    [+] Examples 113ms
Describing Help
   Context Function - push-HostIndent
    [+] Synopsis 202ms
    [+] Description 120ms
    [+] Examples 207ms
Describing Help
   Context Function - Read-FolderBrowserDialog
    [+] Synopsis 125ms
    [+] Description 387ms
    [+] Examples 164ms
Describing Help
   Context Function - Read-Host2
    [+] Synopsis 241ms
    [+] Description 142ms
    [+] Examples 224ms
Describing Help
   Context Function - Read-InputBoxChoice
    [+] Synopsis 211ms
    [+] Description 165ms
    [+] Examples 312ms
Describing Help
   Context Function - Read-InputBoxChoiceHostUI
    [+] Synopsis 132ms
    [+] Description 190ms
    [+] Examples 115ms
Describing Help
   Context Function - Read-InputBoxDialog
    [+] Synopsis 194ms
    [+] Description 194ms
    [+] Examples 121ms
Describing Help
   Context Function - Read-MessageBoxDialog
    [+] Synopsis 687ms
    [+] Description 114ms
    [+] Examples 223ms
Describing Help
   Context Function - read-MultiLineInputDialogAdvanced
    [+] Synopsis 126ms
    [+] Description 190ms
    [+] Examples 112ms
Describing Help
   Context Function - Read-OpenFileDialog
    [+] Synopsis 181ms
    [+] Description 117ms
    [+] Examples 260ms
Describing Help
   Context Function - Read-PasswordInputBoxDialog
    [+] Synopsis 193ms
    [+] Description 119ms
    [+] Examples 189ms
Describing Help
   Context Function - rebuild-PSTitleBar
    [+] Synopsis 123ms
    [+] Description 190ms
    [+] Examples 119ms
Describing Help
   Context Function - Remove-AuthenticodeSignature
    [+] Synopsis 330ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (Remove-Authenti...nParameters>]
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (Remove-Authenti...nParameters>]
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

    [+] Description 218ms
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:254 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (Remove-Authenti...nParameters>]
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:254 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (Remove-Authenti...nParameters>]
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

    [+] Examples 309ms
Describing Help
   Context Function - Remove-DirectoryWatch
    [+] Synopsis 199ms
    [+] Description 136ms
    [+] Examples 274ms
Describing Help
   Context Function - Remove-InvalidFileNameChars
    [+] Synopsis 192ms
    [+] Description 128ms
    [+] Examples 187ms
Describing Help
   Context Function - Remove-InvalidVariableNameChars
    [+] Synopsis 130ms
    [+] Description 213ms
    [+] Examples 116ms
Describing Help
   Context Function - remove-ItemRetry
    [+] Synopsis 315ms
    [+] Description 113ms
    [+] Examples 190ms
Describing Help
   Context Function - Remove-JsonComments
    [+] Synopsis 131ms
    [+] Description 184ms
    [+] Examples 117ms
Describing Help
   Context Function - Remove-PSTitleBar
    [+] Synopsis 261ms
    [+] Description 123ms
    [+] Examples 181ms
Describing Help
   Context Function - Remove-ScheduledTaskLegacy
    [+] Synopsis 221ms
    [+] Description 119ms
    [+] Examples 191ms
Describing Help
   Context Function - remove-UnneededFileVariants
    [+] Synopsis 128ms
    [+] Description 284ms
    [+] Examples 118ms
Describing Help
   Context Function - repair-FileEncoding
    [+] Synopsis 234ms
    [+] Description 173ms
    [+] Examples 257ms
Describing Help
   Context Function - replace-PSTitleBarText
    [+] Synopsis 263ms
    [+] Description 181ms
    [+] Examples 234ms
Describing Help
   Context Function - reset-ConsoleColors
    [+] Synopsis 277ms
    [+] Description 178ms
    [+] Examples 196ms
Describing Help
   Context Function - reset-HostIndent
    [+] Synopsis 180ms
    [+] Description 199ms
    [+] Examples 273ms
Describing Help
   Context Function - restore-FileTDO
    [+] Synopsis 200ms
    [+] Description 261ms
    [+] Examples 113ms
Describing Help
   Context Function - Run-ScheduledTaskLegacy
    [+] Synopsis 256ms
    [+] Description 121ms
    [+] Examples 236ms
Describing Help
   Context Function - Save-ConsoleOutputToClipBoard
    [+] Synopsis 133ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 861ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 318ms
Describing Help
   Context Function - search-Excel
    [+] Synopsis 146ms
    [+] Description 227ms
    [+] Examples 165ms
Describing Help
   Context Function - select-first
    [+] Synopsis 512ms
    [+] Description 156ms
    [+] Examples 221ms
Describing Help
   Context Function - Select-last
    [+] Synopsis 283ms
    [+] Description 199ms
    [+] Examples 286ms
Describing Help
   Context Function - Select-StringAll
    [+] Synopsis 259ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 480ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 204ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - set-AuthenticodeSignatureTDO
    [+] Synopsis 336ms
    [+] Description 206ms
    [+] Examples 147ms
Describing Help
   Context Function - set-ConsoleColors
    [+] Synopsis 306ms
    [+] Description 138ms
    [+] Examples 204ms
Describing Help
   Context Function - Set-ContentFixEncoding
    [+] Synopsis 267ms
    [+] Description 243ms
    [+] Examples 148ms
Describing Help
   Context Function - set-FileAssociation
    [+] Synopsis 272ms
    [+] Description 123ms
    [+] Examples 340ms
Describing Help
   Context Function - set-HostIndent
    [+] Synopsis 250ms
    [+] Description 143ms
    [+] Examples 328ms
Describing Help
   Context Function - set-ItemReadOnlyTDO
    [+] Synopsis 233ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 131ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 239ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - set-PSTitleBar
    [+] Synopsis 286ms
    [+] Description 222ms
    [+] Examples 216ms
Describing Help
   Context Function - Set-RegistryValue
    [+] Synopsis 171ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 229ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 148ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - Set-Shortcut
    [+] Synopsis 248ms
    [+] Description 125ms
    [+] Examples 345ms
Describing Help
   Context Function - Shorten-Path
    [+] Synopsis 284ms
    [+] Description 145ms
    [+] Examples 246ms
Describing Help
   Context Function - Show-MsgBox
    [+] Synopsis 152ms
    [+] Description 218ms
    [+] Examples 379ms
Describing Help
   Context Function - Start-SleepCountdown
    [+] Synopsis 161ms
    [+] Description 248ms
    [+] Examples 137ms
Describing Help
   Context Function - stop-driveburn
    [+] Synopsis 318ms
    [+] Description 160ms
    [+] Examples 228ms
Describing Help
   Context Function - test-FileLock
    [+] Synopsis 293ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 247ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 235ms
Describing Help
   Context Function - test-FileSysAutomaticVariables
    [+] Synopsis 151ms
    [+] Description 209ms
    [+] Examples 123ms
Describing Help
   Context Function - test-IsLink
    [+] Synopsis 773ms
    [+] Description 341ms
    [+] Examples 140ms
Describing Help
   Context Function - test-IsUncPath
    [+] Synopsis 238ms
    [+] Description 129ms
    [+] Examples 199ms
Describing Help
   Context Function - test-LineEndings
    [+] Synopsis 139ms
    [+] Description 316ms
    [+] Examples 126ms
Describing Help
   Context Function - test-MediaFile
    [+] Synopsis 209ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 214ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 129ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - test-MissingMediaSummary
    [+] Synopsis 216ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 125ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 322ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - Test-PendingReboot
    [+] Synopsis 140ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 241ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 149ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 255
Describing Help
   Context Function - test-PSTitleBar
    [+] Synopsis 217ms
    [+] Description 170ms
    [+] Examples 322ms
Describing Help
   Context Function - Test-RegistryKey
    [+] Synopsis 179ms
    [+] Description 211ms
    [+] Examples 238ms
Describing Help
   Context Function - Test-RegistryValue
    [+] Synopsis 170ms
    [+] Description 311ms
    [+] Examples 142ms
Describing Help
   Context Function - Test-RegistryValueNotNull
    [+] Synopsis 489ms
    [+] Description 122ms
    [+] Examples 215ms
Describing Help
   Context Function - Touch-File
    [+] Synopsis 156ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 343ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 148ms
Describing Help
   Context Function - trim-FileList
    [+] Synopsis 237ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...=; ModuleName=}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...=; ModuleName=}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 525ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 220ms
Describing Help
   Context Function - unless
    [+] Synopsis 131ms
    [+] Description 188ms
    [+] Examples 103ms
Describing Help
   Context Function - write-hostCallOutTDO
    [+] Synopsis 383ms
    [+] Description 174ms
    [+] Examples 140ms
Describing Help
   Context Function - write-hostColorMatch
    [+] Synopsis 220ms
    [+] Description 126ms
    [+] Examples 212ms
Describing Help
   Context Function - write-HostIndent
    [+] Synopsis 135ms
    [+] Description 190ms
    [+] Examples 343ms
Describing Help
   Context Function - Write-ProgressHelper
    [+] Synopsis 174ms
    [+] Description 230ms
    [+] Examples 133ms
Describing Help
   Context Function - ConvertFrom-CmdList
    [+] Synopsis 205ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-io}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 921ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 251
    [+] Examples 133ms
Describing General - Testing all scripts and modules against the Script Analyzer Rules
   Context Checking files to test exist and Invoke-ScriptAnalyzer cmdLet is available
    [+] Checking files exist to test. 30ms
    [+] Checking Invoke-ScriptAnalyzer exists. 13ms
Describing Testing against PSScriptAnalyzer rules
   Context PSSA Standard Rules
Invoke-ScriptAnalyzer : Cannot determine line endings as the text probably contain mixed line endings.
Parameter name: text
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:305 char:27
+ ... zerIssues = Invoke-ScriptAnalyzer -Path $ProjectRoot -Recurse -Settin ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (C:\sc\verb-io\Public\copy-ProfileTDO.ps1:String) 
[Invoke-ScriptAnalyzer], ArgumentException
    + FullyQualifiedErrorId : 
RULE_ERROR,Microsoft.Windows.PowerShell.ScriptAnalyzer.Commands.InvokeScriptAnalyzerCommand
Invoke-ScriptAnalyzer : Cannot determine line endings as the text probably contain mixed
line endings.
Parameter name: text
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:305 char:27
+ ... zerIssues = Invoke-ScriptAnalyzer -Path $ProjectRoot -Recurse -Settin ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (C:\sc\verb-io\Public\copy-ProfileTDO.ps1:St
   ring) [Invoke-ScriptAnalyzer], ArgumentException
    + FullyQualifiedErrorId : RULE_ERROR,Microsoft.Windows.PowerShell.ScriptAnalyzer.Command
   s.InvokeScriptAnalyzerCommand

Invoke-ScriptAnalyzer : Cannot determine line endings as the text probably contain mixed line endings.
Parameter name: text
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:305 char:27
+ ... zerIssues = Invoke-ScriptAnalyzer -Path $ProjectRoot -Recurse -Settin ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (C:\sc\verb-io\P...ileFilesTDO.ps1:String) [Invoke-ScriptAnalyzer], 
ArgumentException
    + FullyQualifiedErrorId : 
RULE_ERROR,Microsoft.Windows.PowerShell.ScriptAnalyzer.Commands.InvokeScriptAnalyzerCommand
Invoke-ScriptAnalyzer : Cannot determine line endings as the text probably contain mixed
line endings.
Parameter name: text
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:305 char:27
+ ... zerIssues = Invoke-ScriptAnalyzer -Path $ProjectRoot -Recurse -Settin ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (C:\sc\verb-io\P...ileFilesTDO.ps1:String) [
   Invoke-ScriptAnalyzer], ArgumentException
    + FullyQualifiedErrorId : RULE_ERROR,Microsoft.Windows.PowerShell.ScriptAnalyzer.Command
   s.InvokeScriptAnalyzerCommand

Invoke-ScriptAnalyzer : Cannot determine line endings as the text probably contain mixed line endings.
Parameter name: text
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:305 char:27
+ ... zerIssues = Invoke-ScriptAnalyzer -Path $ProjectRoot -Recurse -Settin ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (C:\sc\verb-io\P...ignatureTDO.ps1:String) [Invoke-ScriptAnalyzer], 
ArgumentException
    + FullyQualifiedErrorId : 
RULE_ERROR,Microsoft.Windows.PowerShell.ScriptAnalyzer.Commands.InvokeScriptAnalyzerCommand
Invoke-ScriptAnalyzer : Cannot determine line endings as the text probably contain mixed
line endings.
Parameter name: text
At C:\sc\verb-io\Tests\verb-IO.tests.ps1:305 char:27
+ ... zerIssues = Invoke-ScriptAnalyzer -Path $ProjectRoot -Recurse -Settin ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (C:\sc\verb-io\P...ignatureTDO.ps1:String) [
   Invoke-ScriptAnalyzer], ArgumentException
    + FullyQualifiedErrorId : RULE_ERROR,Microsoft.Windows.PowerShell.ScriptAnalyzer.Command
   s.InvokeScriptAnalyzerCommand

    [+] Should pass PSAlignAssignmentStatement 25.34s
    [!] Should pass PSAvoidUsingCmdletAliases 5ms
    [+] Should pass PSAvoidAssignmentToAutomaticVariable 17ms
PS>TerminatingError(): "Expected: {0}
But was:  {12}"
>> TerminatingError(): "Expected: {0}
But was:  {12}"
    [-] Should pass PSAvoidDefaultValueSwitchParameter 23ms
      Expected: {0}
      But was:  {12}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
PS>TerminatingError(): "Expected: {0}
But was:  {6}"
>> TerminatingError(): "Expected: {0}
But was:  {6}"
    [-] Should pass PSAvoidDefaultValueForMandatoryParameter 50ms
      Expected: {0}
      But was:  {6}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
PS>TerminatingError(): "Expected: {0}
But was:  {18}"
>> TerminatingError(): "Expected: {0}
But was:  {18}"
    [-] Should pass PSAvoidUsingEmptyCatchBlock 48ms
      Expected: {0}
      But was:  {18}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSAvoidExclaimOperator 32ms
    [+] Should pass PSAvoidGlobalAliases 20ms
    [+] Should pass PSAvoidGlobalFunctions 16ms
    [!] Should pass PSAvoidGlobalVars 2ms
    [+] Should pass PSAvoidInvokingEmptyMembers 15ms
    [+] Should pass PSAvoidLongLines 17ms
    [+] Should pass PSAvoidMultipleTypeAttributes 16ms
    [+] Should pass PSAvoidNullOrEmptyHelpMessageAttribute 18ms
    [+] Should pass PSAvoidOverwritingBuiltInCmdlets 11ms
PS>TerminatingError(): "Expected: {0}
But was:  {4}"
>> TerminatingError(): "Expected: {0}
But was:  {4}"
    [-] Should pass PSAvoidUsingPositionalParameters 14ms
      Expected: {0}
      But was:  {4}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSReservedCmdletChar 21ms
    [+] Should pass PSReservedParams 12ms
    [+] Should pass PSAvoidSemicolonsAsLineTerminators 13ms
    [+] Should pass PSAvoidShouldContinueWithoutForce 47ms
    [+] Should pass PSAvoidTrailingWhitespace 13ms
    [+] Should pass PSAvoidUsingUsernameAndPasswordParams 21ms
    [+] Should pass PSAvoidUsingAllowUnencryptedAuthentication 13ms
    [+] Should pass PSAvoidUsingBrokenHashAlgorithms 19ms
    [+] Should pass PSAvoidUsingComputerNameHardcoded 53ms
PS>TerminatingError(): "Expected: {0}
But was:  {4}"
>> TerminatingError(): "Expected: {0}
But was:  {4}"
    [-] Should pass PSAvoidUsingConvertToSecureStringWithPlainText 14ms
      Expected: {0}
      But was:  {4}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSAvoidUsingDeprecatedManifestFields 19ms
    [+] Should pass PSAvoidUsingDoubleQuotesForConstantString 14ms
PS>TerminatingError(): "Expected: {0}
But was:  {1}"
>> TerminatingError(): "Expected: {0}
But was:  {1}"
    [-] Should pass PSAvoidUsingInvokeExpression 15ms
      Expected: {0}
      But was:  {1}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSAvoidUsingPlainTextForPassword 62ms
PS>TerminatingError(): "Expected: {0}
But was:  {8}"
>> TerminatingError(): "Expected: {0}
But was:  {8}"
    [-] Should pass PSAvoidUsingWMICmdlet 14ms
      Expected: {0}
      But was:  {8}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
    [!] Should pass PSAvoidUsingWriteHost 10ms
    [+] Should pass PSUseCompatibleCommands 18ms
    [+] Should pass PSUseCompatibleSyntax 16ms
    [+] Should pass PSUseCompatibleTypes 18ms
PS>TerminatingError(): "Expected: {0}
But was:  {4}"
>> TerminatingError(): "Expected: {0}
But was:  {4}"
    [-] Should pass PSMisleadingBacktick 19ms
      Expected: {0}
      But was:  {4}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSMissingModuleManifestField 16ms
PS>TerminatingError(): "Expected: {0}
But was:  {198}"
>> TerminatingError(): "Expected: {0}
But was:  {198}"
    [-] Should pass PSPlaceCloseBrace 15ms
      Expected: {0}
      But was:  {198}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
PS>TerminatingError(): "Expected: {0}
But was:  {1}"
>> TerminatingError(): "Expected: {0}
But was:  {1}"
    [-] Should pass PSPlaceOpenBrace 24ms
      Expected: {0}
      But was:  {1}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
PS>TerminatingError(): "Expected: {0}
But was:  {12}"
>> TerminatingError(): "Expected: {0}
But was:  {12}"
    [-] Should pass PSPossibleIncorrectComparisonWithNull 22ms
      Expected: {0}
      But was:  {12}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSPossibleIncorrectUsageOfAssignmentOperator 20ms
    [+] Should pass PSPossibleIncorrectUsageOfRedirectionOperator 15ms
    [!] Should pass PSProvideCommentHelp 2ms
    [+] Should pass PSReviewUnusedParameter 16ms
    [!] Should pass PSUseApprovedVerbs 2ms
PS>TerminatingError(): "Expected: {0}
But was:  {4}"
>> TerminatingError(): "Expected: {0}
But was:  {4}"
    [-] Should pass PSUseBOMForUnicodeEncodedFile 20ms
      Expected: {0}
      But was:  {4}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
    [!] Should pass PSUseCmdletCorrectly 7ms
    [+] Should pass PSUseCompatibleCmdlets 17ms
    [+] Should pass PSUseConsistentIndentation 14ms
    [!] Should pass PSUseConsistentWhitespace 2ms
    [+] Should pass PSUseCorrectCasing 15ms
    [!] Should pass PSUseDeclaredVarsMoreThanAssignments 2ms
    [+] Should pass PSUseLiteralInitializerForHashtable 23ms
PS>TerminatingError(): "Expected: {0}
But was:  {24}"
>> TerminatingError(): "Expected: {0}
But was:  {24}"
    [-] Should pass PSUseOutputTypeCorrectly 17ms
      Expected: {0}
      But was:  {24}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSUseProcessBlockForPipelineCommand 24ms
    [+] Should pass PSUsePSCredentialType 16ms
    [+] Should pass PSShouldProcess 16ms
PS>TerminatingError(): "Expected: {0}
But was:  {46}"
>> TerminatingError(): "Expected: {0}
But was:  {46}"
    [-] Should pass PSUseShouldProcessForStateChangingFunctions 16ms
      Expected: {0}
      But was:  {46}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
PS>TerminatingError(): "Expected: {0}
But was:  {40}"
>> TerminatingError(): "Expected: {0}
But was:  {40}"
    [-] Should pass PSUseSingularNouns 26ms
      Expected: {0}
      But was:  {40}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
PS>TerminatingError(): "Expected: {0}
But was:  {51}"
>> TerminatingError(): "Expected: {0}
But was:  {51}"
    [-] Should pass PSUseSupportsShouldProcess 21ms
      Expected: {0}
      But was:  {51}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-io\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSUseToExportFieldsInManifest 20ms
    [+] Should pass PSUseUsingScopeModifierInNewRunspaces 16ms
    [+] Should pass PSUseUTF8EncodingForHelpFile 17ms
    [+] Should pass PSDSCDscExamplesPresent 17ms
    [+] Should pass PSDSCDscTestsPresent 15ms
    [+] Should pass PSDSCReturnCorrectTypesForDSCFunctions 21ms
    [+] Should pass PSDSCUseIdenticalMandatoryParametersForDSC 19ms
    [+] Should pass PSDSCUseIdenticalParametersForDSC 19ms
    [+] Should pass PSDSCStandardDSCFunctionsInResource 13ms
    [+] Should pass PSDSCUseVerboseMessageInDSCResource 21ms
13:05:38:
#*------^ RUNNING c:\sc\verb-io\Tests\verb-io.tests.ps1: ^------
13:05:38: INFO:  
---------------------------------------------------------------------------------
Processing completed: verb-io :: c:\sc\verb-io
- Script is currently installed (from PsRep: with scope:CurrentUser, under TORO\kadritss profile

- To update other scopes/accounts on same machine, or install on other machines:
    1. Uninstall current module copies:

        Uninstall-Module -Name verb-io) -AllVersion -whatif ;

    2. Install the current version (or higher) from the Repo:lyncRepo:

        install-Module -name verb-io -Repository lyncRepo -MinimumVersion 15.0.0 -scope currentuser -whatif ;

    3. Reimport the module with -force, to ensure the current installed verison is loaded:

        import-Module -name verb-io -force -verbose ;

#-=-=-Stacked list for the above: CURRENTUSER=-=-=-=-=-=
$whatif=$false ;  $tScop = 'CurrentUser' ; $tMod = 'verb-io' ; $tVer = '15.0.0' ;
TRY {
    switch($tScop){
        'CurrentUser'{$ModPath = "$(split-path $profile)\Modules\$($tmod)" }
        'AllUsers' {$ModPath = "$($env:ProgramFiles)\WindowsPowerShell\Modules)\$($tmod)"} ; 
    } ;
    if($Repository = (Get-PSRepository -Name $localPSRepo -ea 'STOP').name){
        rmo -Name $tmod -ea 0 ;
        Uninstall-Module -Name $tmod -AllVersion -ea 0 -whatif:$($whatif);
        gi -path $ModPath -ea 0 |ri -Recurse -force -verbose  -whatif:$($whatif) ;
        install-Module -name $tmod -Repository $Repository -MinimumVersion $tVer -scope $tScop -AllowClobber -ea 'STOP' -whatif:$($whatif) ;
        ipmo -name $tmod -force -verbose -ea 'STOP'  ;
        gmo -name $tmod | ? version -ne $tVer | rmo -Force -Verbose ; 
        gmo -name $tmod -list ;
    } else {
        throw "Unable to resolve `lyncRepo to a configured local PSRepository" ;
    } ;
} CATCH {
    $ErrTrapd=$Error[0] ;
    $smsg = "
$(($ErrTrapd | fl * -Force|out-string).trim())" ;
    write-warning "$((get-date).ToString('HH:mm:ss')):$($smsg)" ;
} ;
#-=-=-=-=-=-=-=-=
#-=-=-Stacked list for the above: ALLUSERS=-=-=-=-=-=
$whatif=$false ; $tScop = 'AllUsers' ; $tMod = 'verb-io' ; $tVer = '15.0.0' ;  
TRY {
    switch($tScop){
        'CurrentUser'{$ModPath = "$(split-path $profile)\Modules\$($tmod)" }
        'AllUsers' {$ModPath = "$($env:ProgramFiles)\WindowsPowerShell\Modules)\$($tmod)"} ; 
    } ;
    if($Repository = (Get-PSRepository -Name $localPSRepo -ea 'STOP').name){
        rmo -Name $tmod -ea 0 ;
        Uninstall-Module -Name $tmod -AllVersion -ea 0 -whatif:$($whatif);
        gi -path $ModPath -ea 0 |ri -Recurse -force -verbose  -whatif:$($whatif) ;
        install-Module -name $tmod -Repository $Repository -MinimumVersion $tVer -scope $tScop -AllowClobber -ea 'STOP' -whatif:$($whatif) ;
        ipmo -name $tmod -force -verbose -ea 'STOP'  ;
        gmo -name $tmod | ? version -ne $tVer | rmo -Force -Verbose ; 
        gmo -name $tmod -list ;
    } else {
        throw "Unable to resolve `lyncRepo to a configured local PSRepository" ;
    } ;
} CATCH {
    $ErrTrapd=$Error[0] ;
    $smsg = "
$(($ErrTrapd | fl * -Force|out-string).trim())" ;
    write-warning "$((get-date).ToString('HH:mm:ss')):$($smsg)" ;
} ;
#-=-=-=-=-=-=-=-=

- You may also want to run the configured Pester Tests of the new script:

        . c:\sc\verb-io\Tests\verb-io.tests.ps1

Full Processing Details can be found in:

C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-io-LOG-BATCH-EXEC-20240917-1302PM-log.txt

---------------------------------------------------------------------------------
13:05:38: INFO:  
(Most recent processing log can be found at:c:\sc\verb-io\VERB-dev-verb-io-LOG-BATCH-EXEC-20240917-1302PM-log.txt)
(perm copy stored at:C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-io-LOG-BATCH-EXEC-20240917-1302PM-log.txt
13:05:38: INFO:  remove-UnneededFileVariants w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-io                                                 
Include                        VERB-dev-verb-io-LOG-BATCH-*-log.txt                          
Pattern                                                                                      
FilterOn                       CreationTime                                                  
Keep                           2                                                             
KeepToday                      True                                                          
verbose                        True                                                          
whatif                         False
13:05:38:gci w
Name                           Value                                                         
----                           -----                                                         
path                           c:\sc\verb-io\*                                               
include                        VERB-dev-verb-io-LOG-BATCH-*-log.txt                          
ErrorAction                    Stop
VERBOSE: $cuttime:09/17/2024 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/17/2024 00:00:00 AM, on CreationTime property
(2 in set *before* filtering)
(1 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(1 in set *before* filtering)
(0 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
13:05:38:Reducing matched population from 2 to 0 files via:
filtered files on CreationTime prior to 09/17/2024 00:00:00 AM
13:05:38:There are *no* files to be removed, as per the specified inputs. ($population:0)
13:05:38: INFO:  #*======^ VERB-dev.psm1:verb-io ^======
13:05:38:
#*------^ (1/1):PROC:verb-io: ^------
13:05:38:
#*======^ RUNNING processbulk-NewModule.ps1 ^======

▒
▒
▒
░
░

LYN-9C5CTV3
 ▓▒▓
TORO\kadritss
 ▓▒▓
Tue 09/17/2024 13:05
 [00:04:37]

▒
▒
▒
▒
▒

[PS]
:
C:\u\w\p\scripts

$



PS>.\processbulk-NewModule.ps1 -Modules verb-text -verbose
VERBOSE: consistent results
Calculated $runSource:ExternalScript
VERBOSE: $rPSBoundParameters:
Key     Value      
---     -----      
Modules {verb-text}
Verbose True
VERBOSE: Collect all non-default Params (works back to psv2 w CmdletBinding)
$runSource       : ExternalScript
$CmdletName      : processbulk-NewModule.ps1
$scriptName      : C:\usr\work\ps\scripts\processbulk-NewModule.ps1
$ScriptBaseName  : processbulk-NewModule.ps1
$ScriptNameNoExt : processbulk-NewModule
$ScriptDir       : C:\usr\work\ps\scripts
$PSScriptRoot    : C:\usr\work\ps\scripts
$PSCommandPath   : C:\usr\work\ps\scripts\processbulk-NewModule.ps1
$rPSScriptRoot   : C:\usr\work\ps\scripts
$rPSCommandPath  : C:\usr\work\ps\scripts\processbulk-NewModule.ps1
13:09:21:
#*======v RUNNING processbulk-NewModule.ps1 v======
13:09:21:(Checking IsLocalAdmin & IsElevated session status...)
13:09:23:
#*------v (1/1):PROC:verb-text: v------
VERBOSE: 13:09:23:(detected last build processbulk... log)
VERBOSE: 13:09:23:last pass confirmed VALID build & exit:
(Processing log can be found at:c:\sc\verb-text\C:\usr\work\ps\scripts\logs\processbulk-NewModule-verb-text-LOG-BATCH-EXEC-20231206-1639PM-log.txt)
moving ahead with stock build...
==(1/37):ipmo'ing C:\sc\verb-text\public\compare-CodeRevision.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\compare-CodeRevision.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\compare-CodeRevision.ps1'.
==(2/37):ipmo'ing C:\sc\verb-text\public\convert-CaesarCipher.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convert-CaesarCipher.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convert-CaesarCipher.ps1'.
==(3/37):ipmo'ing C:\sc\verb-text\public\Convert-CodePointToPSSyntaxTDO.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\Convert-CodePointToPSSyntaxTDO.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\Convert-CodePointToPSSyntaxTDO.ps1'.
==(4/37):ipmo'ing C:\sc\verb-text\public\convertFrom-Base64String.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convertFrom-Base64String.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convertFrom-Base64String.ps1'.
==(5/37):ipmo'ing C:\sc\verb-text\public\convert-HtmlCodeToTextTDO.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convert-HtmlCodeToTextTDO.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convert-HtmlCodeToTextTDO.ps1'.
==(6/37):ipmo'ing C:\sc\verb-text\public\Convert-invertCase.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\Convert-invertCase.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\Convert-invertCase.ps1'.
==(7/37):ipmo'ing C:\sc\verb-text\public\convert-Rot13.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convert-Rot13.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convert-Rot13.ps1'.
==(8/37):ipmo'ing C:\sc\verb-text\public\convert-Rot47.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convert-Rot47.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convert-Rot47.ps1'.
==(9/37):ipmo'ing C:\sc\verb-text\public\convertto-AcronymFromCaps.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convertto-AcronymFromCaps.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convertto-AcronymFromCaps.ps1'.
==(10/37):ipmo'ing C:\sc\verb-text\public\convertTo-Base64String.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convertTo-Base64String.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convertTo-Base64String.ps1'.
==(11/37):ipmo'ing C:\sc\verb-text\public\convertto-Base64StringCommaQuoted.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convertto-Base64StringCommaQuoted.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convertto-Base64StringCommaQuoted.ps1'.
==(12/37):ipmo'ing C:\sc\verb-text\public\ConvertTo-CamelCase.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\ConvertTo-CamelCase.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\ConvertTo-CamelCase.ps1'.
==(13/37):ipmo'ing C:\sc\verb-text\public\ConvertTo-L33t.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\ConvertTo-L33t.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\ConvertTo-L33t.ps1'.
==(14/37):ipmo'ing C:\sc\verb-text\public\ConvertTo-lowerCamelCase.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\ConvertTo-lowerCamelCase.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\ConvertTo-lowerCamelCase.ps1'.
==(15/37):ipmo'ing C:\sc\verb-text\public\convertTo-PSHelpExample.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convertTo-PSHelpExample.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convertTo-PSHelpExample.ps1'.
==(16/37):ipmo'ing C:\sc\verb-text\public\convertTo-QuotedList.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convertTo-QuotedList.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convertTo-QuotedList.ps1'.
==(17/37):ipmo'ing C:\sc\verb-text\public\ConvertTo-SCase.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\ConvertTo-SCase.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\ConvertTo-SCase.ps1'.
==(18/37):ipmo'ing C:\sc\verb-text\public\ConvertTo-SNAKE_CASE.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\ConvertTo-SNAKE_CASE.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\ConvertTo-SNAKE_CASE.ps1'.
==(19/37):ipmo'ing C:\sc\verb-text\public\convertto-StringCommaQuote.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convertto-StringCommaQuote.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convertto-StringCommaQuote.ps1'.
==(20/37):ipmo'ing C:\sc\verb-text\public\ConvertTo-StringQuoted.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\ConvertTo-StringQuoted.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\ConvertTo-StringQuoted.ps1'.
==(21/37):ipmo'ing C:\sc\verb-text\public\convertTo-StringReverse.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convertTo-StringReverse.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convertTo-StringReverse.ps1'.
==(22/37):ipmo'ing C:\sc\verb-text\public\ConvertTo-StudlyCaps.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\ConvertTo-StudlyCaps.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\ConvertTo-StudlyCaps.ps1'.
==(23/37):ipmo'ing C:\sc\verb-text\public\convertTo-TitleCase.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convertTo-TitleCase.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convertTo-TitleCase.ps1'.
==(24/37):ipmo'ing C:\sc\verb-text\public\convertTo-UnWrappedText.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convertTo-UnWrappedText.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convertTo-UnWrappedText.ps1'.
==(25/37):ipmo'ing C:\sc\verb-text\public\convertTo-WordsReverse.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convertTo-WordsReverse.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convertTo-WordsReverse.ps1'.
==(26/37):ipmo'ing C:\sc\verb-text\public\convertTo-WrappedText.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convertTo-WrappedText.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convertTo-WrappedText.ps1'.
==(27/37):ipmo'ing C:\sc\verb-text\public\convert-UnicodeUPlusToCharCode.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\convert-UnicodeUPlusToCharCode.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\convert-UnicodeUPlusToCharCode.ps1'.
==(28/37):ipmo'ing C:\sc\verb-text\public\Get-CharInfo.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\Get-CharInfo.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\Get-CharInfo.ps1'.
==(29/37):ipmo'ing C:\sc\verb-text\public\get-StringHash.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\get-StringHash.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\get-StringHash.ps1'.
==(30/37):ipmo'ing C:\sc\verb-text\public\new-LoremString.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\new-LoremString.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\new-LoremString.ps1'.
==(31/37):ipmo'ing C:\sc\verb-text\public\Remove-StringDiacritic.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\Remove-StringDiacritic.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\Remove-StringDiacritic.ps1'.
==(32/37):ipmo'ing C:\sc\verb-text\public\Remove-StringLatinCharacters.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\Remove-StringLatinCharacters.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\Remove-StringLatinCharacters.ps1'.
==(33/37):ipmo'ing C:\sc\verb-text\public\test-IsGuid.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\test-IsGuid.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\test-IsGuid.ps1'.
==(34/37):ipmo'ing C:\sc\verb-text\public\test-IsNumeric.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\test-IsNumeric.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\test-IsNumeric.ps1'.
==(35/37):ipmo'ing C:\sc\verb-text\public\test-IsRegexPattern.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\test-IsRegexPattern.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\test-IsRegexPattern.ps1'.
==(36/37):ipmo'ing C:\sc\verb-text\public\test-IsRegexValid.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\test-IsRegexValid.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\test-IsRegexValid.ps1'.
==(37/37):ipmo'ing C:\sc\verb-text\public\test-IsUri.ps1
VERBOSE: Loading module from path 'C:\sc\verb-text\public\test-IsUri.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-text\public\test-IsUri.ps1'.
Check for module recursion ('Nesting-limit-exceeded') (tough enough to catch in cross loads, wo having them right in the components of the module!).
VERBOSE: 13:09:23:no  nested requires statements found in verb-text
13:09:23:(executing:Set-BuildEnvironment -Path c:\sc\verb-text -Force 
(use -NoBuildInfo if hangs))
==13:09:24:Processing verb-text:
Name                           Value                                                         
----                           -----                                                         
BHProjectName                  verb-text                                                     
BHModulePath                   C:\sc\verb-text\verb-text                                     
BHPSModulePath                 C:\sc\verb-text\verb-text                                     
BHProjectPath                  C:\sc\verb-text                                               
BHBuildOutput                  C:\sc\verb-text\BuildOutput                                   
BHPSModuleManifest             C:\sc\verb-text\verb-text\verb-text.psd1                      
BHBuildSystem                  Unknown                                                       
BHCommitMessage                Update Convert-CodePointToPSSyntaxTDO.ps1...                  
BHBranchName                   master                                                        
BHCommitHash                   4cd69ea27139b6b865ab9d94cf2784f906418bf3                      
BHBuildNumber                  0
Running:test-modulemanifest -Path C:\sc\verb-text\verb-text\verb-text.psd1 (from $env:BHPSModuleManifest)
VERBOSE: Loading module from path 'C:\sc\verb-text\verb-text\verb-Text.psm1'.
VERBOSE: 13:09:24:(no $ttmm_Err: test-ModuleManifest had no errors)
13:09:24:Step-ModuleVersionCalculated w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-text                                               
Verbose                        True
13:09:24:#*======v RUNNING :Step-ModuleVersionCalculated:c:\sc\verb-text v======
13:09:24:profiling existing content...
VERBOSE: 13:09:24:#*======v RUNNING :Get-PSModuleFile:.psd1:C:\sc\verb-text v======
VERBOSE: 13:09:24:#*======^ RUNNING :Get-PSModuleFile:.psd1:C:\sc\verb-text ^======
VERBOSE: 13:09:24:#*======v RUNNING :Get-PSModuleFile:.psm1:C:\sc\verb-text v======
VERBOSE: 13:09:24:#*======^ RUNNING :Get-PSModuleFile:.psm1:C:\sc\verb-text ^======
VERBOSE: 13:09:24:Import-PowerShellDataFile w
Name                           Value                                                         
----                           -----                                                         
path                           C:\sc\verb-text\verb-text\verb-text.psd1                      
ErrorAction                    STOP                                                          
Verbose                        True
VERBOSE: 13:09:24:test-ModuleManifest w
Name                           Value                                                         
----                           -----                                                         
path                           C:\sc\verb-text\verb-text\verb-text.psd1                      
ErrorAction                    STOP                                                          
Verbose                        True
VERBOSE: Loading module from path 'C:\sc\verb-text\verb-text\verb-Text.psm1'.
VERBOSE: 13:09:24:(no $ttmm_Err: test-ModuleManifest had no errors)
13:09:24:(Test-ModuleManifest:PASSED)
13:09:24:Module:psd1M:calculating *FINGERPRINT* change Version Step
VERBOSE: 13:09:24:import-module w
Name                           Value                                                         
----                           -----                                                         
Verbose                        True                                                          
Name                           C:\sc\verb-text\verb-text\verb-text.psm1                      
force                          True                                                          
ErrorAction                    STOP
VERBOSE: Loading module from path 'C:\sc\verb-text\verb-text\verb-text.psm1'.
VERBOSE: Importing function 'compare-CodeRevision'.
VERBOSE: Importing function 'convert-CaesarCipher'.
VERBOSE: Importing function 'Convert-CodePointToPSSyntaxTDO'.
VERBOSE: Importing function 'convert-HtmlCodeToTextTDO'.
VERBOSE: Importing function 'Convert-invertCase'.
VERBOSE: Importing function 'convert-Rot13'.
VERBOSE: Importing function 'convert-Rot47'.
VERBOSE: Importing function 'convert-UnicodeUPlusToCharCode'.
VERBOSE: Importing function 'convertFrom-Base64String'.
VERBOSE: Importing function 'convertto-AcronymFromCaps'.
VERBOSE: Importing function 'convertTo-Base64String'.
VERBOSE: Importing function 'convertto-Base64StringCommaQuoted'.
VERBOSE: Importing function 'ConvertTo-CamelCase'.
VERBOSE: Importing function 'ConvertTo-L33t'.
VERBOSE: Importing function 'ConvertTo-lowerCamelCase'.
VERBOSE: Importing function 'convertTo-PSHelpExample'.
VERBOSE: Importing function 'convertTo-QuotedList'.
VERBOSE: Importing function 'ConvertTo-SCase'.
VERBOSE: Importing function 'ConvertTo-SNAKE_CASE'.
VERBOSE: Importing function 'convertto-StringCommaQuote'.
VERBOSE: Importing function 'ConvertTo-StringQuoted'.
VERBOSE: Importing function 'convertTo-StringReverse'.
VERBOSE: Importing function 'convertTo-StUdlycaPs'.
VERBOSE: Importing function 'convertTo-TitleCase'.
VERBOSE: Importing function 'convertTo-UnWrappedText'.
VERBOSE: Importing function 'convertTo-WordsReverse'.
VERBOSE: Importing function 'convertTo-WrappedText'.
VERBOSE: Importing function 'Get-CharInfo'.
VERBOSE: Importing function 'get-StringHash'.
VERBOSE: Importing function 'new-LoremString'.
VERBOSE: Importing function 'Remove-StringDiacritic'.
VERBOSE: Importing function 'Remove-StringLatinCharacters'.
VERBOSE: Importing function 'Test-IsGuid'.
VERBOSE: Importing function 'test-IsNumeric'.
VERBOSE: Importing function 'test-IsRegexPattern'.
VERBOSE: Importing function 'test-IsRegexValid'.
VERBOSE: Importing function 'test-IsUri'.
VERBOSE: Importing alias 'cfB64'.
VERBOSE: Importing alias 'chr'.
VERBOSE: Importing alias 'convertFrom-HtmlTDO'.
VERBOSE: Importing alias 'convertTo-CrAzYCaPS'.
VERBOSE: Importing alias 'convertTo-PascalCase'.
VERBOSE: Importing alias 'convertTo-ProperCase'.
VERBOSE: Importing alias 'convertTo-SentanceCase'.
VERBOSE: Importing alias 'convertto-StringHash'.
VERBOSE: Importing alias 'convertTo-StUdlycaSe'.
VERBOSE: Importing alias 'convertTo-UpperCamelCase'.
VERBOSE: Importing alias 'create-AcronymFromCaps'.
VERBOSE: Importing alias 'CtB64'.
VERBOSE: Importing alias 'IsNumeric'.
VERBOSE: Importing alias 'quote-list'.
VERBOSE: Importing alias 'quote-string'.
VERBOSE: Importing alias 'test-URI'.
VERBOSE: Importing alias 'unwrap-text'.
VERBOSE: Importing alias 'Unwrap-TextN'.
VERBOSE: Importing alias 'wrap-text'.
13:09:24:Ipmo: PASSED
13:09:24:get-command verb-text -gt AST 80% match:
VERBOSE: 13:09:24:get-module |where-object{$_.path -eq 'C:\sc\verb-text\verb-text\verb-text.psm1'} |remove-module w
Name                           Value                                                         
----                           -----                                                         
Verbose                        True                                                          
force                          True                                                          
ErrorAction                    STOP
VERBOSE: Performing the operation "Remove-Module" on target "verb-text (Path: 'C:\sc\verb-text\verb-text\verb-text.psm1')".
VERBOSE: Removing the imported "compare-CodeRevision" function.
VERBOSE: Removing the imported "convert-CaesarCipher" function.
VERBOSE: Removing the imported "Convert-CodePointToPSSyntaxTDO" function.
VERBOSE: Removing the imported "convert-HtmlCodeToTextTDO" function.
VERBOSE: Removing the imported "Convert-invertCase" function.
VERBOSE: Removing the imported "convert-Rot13" function.
VERBOSE: Removing the imported "convert-Rot47" function.
VERBOSE: Removing the imported "convert-UnicodeUPlusToCharCode" function.
VERBOSE: Removing the imported "convertFrom-Base64String" function.
VERBOSE: Removing the imported "convertto-AcronymFromCaps" function.
VERBOSE: Removing the imported "convertTo-Base64String" function.
VERBOSE: Removing the imported "convertto-Base64StringCommaQuoted" function.
VERBOSE: Removing the imported "ConvertTo-CamelCase" function.
VERBOSE: Removing the imported "ConvertTo-L33t" function.
VERBOSE: Removing the imported "ConvertTo-lowerCamelCase" function.
VERBOSE: Removing the imported "convertTo-PSHelpExample" function.
VERBOSE: Removing the imported "convertTo-QuotedList" function.
VERBOSE: Removing the imported "ConvertTo-SCase" function.
VERBOSE: Removing the imported "ConvertTo-SNAKE_CASE" function.
VERBOSE: Removing the imported "convertto-StringCommaQuote" function.
VERBOSE: Removing the imported "ConvertTo-StringQuoted" function.
VERBOSE: Removing the imported "convertTo-StringReverse" function.
VERBOSE: Removing the imported "convertTo-StUdlycaPs" function.
VERBOSE: Removing the imported "convertTo-TitleCase" function.
VERBOSE: Removing the imported "convertTo-UnWrappedText" function.
VERBOSE: Removing the imported "convertTo-WordsReverse" function.
VERBOSE: Removing the imported "convertTo-WrappedText" function.
VERBOSE: Removing the imported "Get-CharInfo" function.
VERBOSE: Removing the imported "get-StringHash" function.
VERBOSE: Removing the imported "new-LoremString" function.
VERBOSE: Removing the imported "Remove-StringDiacritic" function.
VERBOSE: Removing the imported "Remove-StringLatinCharacters" function.
VERBOSE: Removing the imported "Test-IsGuid" function.
VERBOSE: Removing the imported "test-IsNumeric" function.
VERBOSE: Removing the imported "test-IsRegexPattern" function.
VERBOSE: Removing the imported "test-IsRegexValid" function.
VERBOSE: Removing the imported "test-IsUri" function.
VERBOSE: Removing the imported "cfB64" alias.
VERBOSE: Removing the imported "chr" alias.
VERBOSE: Removing the imported "convertFrom-HtmlTDO" alias.
VERBOSE: Removing the imported "convertTo-CrAzYCaPS" alias.
VERBOSE: Removing the imported "convertTo-PascalCase" alias.
VERBOSE: Removing the imported "convertTo-ProperCase" alias.
VERBOSE: Removing the imported "convertTo-SentanceCase" alias.
VERBOSE: Removing the imported "convertto-StringHash" alias.
VERBOSE: Removing the imported "convertTo-StUdlycaSe" alias.
VERBOSE: Removing the imported "convertTo-UpperCamelCase" alias.
VERBOSE: Removing the imported "create-AcronymFromCaps" alias.
VERBOSE: Removing the imported "CtB64" alias.
VERBOSE: Removing the imported "IsNumeric" alias.
VERBOSE: Removing the imported "quote-list" alias.
VERBOSE: Removing the imported "quote-string" alias.
VERBOSE: Removing the imported "test-URI" alias.
VERBOSE: Removing the imported "unwrap-text" alias.
VERBOSE: Removing the imported "Unwrap-TextN" alias.
VERBOSE: Removing the imported "wrap-text" alias.
VERBOSE: 13:09:24:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\BuildHelpers\2.0.16\BuildHelpers.psm1:still loaded)
VERBOSE: 13:09:24:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\GroupSet\GroupSet.Schema.psm1:still loaded)
VERBOSE: 13:09:24:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\Microsoft.PowerShell.Host\Microsoft.PowerShell.Host.psd1:still loaded)
VERBOSE: 13:09:24:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\Microsoft.PowerShell.Management\Microsoft.PowerShell.Management.psd1:still loaded)
VERBOSE: 13:09:24:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\Microsoft.PowerShell.Security\Microsoft.PowerShell.Security.psd1:still loaded)
VERBOSE: 13:09:24:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\Microsoft.PowerShell.Utility\Microsoft.PowerShell.Utility.psd1:still loaded)
VERBOSE: 13:09:24:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\Microsoft.WSMan.Management\Microsoft.WSMan.Management.psd1:still loaded)
VERBOSE: 13:09:24:(C:\Program Files\WindowsPowerShell\Modules\PackageManagement\1.4.8.1\PackageManagement.psm1:still loaded)
VERBOSE: 13:09:24:(C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Pester.psm1:still loaded)
VERBOSE: 13:09:24:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\pki\pki.psd1:still loaded)
VERBOSE: 13:09:24:(C:\Program Files\WindowsPowerShell\Modules\PowerShellGet\2.2.5\PSModule.psm1:still loaded)
VERBOSE: 13:09:24:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\ProcessSet\ProcessSet.Schema.psm1:still loaded)
VERBOSE: 13:09:24:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\Pscx\3.3.2\Pscx.psm1:still loaded)
VERBOSE: 13:09:24:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\PSDesiredStateConfiguration.psd1:still loaded)
VERBOSE: 13:09:24:(C:\Program Files\WindowsPowerShell\Modules\PSReadline\2.0.0\PSReadLine.psm1:still loaded)
VERBOSE: 13:09:24:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\PSScriptAnalyzer\1.22.0\PSScriptAnalyzer.psm1:still loaded)
VERBOSE: 13:09:24:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\ServiceSet\ServiceSet.Schema.psm1:still loaded)
VERBOSE: 13:09:24:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\SmbShare\SmbShare.psd1:still loaded)
VERBOSE: 13:09:24:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\5.2.0\verb-AAD.psm1:still loaded)
VERBOSE: 13:09:24:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-auth\2.3.1\verb-Auth.psm1:still loaded)
VERBOSE: 13:09:24:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-EXO\8.1.0\verb-EXO.psm1:still loaded)
VERBOSE: 13:09:24:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\15.0.0\verb-IO.psm1:still loaded)
VERBOSE: 13:09:24:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-logging\1.4.1\verb-logging.psm1:still loaded)
VERBOSE: 13:09:24:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Mods\1.5.0\verb-Mods.psm1:still loaded)
VERBOSE: 13:09:24:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Text\6.2.3\verb-Text.psm1:still loaded)
VERBOSE: 13:09:24:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\WindowsFeatureSet\WindowsFeatureSet.Schema.psm1:still loaded)
VERBOSE: 13:09:24:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\WindowsOptionalFeatureSet\WindowsOptionalFeatureSet.Schema.psm1:still loaded)
VERBOSE: 13:09:24:(=cmd:convertFrom-HtmlTDO...)
VERBOSE: 13:09:24:(---param:string...)
VERBOSE: 13:09:24:(---param:File...)
VERBOSE: 13:09:24:(---param:Verbose...)
VERBOSE: 13:09:24:(---param:Debug...)
VERBOSE: 13:09:24:(---param:ErrorAction...)
VERBOSE: 13:09:24:(---param:WarningAction...)
VERBOSE: 13:09:24:(---param:InformationAction...)
VERBOSE: 13:09:24:(---param:ErrorVariable...)
VERBOSE: 13:09:24:(---param:WarningVariable...)
VERBOSE: 13:09:24:(---param:InformationVariable...)
VERBOSE: 13:09:24:(---param:OutVariable...)
VERBOSE: 13:09:24:(---param:OutBuffer...)
VERBOSE: 13:09:24:(---param:PipelineVariable...)
VERBOSE: 13:09:24:(=cmd:convertTo-CrAzYCaPS...)
VERBOSE: 13:09:24:(---param:string...)
VERBOSE: 13:09:24:(---param:Verbose...)
VERBOSE: 13:09:24:(---param:Debug...)
VERBOSE: 13:09:24:(---param:ErrorAction...)
VERBOSE: 13:09:24:(---param:WarningAction...)
VERBOSE: 13:09:24:(---param:InformationAction...)
VERBOSE: 13:09:24:(---param:ErrorVariable...)
VERBOSE: 13:09:24:(---param:WarningVariable...)
VERBOSE: 13:09:24:(---param:InformationVariable...)
VERBOSE: 13:09:24:(---param:OutVariable...)
VERBOSE: 13:09:24:(---param:OutBuffer...)
VERBOSE: 13:09:24:(---param:PipelineVariable...)
VERBOSE: 13:09:24:(=cmd:convertTo-PascalCase...)
VERBOSE: 13:09:24:(---param:string...)
VERBOSE: 13:09:24:(---param:AlphaNumeric...)
VERBOSE: 13:09:24:(---param:useLower...)
VERBOSE: 13:09:24:(---param:Verbose...)
VERBOSE: 13:09:24:(---param:Debug...)
VERBOSE: 13:09:24:(---param:ErrorAction...)
VERBOSE: 13:09:24:(---param:WarningAction...)
VERBOSE: 13:09:24:(---param:InformationAction...)
VERBOSE: 13:09:24:(---param:ErrorVariable...)
VERBOSE: 13:09:24:(---param:WarningVariable...)
VERBOSE: 13:09:24:(---param:InformationVariable...)
VERBOSE: 13:09:24:(---param:OutVariable...)
VERBOSE: 13:09:24:(---param:OutBuffer...)
VERBOSE: 13:09:24:(---param:PipelineVariable...)
VERBOSE: 13:09:24:(=cmd:convertTo-ProperCase...)
VERBOSE: 13:09:24:(---param:string...)
VERBOSE: 13:09:24:(---param:Verbose...)
VERBOSE: 13:09:24:(---param:Debug...)
VERBOSE: 13:09:24:(---param:ErrorAction...)
VERBOSE: 13:09:24:(---param:WarningAction...)
VERBOSE: 13:09:24:(---param:InformationAction...)
VERBOSE: 13:09:24:(---param:ErrorVariable...)
VERBOSE: 13:09:24:(---param:WarningVariable...)
VERBOSE: 13:09:24:(---param:InformationVariable...)
VERBOSE: 13:09:24:(---param:OutVariable...)
VERBOSE: 13:09:24:(---param:OutBuffer...)
VERBOSE: 13:09:24:(---param:PipelineVariable...)
VERBOSE: 13:09:24:(=cmd:convertTo-SentanceCase...)
VERBOSE: 13:09:24:(---param:string...)
VERBOSE: 13:09:24:(---param:Verbose...)
VERBOSE: 13:09:24:(---param:Debug...)
VERBOSE: 13:09:24:(---param:ErrorAction...)
VERBOSE: 13:09:24:(---param:WarningAction...)
VERBOSE: 13:09:24:(---param:InformationAction...)
VERBOSE: 13:09:24:(---param:ErrorVariable...)
VERBOSE: 13:09:24:(---param:WarningVariable...)
VERBOSE: 13:09:24:(---param:InformationVariable...)
VERBOSE: 13:09:24:(---param:OutVariable...)
VERBOSE: 13:09:24:(---param:OutBuffer...)
VERBOSE: 13:09:24:(---param:PipelineVariable...)
VERBOSE: 13:09:24:(=cmd:convertto-StringHash...)
VERBOSE: 13:09:24:(---param:String...)
VERBOSE: 13:09:24:(---param:Algorithm...)
VERBOSE: 13:09:24:(---param:Verbose...)
VERBOSE: 13:09:24:(---param:Debug...)
VERBOSE: 13:09:24:(---param:ErrorAction...)
VERBOSE: 13:09:24:(---param:WarningAction...)
VERBOSE: 13:09:24:(---param:InformationAction...)
VERBOSE: 13:09:24:(---param:ErrorVariable...)
VERBOSE: 13:09:24:(---param:WarningVariable...)
VERBOSE: 13:09:24:(---param:InformationVariable...)
VERBOSE: 13:09:24:(---param:OutVariable...)
VERBOSE: 13:09:24:(---param:OutBuffer...)
VERBOSE: 13:09:24:(---param:PipelineVariable...)
VERBOSE: 13:09:24:(=cmd:convertTo-StUdlycaSe...)
VERBOSE: 13:09:24:(---param:string...)
VERBOSE: 13:09:24:(---param:Verbose...)
VERBOSE: 13:09:24:(---param:Debug...)
VERBOSE: 13:09:24:(---param:ErrorAction...)
VERBOSE: 13:09:24:(---param:WarningAction...)
VERBOSE: 13:09:24:(---param:InformationAction...)
VERBOSE: 13:09:24:(---param:ErrorVariable...)
VERBOSE: 13:09:24:(---param:WarningVariable...)
VERBOSE: 13:09:24:(---param:InformationVariable...)
VERBOSE: 13:09:24:(---param:OutVariable...)
VERBOSE: 13:09:24:(---param:OutBuffer...)
VERBOSE: 13:09:24:(---param:PipelineVariable...)
VERBOSE: 13:09:24:(=cmd:convertTo-UpperCamelCase...)
VERBOSE: 13:09:24:(---param:string...)
VERBOSE: 13:09:24:(---param:AlphaNumeric...)
VERBOSE: 13:09:24:(---param:useLower...)
VERBOSE: 13:09:24:(---param:Verbose...)
VERBOSE: 13:09:24:(---param:Debug...)
VERBOSE: 13:09:24:(---param:ErrorAction...)
VERBOSE: 13:09:24:(---param:WarningAction...)
VERBOSE: 13:09:24:(---param:InformationAction...)
VERBOSE: 13:09:24:(---param:ErrorVariable...)
VERBOSE: 13:09:24:(---param:WarningVariable...)
VERBOSE: 13:09:24:(---param:InformationVariable...)
VERBOSE: 13:09:24:(---param:OutVariable...)
VERBOSE: 13:09:24:(---param:OutBuffer...)
VERBOSE: 13:09:24:(---param:PipelineVariable...)
VERBOSE: 13:09:24:(=cmd:create-AcronymFromCaps...)
VERBOSE: 13:09:24:(---param:String...)
VERBOSE: 13:09:24:(---param:doEXOSubstitution...)
VERBOSE: 13:09:24:(---param:Verbose...)
VERBOSE: 13:09:24:(---param:Debug...)
VERBOSE: 13:09:24:(---param:ErrorAction...)
VERBOSE: 13:09:24:(---param:WarningAction...)
VERBOSE: 13:09:24:(---param:InformationAction...)
VERBOSE: 13:09:24:(---param:ErrorVariable...)
VERBOSE: 13:09:24:(---param:WarningVariable...)
VERBOSE: 13:09:24:(---param:InformationVariable...)
VERBOSE: 13:09:24:(---param:OutVariable...)
VERBOSE: 13:09:24:(---param:OutBuffer...)
VERBOSE: 13:09:24:(---param:PipelineVariable...)
VERBOSE: 13:09:24:(=cmd:quote-list...)
VERBOSE: 13:09:24:(---param:List...)
VERBOSE: 13:09:24:(---param:Verbose...)
VERBOSE: 13:09:24:(---param:Debug...)
VERBOSE: 13:09:24:(---param:ErrorAction...)
VERBOSE: 13:09:24:(---param:WarningAction...)
VERBOSE: 13:09:24:(---param:InformationAction...)
VERBOSE: 13:09:24:(---param:ErrorVariable...)
VERBOSE: 13:09:24:(---param:WarningVariable...)
VERBOSE: 13:09:24:(---param:InformationVariable...)
VERBOSE: 13:09:24:(---param:OutVariable...)
VERBOSE: 13:09:24:(---param:OutBuffer...)
VERBOSE: 13:09:24:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:quote-string...)
VERBOSE: 13:09:25:(---param:String...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:test-URI...)
VERBOSE: 13:09:25:(---param:String...)
VERBOSE: 13:09:25:(---param:PermitHttp...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:unwrap-text...)
VERBOSE: 13:09:25:(---param:Text...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:Unwrap-TextN...)
VERBOSE: 13:09:25:(---param:Text...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:wrap-text...)
VERBOSE: 13:09:25:(---param:Text...)
VERBOSE: 13:09:25:(---param:Characters...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:compare-CodeRevision...)
VERBOSE: 13:09:25:(---param:Reference...)
VERBOSE: 13:09:25:(---param:Difference...)
VERBOSE: 13:09:25:(---param:NoLineNumbers...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convert-CaesarCipher...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:key...)
VERBOSE: 13:09:25:(---param:Decode...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:Convert-CodePointToPSSyntaxTDO...)
VERBOSE: 13:09:25:(---param:CodePoint...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convertFrom-Base64String...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:SourceFile...)
VERBOSE: 13:09:25:(---param:TargetFile...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convert-HtmlCodeToTextTDO...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:File...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:Convert-invertCase...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convert-Rot13...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convert-Rot47...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convertto-AcronymFromCaps...)
VERBOSE: 13:09:25:(---param:String...)
VERBOSE: 13:09:25:(---param:doEXOSubstitution...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convertTo-Base64String...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:SourceFile...)
VERBOSE: 13:09:25:(---param:TargetFile...)
VERBOSE: 13:09:25:(---param:ForceString...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convertto-Base64StringCommaQuoted...)
VERBOSE: 13:09:25:(---param:str...)
VERBOSE: 13:09:25:(---param:outObject...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:ConvertTo-CamelCase...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:AlphaNumeric...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:ConvertTo-L33t...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:VowelsOnly...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:ConvertTo-lowerCamelCase...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:AlphaNumeric...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convertTo-PSHelpExample...)
VERBOSE: 13:09:25:(---param:ScriptBlock...)
VERBOSE: 13:09:25:(---param:Wrap...)
VERBOSE: 13:09:25:(---param:NoPad...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convertTo-QuotedList...)
VERBOSE: 13:09:25:(---param:List...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:ConvertTo-SCase...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:ConvertTo-SNAKE_CASE...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:AlphaNumeric...)
VERBOSE: 13:09:25:(---param:useLower...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convertto-StringCommaQuote...)
VERBOSE: 13:09:25:(---param:String...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:ConvertTo-StringQuoted...)
VERBOSE: 13:09:25:(---param:String...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convertTo-StringReverse...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convertTo-StUdlycaPs...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convertTo-TitleCase...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convertTo-UnWrappedText...)
VERBOSE: 13:09:25:(---param:Text...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convertTo-WordsReverse...)
VERBOSE: 13:09:25:(---param:lines...)
VERBOSE: 13:09:25:(---param:TextOnly...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convertTo-WrappedText...)
VERBOSE: 13:09:25:(---param:Text...)
VERBOSE: 13:09:25:(---param:Characters...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:convert-UnicodeUPlusToCharCode...)
VERBOSE: 13:09:25:(---param:Value...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:Get-CharInfo...)
VERBOSE: 13:09:25:(---param:InputObject...)
VERBOSE: 13:09:25:(---param:OutUni...)
VERBOSE: 13:09:25:(---param:OutHex...)
VERBOSE: 13:09:25:(---param:OutStr...)
VERBOSE: 13:09:25:(---param:IgnoreWhiteSpace...)
VERBOSE: 13:09:25:(---param:UnicodeData...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:get-StringHash...)
VERBOSE: 13:09:25:(---param:String...)
VERBOSE: 13:09:25:(---param:Algorithm...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:new-LoremString...)
VERBOSE: 13:09:25:(---param:minWords...)
VERBOSE: 13:09:25:(---param:maxWords...)
VERBOSE: 13:09:25:(---param:minSentences...)
VERBOSE: 13:09:25:(---param:maxSentences...)
VERBOSE: 13:09:25:(---param:numParagraphs...)
VERBOSE: 13:09:25:(---param:NoLorem...)
VERBOSE: 13:09:25:(---param:AltLexicon...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:Remove-StringDiacritic...)
VERBOSE: 13:09:25:(---param:String...)
VERBOSE: 13:09:25:(---param:NormalizationForm...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:Remove-StringLatinCharacters...)
VERBOSE: 13:09:25:(---param:String...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:Test-IsGuid...)
VERBOSE: 13:09:25:(---param:String...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:test-IsNumeric...)
VERBOSE: 13:09:25:(---param:value...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:test-IsRegexPattern...)
VERBOSE: 13:09:25:(---param:string...)
VERBOSE: 13:09:25:(---param:Threshold...)
VERBOSE: 13:09:25:(---param:ReturnScore...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:test-IsRegexValid...)
VERBOSE: 13:09:25:(---param:pattern...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
VERBOSE: 13:09:25:(=cmd:test-IsUri...)
VERBOSE: 13:09:25:(---param:String...)
VERBOSE: 13:09:25:(---param:PermitHttp...)
VERBOSE: 13:09:25:(---param:Verbose...)
VERBOSE: 13:09:25:(---param:Debug...)
VERBOSE: 13:09:25:(---param:ErrorAction...)
VERBOSE: 13:09:25:(---param:WarningAction...)
VERBOSE: 13:09:25:(---param:InformationAction...)
VERBOSE: 13:09:25:(---param:ErrorVariable...)
VERBOSE: 13:09:25:(---param:WarningVariable...)
VERBOSE: 13:09:25:(---param:InformationVariable...)
VERBOSE: 13:09:25:(---param:OutVariable...)
VERBOSE: 13:09:25:(---param:OutBuffer...)
VERBOSE: 13:09:25:(---param:PipelineVariable...)
13:09:25:Detecting new features
13:09:25:Detecting breaking changes
VERBOSE: (backup-FileTDO -path C:\sc\verb-text\fingerprint)
13:09:25:Writing fingerprint: Out-File w
Name                           Value                                                         
----                           -----                                                         
Encoding                       utf8                                                          
FilePath                       C:\sc\verb-text\fingerprint                                   
whatif                         False                                                         
Verbose                        True
VERBOSE: Performing the operation "Output to File" on target "C:\sc\verb-text\fingerprint".
13:09:25:

Fingerprint analysis recommends ModuleVersion Step:Minor. 

This can be implemented with the following command:

Step-ModuleVersion -Path C:\sc\verb-text\verb-text\verb-text.psd1 -By Minor

(the above will use the BuildHelpers module to update the revision stored in the Manifest .psd1 file for the module).
VERBOSE: 13:09:25:Minor/New-Feature Chgs:
Convert-CodePointToPSSyntaxTDO:CodePoint

  Convert-CodePointToPSSyntaxTDO:Verbose

  Convert-CodePointToPSSyntaxTDO:vb

  Convert-CodePointToPSSyntaxTDO:Debug

  Convert-CodePointToPSSyntaxTDO:db

  Convert-CodePointToPSSyntaxTDO:ErrorAction

  Convert-CodePointToPSSyntaxTDO:ea

  Convert-CodePointToPSSyntaxTDO:WarningAction

  Convert-CodePointToPSSyntaxTDO:wa

  Convert-CodePointToPSSyntaxTDO:InformationAction

  Convert-CodePointToPSSyntaxTDO:infa

  Convert-CodePointToPSSyntaxTDO:ErrorVariable

  Convert-CodePointToPSSyntaxTDO:ev

  Convert-CodePointToPSSyntaxTDO:WarningVariable

  Convert-CodePointToPSSyntaxTDO:wv

  Convert-CodePointToPSSyntaxTDO:InformationVariable

  Convert-CodePointToPSSyntaxTDO:iv

  Convert-CodePointToPSSyntaxTDO:OutVariable

  Convert-CodePointToPSSyntaxTDO:ov

  Convert-CodePointToPSSyntaxTDO:OutBuffer

  Convert-CodePointToPSSyntaxTDO:ob

  Convert-CodePointToPSSyntaxTDO:PipelineVariable

  Convert-CodePointToPSSyntaxTDO:pv

Major/Removal/Breaking Chgs:
13:09:25:-applyChange *not* specified, returning 'bumpVersionType' specification to pipeline:
13:09:25:#*======^ RUNNING :Step-ModuleVersionCalculated:c:\sc\verb-text ^======
13:09:25:----PsdVers incremented from 6.2.3 to 6.3.0
13:09:25:update-NewModule w
Name                           Value                                                         
----                           -----                                                         
ModuleName                     verb-text                                                     
ModDirPath                     c:\sc\verb-text                                               
RequiredVersion                6.3.0                                                         
Repository                     lyncRepo                                                      
Merge                          True                                                          
RunTest                        True                                                          
showdebug                      False                                                         
whatif                         False                                                         
verbose                        True
VERBOSE: (running verb-dev:update-NewModule)
VERBOSE: consistent results
Calculated $runSource:Function
VERBOSE: $rPSBoundParameters:
Key             Value          
---             -----          
ModuleName      verb-text      
ModDirPath      c:\sc\verb-text
RequiredVersion 6.3.0          
Repository      lyncRepo       
Merge           True           
RunTest         True           
showDebug       False          
whatIf          False          
Verbose         True
VERBOSE: Collect all non-default Params (works back to psv2 w CmdletBinding)
MODULE-HOMED FUNCTION:Use $CmdletName to reference the running function name for transcripts etc (under a .psm1 $ScriptName will reflect the .psm1 file  fullname)
$runSource       : Function
$CmdletName      : update-NewModule
$scriptName      : C:\sc\verb-dev\verb-dev\VERB-dev.psm1
$ScriptBaseName  : VERB-dev.psm1
$ScriptNameNoExt : VERB-dev
$ScriptDir       : C:\sc\verb-dev\verb-dev
$PSScriptRoot    : C:\sc\verb-dev\verb-dev
$PSCommandPath   : C:\sc\verb-dev\verb-dev\VERB-dev.psm1
$rPSScriptRoot   : C:\sc\verb-dev\verb-dev
$rPSCommandPath  : C:\sc\verb-dev\verb-dev\VERB-dev.psm1
13:09:31:( processing $tModName:verb-logging	$tModFile:C:\sc\verb-logging\verb-logging\verb-logging.psm1	$tModCmdlet:write-log )
VERBOSE: (confirmed verb-logging loaded: write-log present)
13:09:31:( processing $tModName:verb-IO	$tModFile:C:\sc\verb-IO\verb-IO\verb-IO.psm1	$tModCmdlet:Add-PSTitleBar )
VERBOSE: (confirmed verb-IO loaded: Add-PSTitleBar present)
13:09:31:( processing $tModName:verb-Mods	$tModFile:C:\sc\verb-Mods\verb-Mods\verb-Mods.psm1	$tModCmdlet:check-ReqMods )
VERBOSE: (confirmed verb-Mods loaded: check-ReqMods present)
13:09:31:( processing $tModName:verb-Text	$tModFile:C:\sc\verb-Text\verb-Text\verb-Text.psm1	$tModCmdlet:Remove-StringDiacritic )
VERBOSE: (confirmed verb-Text loaded: Remove-StringDiacritic present)
VERBOSE: start-Log w
Name                           Value                                                         
----                           -----                                                         
Path                           C:\sc\verb-dev\verb-dev\VERB-dev.psm1                         
NoTimeStamp                    False                                                         
Tag                            verb-text                                                     
showdebug                      False                                                         
Verbose                        True                                                          
whatif                         False
VERBOSE: Name                           Value                                                         
----                           -----                                                         
logging                        True                                                          
logfile                        C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-text-LOG-BATCH-E...
transcript                     C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-text-Transcript-...
**********************
Windows PowerShell transcript end
End time: 20240917130932
**********************
