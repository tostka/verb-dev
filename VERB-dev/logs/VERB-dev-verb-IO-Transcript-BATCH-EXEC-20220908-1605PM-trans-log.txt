**********************
Windows PowerShell transcript start
Start time: 20220908160522
Username: TORO\kadriTSS
RunAs User: TORO\kadriTSS
Configuration Name: 
Machine: LYN-8DCZ1G2 (Microsoft Windows NT 10.0.17134.0)
Host Application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -noexit -command $Host.UI.RawUI.BackgroundColor='Black'; $Host.UI.RawUI.ForegroundColor='Gray';cd c:\usr\work\exch\scripts\;replace-PSTitleBarText -text 'PS ADMIN' -replace 'PS ADMIN-EMS' ; 
Process ID: 24268
PSVersion: 5.1.17134.858
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.17134.858
Platform: Win32NT
BuildVersion: 10.0.17134.858
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
OS: Microsoft Windows NT 10.0.17134.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-IO-Transcript-BATCH-EXEC-20220908-1605PM-trans-log.txt
16:05:22: INFO: #*======v VERB-dev.psm1:verb-IO v======
16:05:22:(executing:Get-BuildEnvironment -Path c:\sc\verb-IO 
(use -NoBuildInfo if hangs))
16:05:23: INFO: NON-Republish pass detected:
MERGE parm specified as well:`n-Merge Public|Internal|Classes include subdirs module content into updated .psm1
-Sign updated files.
-Uninstall/Remove existing profile module
-Copy new module to profile
-Confirm: Get-Module -ListAvailable
-Check/Update existing Psd1 Version
-Publish-Module
-Remove existing installed profile module
-Test Install-Module
-Test Import-Module
16:05:23: INFO: -Merge specified...
16:05:23: INFO: ConvertTo-ModuleMergedTDO w
Name                           Value                                                                                                       
----                           -----                                                                                                       
ModuleName                     verb-IO                                                                                                     
ModuleSourcePath               {c:\sc\verb-IO\Public, c:\sc\verb-IO\Internal}                                                              
ModuleDestinationPath          c:\sc\verb-IO\verb-IO                                                                                       
RequiredVersion                4.0.0                                                                                                       
LogSpec                        {logging, logfile, transcript}                                                                              
NoAliasExport                                                                                                                              
ErrorAction                    Stop                                                                                                        
showdebug                      False                                                                                                       
whatif                         False
VERBOSE: $PSBoundParameters:
Key                   Value                                         
---                   -----                                         
ModuleName            verb-IO                                       
ModuleSourcePath      {c:\sc\verb-IO\Public, c:\sc\verb-IO\Internal}
ModuleDestinationPath c:\sc\verb-IO\verb-IO                         
RequiredVersion       4.0.0                                         
LogSpec               {logging, logfile, transcript}                
NoAliasExport         False                                         
ErrorAction           Stop                                          
showDebug             False                                         
whatIf                False
16:05:23: INFO: ConvertTo-ModuleMergedTDO w
Name                           Value                                                                                                       
----                           -----                                                                                                       
ModuleName                     verb-IO                                                                                                     
ModuleSourcePath               {c:\sc\verb-IO\Public, c:\sc\verb-IO\Internal}                                                              
ModuleDestinationPath          c:\sc\verb-IO\verb-IO                                                                                       
RequiredVersion                4.0.0                                                                                                       
LogSpec                        {logging, logfile, transcript}                                                                              
NoAliasExport                                                                                                                              
ErrorAction                    Stop                                                                                                        
showdebug                      False                                                                                                       
whatif                         False
VERBOSE: (backup-FileTDO -path c:\sc\verb-IO\verb-IO\verb-IO.psm1)
VERBOSE: (backup-FileTDO -path c:\sc\verb-IO\verb-IO\verb-IO.psd1)
DEADWOOD REMOVAL:remove-UnneededFileVariants w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           c:\sc\verb-IO\verb-IO                                                                                       
Include                        verb-IO.psm1_*                                                                                              
Pattern                        \.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$                                                                             
FilterOn                       CreationTime                                                                                                
Keep                           2                                                                                                           
KeepToday                      True                                                                                                        
verbose                        True                                                                                                        
whatif                         False
16:05:24:gci w
Name                           Value                                                                                                       
----                           -----                                                                                                       
path                           c:\sc\verb-IO\verb-IO\*                                                                                     
include                        verb-IO.psm1_*                                                                                              
ErrorAction                    Stop
VERBOSE: $cuttime:09/08/2022 00:00:00
VERBOSE: post-filtering on pattern:\.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$
(7 in set *before* filtering)
(4 in set *after* filtering)
VERBOSE: filtering on files prior to $cuttime:09/08/2022 00:00:00 AM, on CreationTime property
(4 in set *before* filtering)
(3 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(3 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
16:05:25:Reducing matched population from 7 to 1 files via:
post-filtered files with regex pattern:\.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$
filtered files on CreationTime prior to 09/08/2022 00:00:00 AM
16:05:25:Remove-Item w 
Name                           Value                                                                                                       
----                           -----                                                                                                       
path                           C:\sc\verb-IO\verb-IO\verb-io.psm1_20220602-1036AM                                                          
ErrorAction                    STOP                                                                                                        
whatif                         False
16:05:26: INFO: (NON-dyn psm1 detected - purging existing non-CBH content...)
VERBOSE: L16:05:29:(doesn't appear to be an inter meta-CBH block)
VERBOSE: adding $PostCBHBlock
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Value    {# verb-IO.psm1...                                                                                                                
Path     c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                                            
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False
VERBOSE: 16:05:29:(Set-ContentFixEncoding:c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP)
VERBOSE: 16:05:29:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
PassThru                       True                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
encoding                       UTF8                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
# verb-IO.psm1
<#
16:05:29: INFO: Initialize-PSModuleDirectories w
Name                           Value                                                                                                       
----                           -----                                                                                                       
ModuleSourcePath               {c:\sc\verb-IO\Public, c:\sc\verb-IO\Internal}                                                              
ModuleDestinationPath          c:\sc\verb-IO\verb-IO                                                                                       
ErrorAction                    Stop                                                                                                        
whatif                         False
VERBOSE: $PSBoundParameters:
Key                   Value                                         
---                   -----                                         
ModuleSourcePath      {c:\sc\verb-IO\Public, c:\sc\verb-IO\Internal}
ModuleDestinationPath c:\sc\verb-IO\verb-IO                         
ErrorAction           Stop                                          
whatIf                False
VERBOSE: (non-pipeline - param - input)
16:05:29: INFO: 
#*------v (1/2):C:\sc\verb-IO\Public v------
16:05:33: INFO: Processing 123 $ComponentScripts files through Remove-AuthenticodeSignature...
16:05:33: INFO: Remove-AuthenticodeSignature w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           {C:\sc\verb-IO\Public\Add-ContentFixEncoding.ps1, C:\sc\verb-IO\Public\Add-PSTitleBar.ps1, C:\sc\verb-IO\...
whatif                         False                                                                                                       
verbose                        True
VERBOSE: 16:05:33:((1/123):C:\sc\verb-IO\Public\Add-ContentFixEncoding.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:33:((2/123):C:\sc\verb-IO\Public\Add-PSTitleBar.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:33:((3/123):C:\sc\verb-IO\Public\Authenticate-File.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:33:((4/123):C:\sc\verb-IO\Public\backup-FileTDO.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:33:((5/123):C:\sc\verb-IO\Public\check-FileLock.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:33:((6/123):C:\sc\verb-IO\Public\Close-IfAlreadyRunning.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:33:((7/123):C:\sc\verb-IO\Public\ColorMatch.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:33:((8/123):C:\sc\verb-IO\Public\Compare-ObjectsSideBySide.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:33:((9/123):C:\sc\verb-IO\Public\Compare-ObjectsSideBySide3.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:33:((10/123):C:\sc\verb-IO\Public\Compare-ObjectsSideBySide4.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:33:((11/123):C:\sc\verb-IO\Public\Compress-ArchiveFile.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:33:((12/123):C:\sc\verb-IO\Public\convert-BinaryToDecimalStorageUnits.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((13/123):C:\sc\verb-IO\Public\convert-ColorHexCodeToWindowsMediaColorsName.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((14/123):C:\sc\verb-IO\Public\convert-DehydratedBytesToGB.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((15/123):C:\sc\verb-IO\Public\convert-DehydratedBytesToMB.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((16/123):C:\sc\verb-IO\Public\Convert-FileEncoding.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((17/123):C:\sc\verb-IO\Public\ConvertFrom-CanonicalOU.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((18/123):C:\sc\verb-IO\Public\ConvertFrom-CanonicalUser.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((19/123):C:\sc\verb-IO\Public\ConvertFrom-CmdList.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((20/123):C:\sc\verb-IO\Public\ConvertFrom-DN.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((21/123):C:\sc\verb-IO\Public\ConvertFrom-IniFile.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((22/123):C:\sc\verb-IO\Public\convertFrom-MarkdownTable.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((23/123):C:\sc\verb-IO\Public\ConvertFrom-SourceTable.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((24/123):C:\sc\verb-IO\Public\ConvertFrom-UncPath.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((25/123):C:\sc\verb-IO\Public\convert-HelpToMarkdown.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((26/123):C:\sc\verb-IO\Public\ConvertTo-HashIndexed.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((27/123):C:\sc\verb-IO\Public\convertto-MarkdownTable.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((28/123):C:\sc\verb-IO\Public\convertTo-Object.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((29/123):C:\sc\verb-IO\Public\ConvertTo-SRT.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((30/123):C:\sc\verb-IO\Public\ConvertTo-UncPath.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((31/123):C:\sc\verb-IO\Public\convert-VideoToMp3.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((32/123):C:\sc\verb-IO\Public\copy-Profile.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((33/123):C:\sc\verb-IO\Public\count-object.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((34/123):C:\sc\verb-IO\Public\Create-ScheduledTaskLegacy.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((35/123):C:\sc\verb-IO\Public\dump-Shortcuts.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((36/123):C:\sc\verb-IO\Public\Echo-Finish.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((37/123):C:\sc\verb-IO\Public\Echo-ScriptEnd.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((38/123):C:\sc\verb-IO\Public\Echo-Start.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((39/123):C:\sc\verb-IO\Public\Expand-ArchiveFile.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((40/123):C:\sc\verb-IO\Public\extract-Icon.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((41/123):C:\sc\verb-IO\Public\Find-LockedFileProcess.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((42/123):C:\sc\verb-IO\Public\Format-Json.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((43/123):C:\sc\verb-IO\Public\get-AliasDefinition.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((44/123):C:\sc\verb-IO\Public\Get-AverageItems.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((45/123):C:\sc\verb-IO\Public\get-colorcombo.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((46/123):C:\sc\verb-IO\Public\get-ConsoleText.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((47/123):C:\sc\verb-IO\Public\Get-CountItems.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((48/123):C:\sc\verb-IO\Public\Get-FileEncoding.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((49/123):C:\sc\verb-IO\Public\Get-FileEncodingExtended.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((50/123):C:\sc\verb-IO\Public\Get-FolderSize.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((51/123):C:\sc\verb-IO\Public\Get-FolderSize2.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((52/123):C:\sc\verb-IO\Public\Get-FsoShortName.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((53/123):C:\sc\verb-IO\Public\Get-FsoShortPath.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((54/123):C:\sc\verb-IO\Public\Get-FsoTypeObj.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((55/123):C:\sc\verb-IO\Public\get-InstalledApplication.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((56/123):C:\sc\verb-IO\Public\get-LoremName.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((57/123):C:\sc\verb-IO\Public\Get-ProductItems.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((58/123):C:\sc\verb-IO\Public\get-RegistryProperty.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((59/123):C:\sc\verb-IO\Public\Get-ScheduledTaskLegacy.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((60/123):C:\sc\verb-IO\Public\Get-Shortcut.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((61/123):C:\sc\verb-IO\Public\Get-SumItems.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((62/123):C:\sc\verb-IO\Public\get-TaskReport.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((63/123):C:\sc\verb-IO\Public\Get-Time.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((64/123):C:\sc\verb-IO\Public\Get-TimeStamp.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((65/123):C:\sc\verb-IO\Public\get-TimeStampNow.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((66/123):C:\sc\verb-IO\Public\get-Uptime.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((67/123):C:\sc\verb-IO\Public\Invoke-Flasher.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((68/123):C:\sc\verb-IO\Public\Invoke-Pause.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((69/123):C:\sc\verb-IO\Public\Invoke-Pause2.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((70/123):C:\sc\verb-IO\Public\invoke-SoundCue.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((71/123):C:\sc\verb-IO\Public\mount-UnavailableMappedDrives.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((72/123):C:\sc\verb-IO\Public\move-FileOnReboot.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((73/123):C:\sc\verb-IO\Public\New-RandomFilename.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((74/123):C:\sc\verb-IO\Public\new-Shortcut.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((75/123):C:\sc\verb-IO\Public\out-Clipboard.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((76/123):C:\sc\verb-IO\Public\Out-Excel.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((77/123):C:\sc\verb-IO\Public\Out-Excel-Events.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((78/123):C:\sc\verb-IO\Public\parse-PSTitleBar.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((79/123):C:\sc\verb-IO\Public\play-beep.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((80/123):C:\sc\verb-IO\Public\Pop-LocationFirst.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((81/123):C:\sc\verb-IO\Public\prompt-Continue.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((82/123):C:\sc\verb-IO\Public\read-Host2.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((83/123):C:\sc\verb-IO\Public\rebuild-PSTitleBar.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((84/123):C:\sc\verb-IO\Public\Remove-AuthenticodeSignature.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((85/123):C:\sc\verb-IO\Public\Remove-InvalidFileNameChars.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((86/123):C:\sc\verb-IO\Public\Remove-InvalidVariableNameChars.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((87/123):C:\sc\verb-IO\Public\remove-ItemRetry.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((88/123):C:\sc\verb-IO\Public\remove-JsonComments.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((89/123):C:\sc\verb-IO\Public\Remove-PSTitleBar.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((90/123):C:\sc\verb-IO\Public\Remove-ScheduledTaskLegacy.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((91/123):C:\sc\verb-IO\Public\remove-UnneededFileVariants.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((92/123):C:\sc\verb-IO\Public\replace-PSTitleBarText.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((93/123):C:\sc\verb-IO\Public\reset-ConsoleColors.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((94/123):C:\sc\verb-IO\Public\restore-FileTDO.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((95/123):C:\sc\verb-IO\Public\Run-ScheduledTaskLegacy.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((96/123):C:\sc\verb-IO\Public\Save-ConsoleOutputToClipBoard.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((97/123):C:\sc\verb-IO\Public\select-first.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((98/123):C:\sc\verb-IO\Public\select-last.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((99/123):C:\sc\verb-IO\Public\Select-StringAll.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((100/123):C:\sc\verb-IO\Public\set-ConsoleColors.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((101/123):C:\sc\verb-IO\Public\Set-ContentFixEncoding.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((102/123):C:\sc\verb-IO\Public\set-ItemReadOnlyTDO.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((103/123):C:\sc\verb-IO\Public\set-PSTitleBar.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((104/123):C:\sc\verb-IO\Public\Set-Shortcut.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((105/123):C:\sc\verb-IO\Public\Shorten-Path.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((106/123):C:\sc\verb-IO\Public\Show-MsgBox.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((107/123):C:\sc\verb-IO\Public\Sign-File.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((108/123):C:\sc\verb-IO\Public\stop-driveburn.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((109/123):C:\sc\verb-IO\Public\test-FileSysAutomaticVariables.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((110/123):C:\sc\verb-IO\Public\test-IsUncPath.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((111/123):C:\sc\verb-IO\Public\test-LineEndings.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((112/123):C:\sc\verb-IO\Public\test-MediaFile.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((113/123):C:\sc\verb-IO\Public\test-MissingMediaSummary.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((114/123):C:\sc\verb-IO\Public\Test-PendingReboot.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((115/123):C:\sc\verb-IO\Public\test-PSTitleBar.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((116/123):C:\sc\verb-IO\Public\Test-RegistryKey.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((117/123):C:\sc\verb-IO\Public\Test-RegistryValue.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((118/123):C:\sc\verb-IO\Public\Test-RegistryValueNotNull.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((119/123):C:\sc\verb-IO\Public\Touch-File.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((120/123):C:\sc\verb-IO\Public\trim-FileList.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((121/123):C:\sc\verb-IO\Public\unless.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((122/123):C:\sc\verb-IO\Public\update-RegistryProperty.ps1:has no existing Authenticode signature)
VERBOSE: 16:05:34:((123/123):C:\sc\verb-IO\Public\Write-ProgressHelper.ps1:has no existing Authenticode signature)
16:05:34: INFO: Processing (1/123):C:\sc\verb-IO\Public\Add-ContentFixEncoding.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:35:(Add-ContentFixEncoding:)
VERBOSE: 16:05:35:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Add-ContentFixEncoding.ps1 v------
function Add-ContentFixEncoding {
16:05:35: INFO: Processing (2/123):C:\sc\verb-IO\Public\Add-PSTitleBar.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:35:(Add-ContentFixEncoding:)
VERBOSE: 16:05:35:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Add-PSTitleBar.ps1 v------
Function Add-PSTitleBar {
16:05:35: INFO: Processing (3/123):C:\sc\verb-IO\Public\Authenticate-File.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:35:(Add-ContentFixEncoding:)
VERBOSE: 16:05:35:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Authenticate-File.ps1 v------
function Authenticate-File {
16:05:35: INFO: Processing (4/123):C:\sc\verb-IO\Public\backup-FileTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:36:(Add-ContentFixEncoding:)
VERBOSE: 16:05:36:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v backup-FileTDO.ps1 v------
function backup-FileTDO {
16:05:37: INFO: Processing (5/123):C:\sc\verb-IO\Public\check-FileLock.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:37:(Add-ContentFixEncoding:)
VERBOSE: 16:05:37:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v check-FileLock.ps1 v------
function check-FileLock {
16:05:38: INFO: Processing (6/123):C:\sc\verb-IO\Public\Close-IfAlreadyRunning.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:38:(Add-ContentFixEncoding:)
VERBOSE: 16:05:38:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Close-IfAlreadyRunning.ps1 v------
Function Close-IfAlreadyRunning {
16:05:38: INFO: Processing (7/123):C:\sc\verb-IO\Public\ColorMatch.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:38:(Add-ContentFixEncoding:)
VERBOSE: 16:05:38:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v ColorMatch.ps1 v------
function ColorMatch {
16:05:38: INFO: Processing (8/123):C:\sc\verb-IO\Public\Compare-ObjectsSideBySide.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:38:(Add-ContentFixEncoding:)
VERBOSE: 16:05:38:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Compare-ObjectsSideBySide.ps1 v------
function Compare-ObjectsSideBySide{
16:05:39: INFO: Processing (9/123):C:\sc\verb-IO\Public\Compare-ObjectsSideBySide3.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:39:(Add-ContentFixEncoding:)
VERBOSE: 16:05:39:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Compare-ObjectsSideBySide3.ps1 v------
function Compare-ObjectsSideBySide3 {
16:05:39: INFO: Processing (10/123):C:\sc\verb-IO\Public\Compare-ObjectsSideBySide4.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:39:(Add-ContentFixEncoding:)
VERBOSE: 16:05:39:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Compare-ObjectsSideBySide4.ps1 v------
function Compare-ObjectsSideBySide4 {
16:05:40: INFO: Processing (11/123):C:\sc\verb-IO\Public\Compress-ArchiveFile.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:40:(Add-ContentFixEncoding:)
VERBOSE: 16:05:40:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Compress-ArchiveFile.ps1 v------
function Compress-ArchiveFile {
16:05:42: INFO: Processing (12/123):C:\sc\verb-IO\Public\convert-BinaryToDecimalStorageUnits.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:42:(Add-ContentFixEncoding:)
VERBOSE: 16:05:42:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-BinaryToDecimalStorageUnits.ps1 v------
Function convert-BinaryToDecimalStorageUnits {
16:05:43: INFO: Processing (13/123):C:\sc\verb-IO\Public\convert-ColorHexCodeToWindowsMediaColorsName.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:43:(Add-ContentFixEncoding:)
VERBOSE: 16:05:43:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-ColorHexCodeToWindowsMediaColorsName.ps1 v------
Function convert-ColorHexCodeToWindowsMediaColorsName {
16:05:44: INFO: Processing (14/123):C:\sc\verb-IO\Public\convert-DehydratedBytesToGB.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:44:(Add-ContentFixEncoding:)
VERBOSE: 16:05:44:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-DehydratedBytesToGB.ps1 v------
Function convert-DehydratedBytesToGB {
16:05:44: INFO: Processing (15/123):C:\sc\verb-IO\Public\convert-DehydratedBytesToMB.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:44:(Add-ContentFixEncoding:)
VERBOSE: 16:05:44:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-DehydratedBytesToMB.ps1 v------
Function convert-DehydratedBytesToMB {
16:05:44: INFO: Processing (16/123):C:\sc\verb-IO\Public\Convert-FileEncoding.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:44:(Add-ContentFixEncoding:)
VERBOSE: 16:05:44:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Convert-FileEncoding.ps1 v------
function Convert-FileEncoding {
16:05:45: INFO: Processing (17/123):C:\sc\verb-IO\Public\ConvertFrom-CanonicalOU.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:45:(Add-ContentFixEncoding:)
VERBOSE: 16:05:45:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertFrom-CanonicalOU.ps1 v------
function ConvertFrom-CanonicalOU {
16:05:45: INFO: Processing (18/123):C:\sc\verb-IO\Public\ConvertFrom-CanonicalUser.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:45:(Add-ContentFixEncoding:)
VERBOSE: 16:05:45:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertFrom-CanonicalUser.ps1 v------
function ConvertFrom-CanonicalUser {
16:05:45: INFO: Processing (19/123):C:\sc\verb-IO\Public\ConvertFrom-CmdList.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:45:(Add-ContentFixEncoding:)
VERBOSE: 16:05:45:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertFrom-CmdList.ps1 v------
filter ConvertFrom-CmdList {
16:05:45: INFO: Processing (20/123):C:\sc\verb-IO\Public\ConvertFrom-DN.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:45:(Add-ContentFixEncoding:)
VERBOSE: 16:05:45:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertFrom-DN.ps1 v------
function ConvertFrom-DN {
16:05:46: INFO: Processing (21/123):C:\sc\verb-IO\Public\ConvertFrom-IniFile.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:46:(Add-ContentFixEncoding:)
VERBOSE: 16:05:46:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertFrom-IniFile.ps1 v------
Function ConvertFrom-IniFile {
16:05:46: INFO: Processing (22/123):C:\sc\verb-IO\Public\convertFrom-MarkdownTable.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:46:(Add-ContentFixEncoding:)
VERBOSE: 16:05:46:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v convertFrom-MarkdownTable.ps1 v------
Function convertFrom-MarkdownTable {
16:05:46: INFO: Processing (23/123):C:\sc\verb-IO\Public\ConvertFrom-SourceTable.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:46:(Add-ContentFixEncoding:)
VERBOSE: 16:05:46:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertFrom-SourceTable.ps1 v------
if($host.version.major -gt 2){
16:05:52: INFO: Processing (24/123):C:\sc\verb-IO\Public\ConvertFrom-UncPath.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:53:(Add-ContentFixEncoding:)
VERBOSE: 16:05:53:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertFrom-UncPath.ps1 v------
Function ConvertFrom-UncPath {
16:05:54: INFO: Processing (25/123):C:\sc\verb-IO\Public\convert-HelpToMarkdown.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:54:(Add-ContentFixEncoding:)
VERBOSE: 16:05:54:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-HelpToMarkdown.ps1 v------
Function convert-HelpToMarkdown {
16:05:55: INFO: Processing (26/123):C:\sc\verb-IO\Public\ConvertTo-HashIndexed.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:55:(Add-ContentFixEncoding:)
VERBOSE: 16:05:55:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertTo-HashIndexed.ps1 v------
Function ConvertTo-HashIndexed {
16:05:56: INFO: Processing (27/123):C:\sc\verb-IO\Public\convertto-MarkdownTable.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:56:(Add-ContentFixEncoding:)
VERBOSE: 16:05:56:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v convertto-MarkdownTable.ps1 v------
Function convertTo-MarkdownTable {
16:05:57: INFO: Processing (28/123):C:\sc\verb-IO\Public\convertTo-Object.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:57:(Add-ContentFixEncoding:)
VERBOSE: 16:05:57:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v convertTo-Object.ps1 v------
Function convertTo-Object {
16:05:57: INFO: Processing (29/123):C:\sc\verb-IO\Public\ConvertTo-SRT.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:57:(Add-ContentFixEncoding:)
VERBOSE: 16:05:57:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertTo-SRT.ps1 v------
function ConvertTo-SRT {
16:05:57: INFO: Processing (30/123):C:\sc\verb-IO\Public\ConvertTo-UncPath.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:57:(Add-ContentFixEncoding:)
VERBOSE: 16:05:57:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertTo-UncPath.ps1 v------
Function ConvertTo-UncPath {
16:05:58: INFO: Processing (31/123):C:\sc\verb-IO\Public\convert-VideoToMp3.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:58:(Add-ContentFixEncoding:)
VERBOSE: 16:05:58:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-VideoToMp3.ps1 v------
function convert-VideoToMp3 {
16:05:59: INFO: Processing (32/123):C:\sc\verb-IO\Public\copy-Profile.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:05:59:(Add-ContentFixEncoding:)
VERBOSE: 16:05:59:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v copy-Profile.ps1 v------
function copy-Profile {
16:06:00: INFO: Processing (33/123):C:\sc\verb-IO\Public\count-object.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:00:(Add-ContentFixEncoding:)
VERBOSE: 16:06:00:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v count-object.ps1 v------
function Count-Object {
16:06:00: INFO: Processing (34/123):C:\sc\verb-IO\Public\Create-ScheduledTaskLegacy.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:00:(Add-ContentFixEncoding:)
VERBOSE: 16:06:00:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Create-ScheduledTaskLegacy.ps1 v------
Function Create-ScheduledTaskLegacy {
16:06:00: INFO: Processing (35/123):C:\sc\verb-IO\Public\dump-Shortcuts.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:00:(Add-ContentFixEncoding:)
VERBOSE: 16:06:00:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v dump-Shortcuts.ps1 v------
function dump-Shortcuts {
16:06:00: INFO: Processing (36/123):C:\sc\verb-IO\Public\Echo-Finish.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:00:(Add-ContentFixEncoding:)
VERBOSE: 16:06:00:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Echo-Finish.ps1 v------
Function Echo-Finish {
16:06:00: INFO: Processing (37/123):C:\sc\verb-IO\Public\Echo-ScriptEnd.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:00:(Add-ContentFixEncoding:)
VERBOSE: 16:06:00:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Echo-ScriptEnd.ps1 v------
Function Echo-ScriptEnd {
16:06:00: INFO: Processing (38/123):C:\sc\verb-IO\Public\Echo-Start.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:00:(Add-ContentFixEncoding:)
VERBOSE: 16:06:00:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Echo-Start.ps1 v------
Function Echo-Start {
16:06:01: INFO: Processing (39/123):C:\sc\verb-IO\Public\Expand-ArchiveFile.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:01:(Add-ContentFixEncoding:)
VERBOSE: 16:06:01:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Expand-ArchiveFile.ps1 v------
function Expand-ArchiveFile {
16:06:01: INFO: Processing (40/123):C:\sc\verb-IO\Public\extract-Icon.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:01:(Add-ContentFixEncoding:)
VERBOSE: 16:06:01:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v extract-Icon.ps1 v------
Function extract-Icon {
16:06:01: INFO: Processing (41/123):C:\sc\verb-IO\Public\Find-LockedFileProcess.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:01:(Add-ContentFixEncoding:)
VERBOSE: 16:06:01:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Find-LockedFileProcess.ps1 v------
function Find-LockedFileProcess {
16:06:01: INFO: Processing (42/123):C:\sc\verb-IO\Public\Format-Json.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:01:(Add-ContentFixEncoding:)
VERBOSE: 16:06:01:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Format-Json.ps1 v------
function Format-Json {
16:06:02: INFO: Processing (43/123):C:\sc\verb-IO\Public\get-AliasDefinition.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:02:(Add-ContentFixEncoding:)
VERBOSE: 16:06:02:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v get-AliasDefinition.ps1 v------
Function get-AliasDefinition {
16:06:02: INFO: Processing (44/123):C:\sc\verb-IO\Public\Get-AverageItems.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:02:(Add-ContentFixEncoding:)
VERBOSE: 16:06:02:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-AverageItems.ps1 v------
function Get-AverageItems {
16:06:02: INFO: Processing (45/123):C:\sc\verb-IO\Public\get-colorcombo.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:02:(Add-ContentFixEncoding:)
VERBOSE: 16:06:02:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v get-colorcombo.ps1 v------
function get-colorcombo {
16:06:02: INFO: Processing (46/123):C:\sc\verb-IO\Public\get-ConsoleText.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:02:(Add-ContentFixEncoding:)
VERBOSE: 16:06:02:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v get-ConsoleText.ps1 v------
Function get-ConsoleText {
16:06:02: INFO: Processing (47/123):C:\sc\verb-IO\Public\Get-CountItems.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:02:(Add-ContentFixEncoding:)
VERBOSE: 16:06:02:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-CountItems.ps1 v------
function Get-CountItems {
16:06:02: INFO: Processing (48/123):C:\sc\verb-IO\Public\Get-FileEncoding.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:02:(Add-ContentFixEncoding:)
VERBOSE: 16:06:02:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-FileEncoding.ps1 v------
function Get-FileEncoding {
16:06:03: INFO: Processing (49/123):C:\sc\verb-IO\Public\Get-FileEncodingExtended.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:03:(Add-ContentFixEncoding:)
VERBOSE: 16:06:03:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-FileEncodingExtended.ps1 v------
function Get-FileEncodingExtended {
16:06:03: INFO: Processing (50/123):C:\sc\verb-IO\Public\Get-FolderSize.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:03:(Add-ContentFixEncoding:)
VERBOSE: 16:06:03:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-FolderSize.ps1 v------
function Get-FolderSize {
16:06:03: INFO: Processing (51/123):C:\sc\verb-IO\Public\Get-FolderSize2.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:03:(Add-ContentFixEncoding:)
VERBOSE: 16:06:03:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-FolderSize2.ps1 v------
Function Get-FolderSize2 {
16:06:04: INFO: Processing (52/123):C:\sc\verb-IO\Public\Get-FsoShortName.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:04:(Add-ContentFixEncoding:)
VERBOSE: 16:06:04:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-FsoShortName.ps1 v------
Function Get-FsoShortName {
16:06:05: INFO: Processing (53/123):C:\sc\verb-IO\Public\Get-FsoShortPath.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:05:(Add-ContentFixEncoding:)
VERBOSE: 16:06:05:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-FsoShortPath.ps1 v------
Function Get-FsoShortPath {
16:06:05: INFO: Processing (54/123):C:\sc\verb-IO\Public\Get-FsoTypeObj.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:05:(Add-ContentFixEncoding:)
VERBOSE: 16:06:05:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-FsoTypeObj.ps1 v------
Function Get-FsoTypeObj {
16:06:06: INFO: Processing (55/123):C:\sc\verb-IO\Public\get-InstalledApplication.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:06:(Add-ContentFixEncoding:)
VERBOSE: 16:06:06:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v get-InstalledApplication.ps1 v------
Function get-InstalledApplication {
16:06:06: INFO: Processing (56/123):C:\sc\verb-IO\Public\get-LoremName.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:06:(Add-ContentFixEncoding:)
VERBOSE: 16:06:06:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v get-LoremName.ps1 v------
function get-LoremName {
16:06:06: INFO: Processing (57/123):C:\sc\verb-IO\Public\Get-ProductItems.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:06:(Add-ContentFixEncoding:)
VERBOSE: 16:06:06:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-ProductItems.ps1 v------
function Get-ProductItems {
16:06:06: INFO: Processing (58/123):C:\sc\verb-IO\Public\get-RegistryProperty.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:06:(Add-ContentFixEncoding:)
VERBOSE: 16:06:06:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v get-RegistryProperty.ps1 v------
function get-RegistryProperty {
16:06:07: INFO: Processing (59/123):C:\sc\verb-IO\Public\Get-ScheduledTaskLegacy.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:07:(Add-ContentFixEncoding:)
VERBOSE: 16:06:07:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-ScheduledTaskLegacy.ps1 v------
Function Get-ScheduledTaskLegacy {
16:06:07: INFO: Processing (60/123):C:\sc\verb-IO\Public\Get-Shortcut.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:07:(Add-ContentFixEncoding:)
VERBOSE: 16:06:07:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-Shortcut.ps1 v------
function Get-Shortcut {
16:06:07: INFO: Processing (61/123):C:\sc\verb-IO\Public\Get-SumItems.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:07:(Add-ContentFixEncoding:)
VERBOSE: 16:06:07:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-SumItems.ps1 v------
function Get-SumItems {
16:06:07: INFO: Processing (62/123):C:\sc\verb-IO\Public\get-TaskReport.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:07:(Add-ContentFixEncoding:)
VERBOSE: 16:06:07:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v get-TaskReport.ps1 v------
function get-TaskReport {
16:06:08: INFO: Processing (63/123):C:\sc\verb-IO\Public\Get-Time.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:08:(Add-ContentFixEncoding:)
VERBOSE: 16:06:08:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-Time.ps1 v------
function Get-Time {
16:06:08: INFO: Processing (64/123):C:\sc\verb-IO\Public\Get-TimeStamp.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:08:(Add-ContentFixEncoding:)
VERBOSE: 16:06:08:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-TimeStamp.ps1 v------
function Get-TimeStamp {
16:06:08: INFO: Processing (65/123):C:\sc\verb-IO\Public\get-TimeStampNow.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:08:(Add-ContentFixEncoding:)
VERBOSE: 16:06:08:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v get-TimeStampNow.ps1 v------
Function get-TimeStampNow () {
16:06:08: INFO: Processing (66/123):C:\sc\verb-IO\Public\get-Uptime.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:08:(Add-ContentFixEncoding:)
VERBOSE: 16:06:08:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v get-Uptime.ps1 v------
function get-Uptime {
16:06:08: INFO: Processing (67/123):C:\sc\verb-IO\Public\Invoke-Flasher.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:08:(Add-ContentFixEncoding:)
VERBOSE: 16:06:08:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Invoke-Flasher.ps1 v------
Function Invoke-Flasher {
16:06:09: INFO: Processing (68/123):C:\sc\verb-IO\Public\Invoke-Pause.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:09:(Add-ContentFixEncoding:)
VERBOSE: 16:06:09:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Invoke-Pause.ps1 v------
Function Invoke-Pause() {
16:06:09: INFO: Processing (69/123):C:\sc\verb-IO\Public\Invoke-Pause2.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:09:(Add-ContentFixEncoding:)
VERBOSE: 16:06:09:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Invoke-Pause2.ps1 v------
Function Invoke-Pause2() {
16:06:09: INFO: Processing (70/123):C:\sc\verb-IO\Public\invoke-SoundCue.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:09:(Add-ContentFixEncoding:)
VERBOSE: 16:06:09:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v invoke-SoundCue.ps1 v------
function invoke-SoundCue{
16:06:09: INFO: Processing (71/123):C:\sc\verb-IO\Public\mount-UnavailableMappedDrives.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:09:(Add-ContentFixEncoding:)
VERBOSE: 16:06:10:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v mount-UnavailableMappedDrives.ps1 v------
Function mount-UnavailableMappedDrives{
16:06:12: INFO: Processing (72/123):C:\sc\verb-IO\Public\move-FileOnReboot.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:12:(Add-ContentFixEncoding:)
VERBOSE: 16:06:12:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v move-FileOnReboot.ps1 v------
function move-FileOnReboot {
16:06:12: INFO: Processing (73/123):C:\sc\verb-IO\Public\New-RandomFilename.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:13:(Add-ContentFixEncoding:)
VERBOSE: 16:06:13:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v New-RandomFilename.ps1 v------
function New-RandomFilename{
16:06:13: INFO: Processing (74/123):C:\sc\verb-IO\Public\new-Shortcut.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:13:(Add-ContentFixEncoding:)
VERBOSE: 16:06:13:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v new-Shortcut.ps1 v------
function new-Shortcut {
16:06:14: INFO: Processing (75/123):C:\sc\verb-IO\Public\out-Clipboard.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:14:(Add-ContentFixEncoding:)
VERBOSE: 16:06:14:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v out-Clipboard.ps1 v------
Function out-Clipboard {
16:06:14: INFO: Processing (76/123):C:\sc\verb-IO\Public\Out-Excel.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:14:(Add-ContentFixEncoding:)
VERBOSE: 16:06:14:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Out-Excel.ps1 v------
function Out-Excel {
16:06:14: INFO: Processing (77/123):C:\sc\verb-IO\Public\Out-Excel-Events.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:14:(Add-ContentFixEncoding:)
VERBOSE: 16:06:14:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Out-Excel-Events.ps1 v------
function Out-Excel-Events {
16:06:14: INFO: Processing (78/123):C:\sc\verb-IO\Public\parse-PSTitleBar.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:14:(Add-ContentFixEncoding:)
VERBOSE: 16:06:14:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v parse-PSTitleBar.ps1 v------
Function parse-PSTitleBar {
16:06:15: INFO: Processing (79/123):C:\sc\verb-IO\Public\play-beep.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:15:(Add-ContentFixEncoding:)
VERBOSE: 16:06:15:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v play-beep.ps1 v------
function play-beep {
16:06:15: INFO: Processing (80/123):C:\sc\verb-IO\Public\Pop-LocationFirst.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:15:(Add-ContentFixEncoding:)
VERBOSE: 16:06:15:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Pop-LocationFirst.ps1 v------
function Pop-LocationFirst {
16:06:15: INFO: Processing (81/123):C:\sc\verb-IO\Public\prompt-Continue.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:15:(Add-ContentFixEncoding:)
VERBOSE: 16:06:15:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v prompt-Continue.ps1 v------
Function prompt-Continue {
16:06:15: INFO: Processing (82/123):C:\sc\verb-IO\Public\read-Host2.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:15:(Add-ContentFixEncoding:)
VERBOSE: 16:06:15:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v read-Host2.ps1 v------
Function Read-Host2 {
16:06:15: INFO: Processing (83/123):C:\sc\verb-IO\Public\rebuild-PSTitleBar.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:15:(Add-ContentFixEncoding:)
VERBOSE: 16:06:15:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v rebuild-PSTitleBar.ps1 v------
Function rebuild-PSTitleBar {
16:06:16: INFO: Processing (84/123):C:\sc\verb-IO\Public\Remove-AuthenticodeSignature.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:16:(Add-ContentFixEncoding:)
VERBOSE: 16:06:16:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-AuthenticodeSignature.ps1 v------
function Remove-AuthenticodeSignature {
16:06:17: INFO: Processing (85/123):C:\sc\verb-IO\Public\Remove-InvalidFileNameChars.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:17:(Add-ContentFixEncoding:)
VERBOSE: 16:06:17:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-InvalidFileNameChars.ps1 v------
Function Remove-InvalidFileNameChars {
16:06:17: INFO: Processing (86/123):C:\sc\verb-IO\Public\Remove-InvalidVariableNameChars.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:17:(Add-ContentFixEncoding:)
VERBOSE: 16:06:17:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-InvalidVariableNameChars.ps1 v------
Function Remove-InvalidVariableNameChars {
16:06:17: INFO: Processing (87/123):C:\sc\verb-IO\Public\remove-ItemRetry.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:17:(Add-ContentFixEncoding:)
VERBOSE: 16:06:17:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v remove-ItemRetry.ps1 v------
function remove-ItemRetry {
16:06:17: INFO: Processing (88/123):C:\sc\verb-IO\Public\remove-JsonComments.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:17:(Add-ContentFixEncoding:)
VERBOSE: 16:06:17:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v remove-JsonComments.ps1 v------
Function Remove-JsonComments{
16:06:17: INFO: Processing (89/123):C:\sc\verb-IO\Public\Remove-PSTitleBar.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:17:(Add-ContentFixEncoding:)
VERBOSE: 16:06:17:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-PSTitleBar.ps1 v------
Function Remove-PSTitleBar {
16:06:18: INFO: Processing (90/123):C:\sc\verb-IO\Public\Remove-ScheduledTaskLegacy.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:18:(Add-ContentFixEncoding:)
VERBOSE: 16:06:18:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-ScheduledTaskLegacy.ps1 v------
Function Remove-ScheduledTaskLegacy {
16:06:18: INFO: Processing (91/123):C:\sc\verb-IO\Public\remove-UnneededFileVariants.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:18:(Add-ContentFixEncoding:)
VERBOSE: 16:06:18:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v remove-UnneededFileVariants.ps1 v------
function remove-UnneededFileVariants {
16:06:19: INFO: Processing (92/123):C:\sc\verb-IO\Public\replace-PSTitleBarText.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:19:(Add-ContentFixEncoding:)
VERBOSE: 16:06:19:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v replace-PSTitleBarText.ps1 v------
Function replace-PSTitleBarText {
16:06:19: INFO: Processing (93/123):C:\sc\verb-IO\Public\reset-ConsoleColors.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:19:(Add-ContentFixEncoding:)
VERBOSE: 16:06:19:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v reset-ConsoleColors.ps1 v------
Function reset-ConsoleColors {
16:06:19: INFO: Processing (94/123):C:\sc\verb-IO\Public\restore-FileTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:19:(Add-ContentFixEncoding:)
VERBOSE: 16:06:19:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v restore-FileTDO.ps1 v------
function restore-FileTDO {
16:06:20: INFO: Processing (95/123):C:\sc\verb-IO\Public\Run-ScheduledTaskLegacy.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:20:(Add-ContentFixEncoding:)
VERBOSE: 16:06:20:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Run-ScheduledTaskLegacy.ps1 v------
Function Run-ScheduledTaskLegacy {
16:06:20: INFO: Processing (96/123):C:\sc\verb-IO\Public\Save-ConsoleOutputToClipBoard.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:20:(Add-ContentFixEncoding:)
VERBOSE: 16:06:20:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Save-ConsoleOutputToClipBoard.ps1 v------
function Save-ConsoleOutputToClipBoard {
16:06:20: INFO: Processing (97/123):C:\sc\verb-IO\Public\select-first.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:20:(Add-ContentFixEncoding:)
VERBOSE: 16:06:20:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v select-first.ps1 v------
function select-first {
16:06:20: INFO: Processing (98/123):C:\sc\verb-IO\Public\select-last.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:20:(Add-ContentFixEncoding:)
VERBOSE: 16:06:20:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v select-last.ps1 v------
function Select-last {
16:06:20: INFO: Processing (99/123):C:\sc\verb-IO\Public\Select-StringAll.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:20:(Add-ContentFixEncoding:)
VERBOSE: 16:06:20:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Select-StringAll.ps1 v------
Function Select-StringAll {
16:06:20: INFO: Processing (100/123):C:\sc\verb-IO\Public\set-ConsoleColors.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:20:(Add-ContentFixEncoding:)
VERBOSE: 16:06:21:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v set-ConsoleColors.ps1 v------
Function set-ConsoleColors {
16:06:21: INFO: Processing (101/123):C:\sc\verb-IO\Public\Set-ContentFixEncoding.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:21:(Add-ContentFixEncoding:)
VERBOSE: 16:06:21:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Set-ContentFixEncoding.ps1 v------
function Set-ContentFixEncoding {
16:06:21: INFO: Processing (102/123):C:\sc\verb-IO\Public\set-ItemReadOnlyTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:21:(Add-ContentFixEncoding:)
VERBOSE: 16:06:21:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v set-ItemReadOnlyTDO.ps1 v------
function set-ItemReadOnlyTDO {
16:06:22: INFO: Processing (103/123):C:\sc\verb-IO\Public\set-PSTitleBar.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:22:(Add-ContentFixEncoding:)
VERBOSE: 16:06:22:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v set-PSTitleBar.ps1 v------
Function set-PSTitleBar {
16:06:22: INFO: Processing (104/123):C:\sc\verb-IO\Public\Set-Shortcut.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:22:(Add-ContentFixEncoding:)
VERBOSE: 16:06:22:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Set-Shortcut.ps1 v------
function Set-Shortcut {
16:06:23: INFO: Processing (105/123):C:\sc\verb-IO\Public\Shorten-Path.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:23:(Add-ContentFixEncoding:)
VERBOSE: 16:06:23:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Shorten-Path.ps1 v------
function Shorten-Path([string] $path) {
16:06:23: INFO: Processing (106/123):C:\sc\verb-IO\Public\Show-MsgBox.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:24:(Add-ContentFixEncoding:)
VERBOSE: 16:06:24:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Show-MsgBox.ps1 v------
function Show-MsgBox {
16:06:24: INFO: Processing (107/123):C:\sc\verb-IO\Public\Sign-File.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:24:(Add-ContentFixEncoding:)
VERBOSE: 16:06:24:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Sign-File.ps1 v------
function Sign-File {
16:06:25: INFO: Processing (108/123):C:\sc\verb-IO\Public\stop-driveburn.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:25:(Add-ContentFixEncoding:)
VERBOSE: 16:06:25:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v stop-driveburn.ps1 v------
Function stop-driveburn {
16:06:25: INFO: Processing (109/123):C:\sc\verb-IO\Public\test-FileSysAutomaticVariables.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:25:(Add-ContentFixEncoding:)
VERBOSE: 16:06:25:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v test-FileSysAutomaticVariables.ps1 v------
function test-FileSysAutomaticVariables {
16:06:26: INFO: Processing (110/123):C:\sc\verb-IO\Public\test-IsUncPath.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:26:(Add-ContentFixEncoding:)
VERBOSE: 16:06:26:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v test-IsUncPath.ps1 v------
function test-IsUncPath {
16:06:26: INFO: Processing (111/123):C:\sc\verb-IO\Public\test-LineEndings.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:26:(Add-ContentFixEncoding:)
VERBOSE: 16:06:26:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v test-LineEndings.ps1 v------
function test-LineEndings {
16:06:27: INFO: Processing (112/123):C:\sc\verb-IO\Public\test-MediaFile.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:27:(Add-ContentFixEncoding:)
VERBOSE: 16:06:27:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v test-MediaFile.ps1 v------
Function test-MediaFile {
16:06:32: INFO: Processing (113/123):C:\sc\verb-IO\Public\test-MissingMediaSummary.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:32:(Add-ContentFixEncoding:)
VERBOSE: 16:06:32:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v test-MissingMediaSummary.ps1 v------
Function test-MissingMediaSummary {
16:06:33: INFO: Processing (114/123):C:\sc\verb-IO\Public\Test-PendingReboot.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:33:(Add-ContentFixEncoding:)
VERBOSE: 16:06:33:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Test-PendingReboot.ps1 v------
function Test-PendingReboot {
16:06:34: INFO: Processing (115/123):C:\sc\verb-IO\Public\test-PSTitleBar.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:34:(Add-ContentFixEncoding:)
VERBOSE: 16:06:34:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v test-PSTitleBar.ps1 v------
Function test-PSTitleBar {
16:06:35: INFO: Processing (116/123):C:\sc\verb-IO\Public\Test-RegistryKey.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:35:(Add-ContentFixEncoding:)
VERBOSE: 16:06:35:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Test-RegistryKey.ps1 v------
function Test-RegistryKey {
16:06:35: INFO: Processing (117/123):C:\sc\verb-IO\Public\Test-RegistryValue.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:35:(Add-ContentFixEncoding:)
VERBOSE: 16:06:35:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Test-RegistryValue.ps1 v------
function Test-RegistryValue {
16:06:35: INFO: Processing (118/123):C:\sc\verb-IO\Public\Test-RegistryValueNotNull.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:35:(Add-ContentFixEncoding:)
VERBOSE: 16:06:35:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Test-RegistryValueNotNull.ps1 v------
function Test-RegistryValueNotNull {
16:06:36: INFO: Processing (119/123):C:\sc\verb-IO\Public\Touch-File.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:36:(Add-ContentFixEncoding:)
VERBOSE: 16:06:36:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Touch-File.ps1 v------
Function Touch-File {
16:06:36: INFO: Processing (120/123):C:\sc\verb-IO\Public\trim-FileList.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:36:(Add-ContentFixEncoding:)
VERBOSE: 16:06:36:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v trim-FileList.ps1 v------
function trim-FileList {
16:06:36: INFO: Processing (121/123):C:\sc\verb-IO\Public\unless.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:37:(Add-ContentFixEncoding:)
VERBOSE: 16:06:37:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v unless.ps1 v------
function unless {
16:06:37: INFO: Processing (122/123):C:\sc\verb-IO\Public\update-RegistryProperty.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:37:(Add-ContentFixEncoding:)
VERBOSE: 16:06:37:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v update-RegistryProperty.ps1 v------
function update-RegistryProperty {
16:06:37: INFO: Processing (123/123):C:\sc\verb-IO\Public\Write-ProgressHelper.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:37:(Add-ContentFixEncoding:)
VERBOSE: 16:06:37:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*------v Write-ProgressHelper.ps1 v------
function Write-ProgressHelper {
16:06:37: INFO: 
#*------^ (1/2):C:\sc\verb-IO\Public ^------
16:06:37: INFO: 
#*------v (2/2):C:\sc\verb-IO\Internal v------
16:06:37: INFO: Processing 0 $ComponentScripts files through Remove-AuthenticodeSignature...
16:06:37: INFO: Remove-AuthenticodeSignature w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                                                                                                                                       
whatif                         False                                                                                                       
verbose                        True
16:06:37: INFO: 
#*------^ (2/2):C:\sc\verb-IO\Internal ^------
VERBOSE: (no Public\_CommonCode.ps1)
16:06:37: INFO: (Updating Psm1 Export-ModuleMember -Function to reflect Public modules)
16:06:38: INFO: Adding:FooterBlock...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}                                                                                          
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    ...
VERBOSE: 16:06:38:(Add-ContentFixEncoding:)
VERBOSE: 16:06:38:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
encoding                       UTF8                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
PassThru                       True                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#*======^ END FUNCTIONS ^======
Export-ModuleMember -Function Add-ContentFixEncoding,Add-PSTitleBar,Authenticate-File,backup-FileTDO,check-FileLock,Close-IfAlreadyRunning,ColorMatch,Compare-ObjectsSideBySide,Compare-ObjectsSideBySide3,Compare-ObjectsSideBySide4,Compress-ArchiveFile,convert-BinaryToDecimalStorageUnits,convert-ColorHexCodeToWindowsMediaColorsName,convert-DehydratedBytesToGB,convert-DehydratedBytesToMB,Convert-FileEncoding,ConvertFrom-CanonicalOU,ConvertFrom-CanonicalUser,ConvertFrom-CmdList,ConvertFrom-DN,ConvertFrom-IniFile,convertFrom-MarkdownTable,ConvertFrom-SourceTable,Null,True,False,_debug-Column,_mask,_slice,_typeName,_errorRecord,ConvertFrom-UncPath,convert-HelpToMarkdown,_encodePartOfHtml,_getCode,_getRemark,ConvertTo-HashIndexed,convertTo-MarkdownTable,convertTo-Object,ConvertTo-SRT,ConvertTo-UncPath,convert-VideoToMp3,copy-Profile,Count-Object,Create-ScheduledTaskLegacy,dump-Shortcuts,Echo-Finish,Echo-ScriptEnd,Echo-Start,Expand-ArchiveFile,extract-Icon,Find-LockedFileProcess,Format-Json,get-AliasDefinition,Get-AverageItems,get-colorcombo,get-ConsoleText,Get-CountItems,Get-FileEncoding,Get-FileEncodingExtended,Get-FolderSize,Convert-FileSize,Get-FolderSize2,Get-FsoShortName,Get-FsoShortPath,Get-FsoTypeObj,get-InstalledApplication,get-LoremName,Get-ProductItems,get-RegistryProperty,Get-ScheduledTaskLegacy,Get-Shortcut,Get-SumItems,get-TaskReport,Get-Time,Get-TimeStamp,get-TimeStampNow,get-Uptime,Invoke-Flasher,Invoke-Pause,Invoke-Pause2,invoke-SoundCue,mount-UnavailableMappedDrives,move-FileOnReboot,New-RandomFilename,new-Shortcut,out-Clipboard,Out-Excel,Out-Excel-Events,parse-PSTitleBar,play-beep,Pop-LocationFirst,prompt-Continue,Read-Host2,rebuild-PSTitleBar,Remove-AuthenticodeSignature,Remove-InvalidFileNameChars,Remove-InvalidVariableNameChars,remove-ItemRetry,Remove-JsonComments,Remove-PSTitleBar,Remove-ScheduledTaskLegacy,remove-UnneededFileVariants,replace-PSTitleBarText,reset-ConsoleColors,restore-FileTDO,Run-ScheduledTaskLegacy,Save-ConsoleOutputToClipBoard,select-first,Select-last,Select-StringAll,set-ConsoleColors,Set-ContentFixEncoding,set-ItemReadOnlyTDO,set-PSTitleBar,Set-Shortcut,Shorten-Path,Show-MsgBox,Sign-File,stop-driveburn,test-FileSysAutomaticVariables,test-IsUncPath,test-LineEndings,test-MediaFile,test-MissingMediaSummary,Test-PendingReboot,Test-RegistryKey,Test-RegistryValue,Test-RegistryValueNotNull,test-PSTitleBar,Test-RegistryKey,Test-RegistryValue,Test-RegistryValueNotNull,Touch-File,trim-FileList,unless,update-RegistryProperty,Write-ProgressHelper -Alias *
16:06:38: INFO: Updating the Psd1 FunctionsToExport to match
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP                                                                                            
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    {#...
VERBOSE: 16:06:38:(Set-ContentFixEncoding:c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP)
VERBOSE: 16:06:38:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
PassThru                       True                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP                                                                      
whatif                         False                                                                                                       
encoding                       UTF8                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#
# Module manifest for module 'verb-IO'
16:06:38: INFO: confirm-ModuleBuildSync w
Name                           Value                                                                                                       
----                           -----                                                                                                       
ModPsdPath                     c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP                                                                      
RequiredVersion                4.0.0                                                                                                       
NoTest                         True                                                                                                        
whatif                         False                                                                                                       
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                   
---             -----                                   
ModPsdPath      {c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP}
RequiredVersion 4.0.0                                   
NoTest          True                                    
whatIf          False                                   
Verbose         True
16:06:38: INFO: #*======v confirm-ModuleBuildSync:  v======
VERBOSE: (non-pipeline - param - input)
16:06:39: INFO: (test-path confirms $ModPsm1 & $ModTestPs1)
16:06:39: INFO: Import-PowerShellDataFile w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP                                                                      
ErrorAction                    Stop                                                                                                        
verbose                        True
16:06:39: INFO: (resolved Module attributes:
$ModuleName:	verb-IO
$ModRoot:	c:\sc\verb-IO
$ModPsd1:	c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP
$ModPsm1:	c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP
$ModTestPs1:	c:\sc\verb-IO\Tests\verb-IO.tests.ps1
$psd1Vers:	3.1.0
$psd1guid:	12cb1eb4-ac9c-405e-8711-e80c914a9b32)
16:06:39: INFO: confirm-ModulePsd1Version w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP                                                                      
RequiredVersion                4.0.0                                                                                                       
whatif                         False                                                                                                       
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                   
---             -----                                   
Path            {c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP}
RequiredVersion 4.0.0                                   
whatIf          False                                   
Verbose         True
16:06:39: INFO: #*======v confirm-ModulePsd1Version: c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP v======
VERBOSE: (non-pipeline - param - input)
16:06:39: WARNING: In:c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP
Version present:(3.1.0)
*does not* properly match:4.0.0
FORCING MATCHING UPDATE!
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP                                                                                            
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    {#...
VERBOSE: 16:06:40:(Set-ContentFixEncoding:c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP)
VERBOSE: 16:06:40:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
PassThru                       True                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP                                                                      
whatif                         False                                                                                                       
encoding                       UTF8                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
#
# Module manifest for module 'verb-IO'
16:06:40: INFO: $objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Version                        4.0.0                                                                                                       
Valid                          False
16:06:40: INFO: (SET:$objReport.Valid = $true ;)
16:06:40: INFO: (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Version                        4.0.0                                                                                                       
Valid                          True
16:06:40: INFO: #*======^ confirm-ModulePsd1Version: c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP ^======
16:06:40: INFO: (confirm-ModulePsd1Version:Success)
16:06:40: INFO: confirm-ModulePsm1Version w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
RequiredVersion                4.0.0                                                                                                       
whatif                         False                                                                                                       
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                   
---             -----                                   
Path            {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}
RequiredVersion 4.0.0                                   
whatIf          False                                   
Verbose         True
16:06:40: INFO: #*======v confirm-ModulePsm1Version: c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP v======
VERBOSE: (non-pipeline - param - input)
16:06:40: WARNING: In:c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP
Version present:(3.1.0)
*does not* properly match:4.0.0
FORCING MATCHING UPDATE!
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                                             
---      -----                                                                                                                             
Path     c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                                            
PassThru True                                                                                                                              
Verbose  True                                                                                                                              
whatIf   False                                                                                                                             
Value    {# verb-IO.psm1...
VERBOSE: 16:07:05:(Set-ContentFixEncoding:c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP)
VERBOSE: 16:07:05:Set-Content w
Name                           Value                                                                                                       
----                           -----                                                                                                       
PassThru                       True                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
encoding                       UTF8                                                                                                        
ErrorAction                    STOP
-Value[0,2]:
# verb-IO.psm1
<#
16:07:05: INFO: $objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Version                        4.0.0                                                                                                       
Valid                          False
16:07:05: INFO: (SET:$objReport.Valid = $true ;)
16:07:05: INFO: (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Version                        4.0.0                                                                                                       
Valid                          True
16:07:05: INFO: #*======^ confirm-ModulePsm1Version: c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP ^======
16:07:05: INFO: (confirm-ModulePsm1Version:Success)
16:07:05: INFO: (-NoTest: skipping confirm-ModuleTestPs1Guid)
16:07:05: INFO: $objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Manifest                       c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP                                                                      
Module                         c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
Pester                         (SKIPPED)                                                                                                   
Guid                           (SKIPPED)                                                                                                   
Version                        4.0.0                                                                                                       
Valid                          False
16:07:05: INFO: (SET:$objReport.Valid = $true ;)
16:07:05: INFO: (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Manifest                       c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP                                                                      
Module                         c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
Pester                         (SKIPPED)                                                                                                   
Guid                           (SKIPPED)                                                                                                   
Version                        4.0.0                                                                                                       
Valid                          True
16:07:05: INFO: #*======^ confirm-ModuleBuildSync:  ^======
16:07:05: INFO: (confirm-ModuleBuildSync:Success)
16:07:05: INFO: Test-ModuleTMPFiles w
Name                           Value                                                                                                       
----                           -----                                                                                                       
ModuleNamePSM1Path             c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
verbose                        True
VERBOSE: $PSBoundParameters:
Key                Value                                   
---                -----                                   
ModuleNamePSM1Path {c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP}
Verbose            True
16:07:05: INFO: #*======v Test-ModuleTMPFiles: c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP v======
VERBOSE: (non-pipeline - param - input)
16:07:05: INFO: 
Psm1:c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP
Psd1:c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP
16:07:05: INFO: Creating Testable c:\sc\verb-IO\verb-IO\e2333a49-138c-459a-929a-c4905f849f56.psd1
 to validate c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP will Test-ModuleManifest
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP Destination: C:\sc\verb-IO\verb-IO\e2333a49-138c-459a-929a-c4905f849f56.psd1".
16:07:05: INFO: Test-ModuleManifest w
Name                           Value                                                                                                       
----                           -----                                                                                                       
verbose                        True                                                                                                        
Path                           c:\sc\verb-IO\verb-IO\e2333a49-138c-459a-929a-c4905f849f56.psd1                                             
ErrorVariable                  vManiErr                                                                                                    
ErrorAction                    STOP
VERBOSE: Loading module from path 'C:\sc\verb-IO\verb-IO\verb-IO.psm1'.
16:07:05: INFO: Test-ModuleManifest:PASSED
16:07:05: INFO: Creating Testable c:\sc\verb-IO\verb-IO\e2333a49-138c-459a-929a-c4905f849f56.psm1
 to validate c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP will Import-Module
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP Destination: C:\sc\verb-IO\verb-IO\e2333a49-138c-459a-929a-c4905f849f56.psm1".
16:07:05: INFO: n import-module w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Name                           c:\sc\verb-IO\verb-IO\e2333a49-138c-459a-929a-c4905f849f56.psm1                                             
Force                          True                                                                                                        
verbose                        True                                                                                                        
ErrorAction                    STOP                                                                                                        
ErrorVariable                  vIpMoErr                                                                                                    
PassThru                       True
VERBOSE: Loading module from path 'C:\sc\verb-IO\verb-IO\e2333a49-138c-459a-929a-c4905f849f56.psm1'.
VERBOSE: Importing function 'Add-ContentFixEncoding'.
VERBOSE: Importing function 'Add-PSTitleBar'.
WARNING: The names of some imported commands from the module 'e2333a49-138c-459a-929a-c4905f849f56' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'Authenticate-File' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Authenticate-File'.
VERBOSE: Importing function 'backup-FileTDO'.
VERBOSE: The 'check-FileLock' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'check-FileLock'.
VERBOSE: Importing function 'Close-IfAlreadyRunning'.
VERBOSE: Importing function 'ColorMatch'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide3'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide4'.
VERBOSE: Importing function 'Compress-ArchiveFile'.
VERBOSE: Importing function 'convert-BinaryToDecimalStorageUnits'.
VERBOSE: Importing function 'convert-ColorHexCodeToWindowsMediaColorsName'.
VERBOSE: Importing function 'convert-DehydratedBytesToGB'.
VERBOSE: Importing function 'convert-DehydratedBytesToMB'.
VERBOSE: Importing function 'Convert-FileEncoding'.
VERBOSE: Importing function 'convert-HelpToMarkdown'.
VERBOSE: Importing function 'convert-VideoToMp3'.
VERBOSE: Importing function 'ConvertFrom-CanonicalOU'.
VERBOSE: Importing function 'ConvertFrom-CanonicalUser'.
VERBOSE: Importing function 'ConvertFrom-CmdList'.
VERBOSE: Importing function 'ConvertFrom-DN'.
VERBOSE: Importing function 'ConvertFrom-IniFile'.
VERBOSE: Importing function 'convertFrom-MarkdownTable'.
VERBOSE: Importing function 'ConvertFrom-SourceTable'.
VERBOSE: Importing function 'ConvertFrom-UncPath'.
VERBOSE: Importing function 'ConvertTo-HashIndexed'.
VERBOSE: Importing function 'convertTo-MarkdownTable'.
VERBOSE: Importing function 'convertTo-Object'.
VERBOSE: Importing function 'ConvertTo-SRT'.
VERBOSE: Importing function 'ConvertTo-UncPath'.
VERBOSE: Importing function 'copy-Profile'.
VERBOSE: The 'Count-Object' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Count-Object'.
VERBOSE: The 'Create-ScheduledTaskLegacy' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "New".
VERBOSE: Importing function 'Create-ScheduledTaskLegacy'.
VERBOSE: The 'dump-Shortcuts' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Get".
VERBOSE: Importing function 'dump-Shortcuts'.
VERBOSE: The 'Echo-Finish' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-Finish'.
VERBOSE: The 'Echo-ScriptEnd' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-ScriptEnd'.
VERBOSE: The 'Echo-Start' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-Start'.
VERBOSE: Importing function 'Expand-ArchiveFile'.
VERBOSE: The 'extract-Icon' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Export".
VERBOSE: Importing function 'extract-Icon'.
VERBOSE: Importing function 'Find-LockedFileProcess'.
VERBOSE: Importing function 'Format-Json'.
VERBOSE: Importing function 'get-AliasDefinition'.
VERBOSE: Importing function 'Get-AverageItems'.
VERBOSE: Importing function 'get-colorcombo'.
VERBOSE: Importing function 'get-ConsoleText'.
VERBOSE: Importing function 'Get-CountItems'.
VERBOSE: Importing function 'Get-FileEncoding'.
VERBOSE: Importing function 'Get-FileEncodingExtended'.
VERBOSE: Importing function 'Get-FolderSize'.
VERBOSE: Importing function 'Get-FolderSize2'.
VERBOSE: Importing function 'Get-FsoShortName'.
VERBOSE: Importing function 'Get-FsoShortPath'.
VERBOSE: Importing function 'Get-FsoTypeObj'.
VERBOSE: Importing function 'get-InstalledApplication'.
VERBOSE: Importing function 'get-LoremName'.
VERBOSE: Importing function 'Get-ProductItems'.
VERBOSE: Importing function 'get-RegistryProperty'.
VERBOSE: Importing function 'Get-ScheduledTaskLegacy'.
VERBOSE: Importing function 'Get-Shortcut'.
VERBOSE: Importing function 'Get-SumItems'.
VERBOSE: Importing function 'get-TaskReport'.
VERBOSE: Importing function 'Get-Time'.
VERBOSE: Importing function 'Get-TimeStamp'.
VERBOSE: Importing function 'get-TimeStampNow'.
VERBOSE: Importing function 'get-Uptime'.
VERBOSE: Importing function 'Invoke-Flasher'.
VERBOSE: Importing function 'Invoke-Pause'.
VERBOSE: Importing function 'Invoke-Pause2'.
VERBOSE: Importing function 'invoke-SoundCue'.
VERBOSE: Importing function 'mount-UnavailableMappedDrives'.
VERBOSE: Importing function 'move-FileOnReboot'.
VERBOSE: Importing function 'New-RandomFilename'.
VERBOSE: Importing function 'new-Shortcut'.
VERBOSE: Importing function 'out-Clipboard'.
VERBOSE: Importing function 'Out-Excel'.
WARNING: Some imported command names contain one or more of the following restricted characters: # , ( ) {{ }} [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: The command name 'Out-Excel-Events' from the module 'e2333a49-138c-459a-929a-c4905f849f56' contains one or more of the following restricted characters: # , ( ) { } [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: Importing function 'Out-Excel-Events'.
VERBOSE: The 'parse-PSTitleBar' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'parse-PSTitleBar'.
VERBOSE: The 'play-beep' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'play-beep'.
VERBOSE: Importing function 'Pop-LocationFirst'.
VERBOSE: The 'prompt-Continue' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Read".
VERBOSE: Importing function 'prompt-Continue'.
VERBOSE: Importing function 'Read-Host2'.
VERBOSE: The 'rebuild-PSTitleBar' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Initialize".
VERBOSE: Importing function 'rebuild-PSTitleBar'.
VERBOSE: Importing function 'Remove-AuthenticodeSignature'.
VERBOSE: Importing function 'Remove-InvalidFileNameChars'.
VERBOSE: Importing function 'Remove-InvalidVariableNameChars'.
VERBOSE: Importing function 'remove-ItemRetry'.
VERBOSE: Importing function 'Remove-JsonComments'.
VERBOSE: Importing function 'Remove-PSTitleBar'.
VERBOSE: Importing function 'Remove-ScheduledTaskLegacy'.
VERBOSE: Importing function 'remove-UnneededFileVariants'.
VERBOSE: The 'replace-PSTitleBarText' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'replace-PSTitleBarText'.
VERBOSE: Importing function 'reset-ConsoleColors'.
VERBOSE: Importing function 'restore-FileTDO'.
VERBOSE: The 'Run-ScheduledTaskLegacy' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Invoke,Start".
VERBOSE: Importing function 'Run-ScheduledTaskLegacy'.
VERBOSE: Importing function 'Save-ConsoleOutputToClipBoard'.
VERBOSE: Importing function 'select-first'.
VERBOSE: Importing function 'Select-last'.
VERBOSE: Importing function 'Select-StringAll'.
VERBOSE: Importing function 'set-ConsoleColors'.
VERBOSE: Importing function 'Set-ContentFixEncoding'.
VERBOSE: Importing function 'set-ItemReadOnlyTDO'.
VERBOSE: Importing function 'set-PSTitleBar'.
VERBOSE: Importing function 'Set-Shortcut'.
VERBOSE: The 'Shorten-Path' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Shorten-Path'.
VERBOSE: Importing function 'Show-MsgBox'.
VERBOSE: The 'Sign-File' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Sign-File'.
VERBOSE: Importing function 'stop-driveburn'.
VERBOSE: Importing function 'test-FileSysAutomaticVariables'.
VERBOSE: Importing function 'test-IsUncPath'.
VERBOSE: Importing function 'test-LineEndings'.
VERBOSE: Importing function 'test-MediaFile'.
VERBOSE: Importing function 'test-MissingMediaSummary'.
VERBOSE: Importing function 'Test-PendingReboot'.
VERBOSE: Importing function 'test-PSTitleBar'.
VERBOSE: Importing function 'Test-RegistryKey'.
VERBOSE: Importing function 'Test-RegistryValue'.
VERBOSE: Importing function 'Test-RegistryValueNotNull'.
VERBOSE: The 'Touch-File' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Touch-File'.
VERBOSE: The 'trim-FileList' command in the e2333a49-138c-459a-929a-c4905f849f56' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'trim-FileList'.
VERBOSE: Importing function 'unless'.
VERBOSE: Importing function 'update-RegistryProperty'.
VERBOSE: Importing function 'Write-ProgressHelper'.
VERBOSE: Importing alias 'add-PSTitle'.
VERBOSE: Importing alias 'backup-File'.
VERBOSE: Importing alias 'cfst'.
VERBOSE: Importing alias 'Compress-ZipFile'.
VERBOSE: Importing alias 'convertfrom-mdt'.
VERBOSE: Importing alias 'ConvertTo-CanonicalName'.
VERBOSE: Importing alias 'ConvertTo-DNOU'.
VERBOSE: Importing alias 'ConvertTo-DNUser'.
VERBOSE: Importing alias 'Expand-ZipFile'.
VERBOSE: Importing alias 'gald'.
VERBOSE: Importing alias 'gclr'.
VERBOSE: Importing alias 'get-ScheduledTaskReport'.
VERBOSE: Importing alias 'in-markdowntable'.
VERBOSE: Importing alias 'in-mdt'.
VERBOSE: Importing alias 'invoke-audio'.
VERBOSE: Importing alias 'invoke-sound'.
VERBOSE: Importing alias 'out-markdowntable'.
VERBOSE: Importing alias 'out-mdt'.
VERBOSE: Importing alias 'popd1'.
VERBOSE: Importing alias 'Remove-IllegalFileNameChars'.
VERBOSE: Importing alias 'restore-file'.
VERBOSE: Importing alias 'revert-File'.
VERBOSE: Importing alias 'sdb'.
VERBOSE: Importing alias 'set-ConsColor'.
VERBOSE: Importing alias 'Set-FileContent'.
VERBOSE: Importing alias 'set-PSTitle'.
VERBOSE: Importing alias 'tmf'.
VERBOSE: Importing alias 'touch'.
VERBOSE: Importing alias 'vmf'.
16:07:06: INFO: Ipmo: PASSED
16:07:06: INFO: (remove-module -name c:\sc\verb-IO\verb-IO\e2333a49-138c-459a-929a-c4905f849f56.psm1 -force)
16:07:06: INFO: (remove-item -path c:\sc\verb-IO\verb-IO\e2333a49-138c-459a-929a-c4905f849f56.psm1 -ErrorAction SilentlyContinue ;
16:07:06: INFO: (remove-item -path c:\sc\verb-IO\verb-IO\e2333a49-138c-459a-929a-c4905f849f56.psd1 -ErrorAction SilentlyContinue ;
16:07:06: INFO: $objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Manifest                       e2333a49-138c-459a-929a-c4905f849f56                                                                        
Module                         e2333a49-138c-459a-929a-c4905f849f56                                                                        
Valid                          False
16:07:06: INFO: (SET:$objReport.Valid = $true ;)
16:07:06: INFO: (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Manifest                       e2333a49-138c-459a-929a-c4905f849f56                                                                        
Module                         e2333a49-138c-459a-929a-c4905f849f56                                                                        
Valid                          True
16:07:06: INFO: #*======^ Test-ModuleTMPFiles: c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP ^======
16:07:06: INFO: Processing error free: Overwriting temp .psm1 with temp copy
copy-item w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Destination                    c:\sc\verb-IO\verb-IO\verb-IO.psm1                                                                          
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psm1_TMP                                                                      
whatif                         False                                                                                                       
ErrorAction                    STOP
16:07:06: INFO: Processing error free: Overwriting temp .psd1 with temp copy
copy-item w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Destination                    c:\sc\verb-IO\verb-IO\verb-IO.psd1                                                                          
Path                           c:\sc\verb-IO\verb-IO\verb-IO.psd1_TMP                                                                      
whatif                         False                                                                                                       
ErrorAction                    STOP
16:07:06: INFO: #*======^ ConvertTo-ModuleMergedTDO: ^======
VERBOSE: Loading module from path 'C:\sc\verb-IO\verb-IO\verb-IO.psm1'.
16:07:06: INFO: (Test-ModuleManifest:PASSED)
16:07:06: INFO: Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-IO\Tests\verb-IO.tests.ps1
16:07:06: INFO: confirm-ModuleBuildSync w
Name                           Value                                                                                                       
----                           -----                                                                                                       
ModPsdPath                     C:\sc\verb-IO\verb-IO\verb-IO.psd1                                                                          
RequiredVersion                4.0.0                                                                                                       
whatif                         False                                                                                                       
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                               
---             -----                               
ModPsdPath      {C:\sc\verb-IO\verb-IO\verb-IO.psd1}
RequiredVersion 4.0.0                               
whatIf          False                               
Verbose         True
16:07:06: INFO: #*======v confirm-ModuleBuildSync:  v======
VERBOSE: (non-pipeline - param - input)
16:07:06: INFO: (test-path confirms $ModPsm1 & $ModTestPs1)
16:07:06: INFO: Import-PowerShellDataFile w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           C:\sc\verb-IO\verb-IO\verb-IO.psd1                                                                          
ErrorAction                    Stop                                                                                                        
verbose                        True
16:07:06: INFO: (resolved Module attributes:
$ModuleName:	verb-IO
$ModRoot:	c:\sc\verb-IO
$ModPsd1:	C:\sc\verb-IO\verb-IO\verb-IO.psd1
$ModPsm1:	C:\sc\verb-IO\verb-IO\verb-IO.psm1
$ModTestPs1:	c:\sc\verb-IO\Tests\verb-IO.tests.ps1
$psd1Vers:	4.0.0
$psd1guid:	12cb1eb4-ac9c-405e-8711-e80c914a9b32)
16:07:06: INFO: confirm-ModulePsd1Version w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           C:\sc\verb-IO\verb-IO\verb-IO.psd1                                                                          
RequiredVersion                4.0.0                                                                                                       
whatif                         False                                                                                                       
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                               
---             -----                               
Path            {C:\sc\verb-IO\verb-IO\verb-IO.psd1}
RequiredVersion 4.0.0                               
whatIf          False                               
Verbose         True
16:07:06: INFO: #*======v confirm-ModulePsd1Version: C:\sc\verb-IO\verb-IO\verb-IO.psd1 v======
VERBOSE: (non-pipeline - param - input)
16:07:06: INFO: (Version already updated to match)
16:07:06: INFO: $objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Version                        4.0.0                                                                                                       
Valid                          False
16:07:06: INFO: (SET:$objReport.Valid = $true ;)
16:07:06: INFO: (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Version                        4.0.0                                                                                                       
Valid                          True
16:07:06: INFO: #*======^ confirm-ModulePsd1Version: C:\sc\verb-IO\verb-IO\verb-IO.psd1 ^======
16:07:06: INFO: (confirm-ModulePsd1Version:Success)
16:07:06: INFO: confirm-ModulePsm1Version w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           C:\sc\verb-IO\verb-IO\verb-IO.psm1                                                                          
RequiredVersion                4.0.0                                                                                                       
whatif                         False                                                                                                       
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                               
---             -----                               
Path            {C:\sc\verb-IO\verb-IO\verb-IO.psm1}
RequiredVersion 4.0.0                               
whatIf          False                               
Verbose         True
16:07:06: INFO: #*======v confirm-ModulePsm1Version: C:\sc\verb-IO\verb-IO\verb-IO.psm1 v======
VERBOSE: (non-pipeline - param - input)
16:07:06: INFO: (Version already updated to match)
16:07:06: INFO: $objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Version                        4.0.0                                                                                                       
Valid                          False
16:07:06: INFO: (SET:$objReport.Valid = $true ;)
16:07:06: INFO: (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Version                        4.0.0                                                                                                       
Valid                          True
16:07:07: INFO: #*======^ confirm-ModulePsm1Version: C:\sc\verb-IO\verb-IO\verb-IO.psm1 ^======
16:07:07: INFO: (confirm-ModulePsm1Version:Success)
16:07:07: INFO: Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-IO\Tests\verb-IO.tests.ps1
16:07:07: INFO: confirm-ModuleTestPs1Guid w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           c:\sc\verb-IO\Tests\verb-IO.tests.ps1                                                                       
RequiredGuid                   12cb1eb4-ac9c-405e-8711-e80c914a9b32                                                                        
whatif                         False                                                                                                       
verbose                        True
VERBOSE: $PSBoundParameters:
Key          Value                                  
---          -----                                  
Path         {c:\sc\verb-IO\Tests\verb-IO.tests.ps1}
RequiredGuid 12cb1eb4-ac9c-405e-8711-e80c914a9b32   
whatIf       False                                  
Verbose      True
16:07:07: INFO: #*======v confirm-ModuleTestPs1Guid: c:\sc\verb-IO\Tests\verb-IO.tests.ps1 v======
VERBOSE: (non-pipeline - param - input)
16:07:07: INFO: (Guid  already updated to match)
16:07:07: INFO: $objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Guid                           12cb1eb4-ac9c-405e-8711-e80c914a9b32                                                                        
Valid                          False
16:07:07: INFO: (SET:$objReport.Valid = $true ;)
16:07:07: INFO: (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Guid                           12cb1eb4-ac9c-405e-8711-e80c914a9b32                                                                        
Valid                          True
16:07:07: INFO: #*======^ confirm-ModuleTestPs1Guid: c:\sc\verb-IO\Tests\verb-IO.tests.ps1 ^======
16:07:07: INFO: (confirm-ModuleTestPs1Guid:Success)
16:07:07: INFO: $objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Manifest                       C:\sc\verb-IO\verb-IO\verb-IO.psd1                                                                          
Module                         C:\sc\verb-IO\verb-IO\verb-IO.psm1                                                                          
Pester                         c:\sc\verb-IO\Tests\verb-IO.tests.ps1                                                                       
Guid                           12cb1eb4-ac9c-405e-8711-e80c914a9b32                                                                        
Version                        4.0.0                                                                                                       
Valid                          False
16:07:07: INFO: (SET:$objReport.Valid = $true ;)
16:07:07: INFO: (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                                       
----                           -----                                                                                                       
Manifest                       C:\sc\verb-IO\verb-IO\verb-IO.psd1                                                                          
Module                         C:\sc\verb-IO\verb-IO\verb-IO.psm1                                                                          
Pester                         c:\sc\verb-IO\Tests\verb-IO.tests.ps1                                                                       
Guid                           12cb1eb4-ac9c-405e-8711-e80c914a9b32                                                                        
Version                        4.0.0                                                                                                       
Valid                          True
16:07:07: INFO: #*======^ confirm-ModuleBuildSync:  ^======
16:07:07: INFO: (confirm-ModuleBuildSync:Success)
VERBOSE: Get-ChildItem c:\sc\verb-IO\* -recur | where-object {.name -match $rgxGuidModFiles}
16:07:07: INFO: Signing appropriate files...
VERBOSE: (MONOLITH module:collecting non-include sign files)
16:07:07: INFO: Sign-file w
Name                           Value                                                                                                       
----                           -----                                                                                                       
file                           {C:\sc\verb-IO\rebuild-module.ps1, C:\sc\verb-IO\requirements.psd1, C:\sc\verb-IO\Tests\PPoShScriptingSty...
ErrorAction                    Stop                                                                                                        
showdebug                      False                                                                                                       
whatif                         False


    Directory: C:\sc\verb-IO


SignerCertificate                         Status                                           Path
-----------------                         ------                                           ----
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5  Valid                                            rebuild-module.ps1
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5  Valid                                            requirements.psd1


    Directory: C:\sc\verb-IO\Tests


SignerCertificate                         Status                                           Path
-----------------                         ------                                           ----
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5  Valid                                            PPoShScriptingStyle.psd1
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5  Valid                                            ToddomationScriptingStyle-medium.psd1
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5  Valid                                            verb-IO.tests.ps1


    Directory: C:\sc\verb-IO\verb-IO


SignerCertificate                         Status                                           Path
-----------------                         ------                                           ----
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5  Valid                                            verb-IO.psd1
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5  Valid                                            verb-IO.psm1
16:07:08: INFO: Removing existing profile verb-IO content...
16:07:08: INFO: Uninstall-ModuleForce w
Name                           Value                                                                                                       
----                           -----                                                                                                       
ModuleName                     verb-IO                                                                                                     
Verbose                        True                                                                                                        
whatif                         False
VERBOSE: $PSBoundParameters:
Key        Value    
---        -----    
ModuleName {verb-IO}
Verbose    True     
whatIf     False
VERBOSE: (non-pipeline - param - input)
16:07:15: INFO: 
#*------v Uninstall PSGet Mod:verb-IO:v3.1.0 v------
16:07:15: INFO: Uninstall-Script w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Force                          True                                                                                                        
Whatif                         False                                                                                                       
Verbose                        True
VERBOSE: Populating RepositorySourceLocation property for module verb-IO.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\3.1.0\verb-IO.psm1'.
VERBOSE: Performing the operation "Uninstall-Module" on target "Version '3.1.0' of module 'verb-IO'".
VERBOSE: Successfully uninstalled the module 'verb-IO' from module base 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\3.1.0'.
16:08:01: INFO: 
#*------^ Uninstall PSGet Mod:verb-IO:v3.1.0 ^------
16:08:01: INFO: (Processing $env:PSModulePath paths, for surviving locked copies of verb-IO to *manually* purge...)
16:08:01: INFO: Checking: verb-IO below: C:\Users\kadritss\Documents\WindowsPowerShell\Modules...
16:08:01:-GracefulFail specified, using EA:'Continue'
16:08:01:No existing Match:test-path -path C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\*.*
16:08:01: INFO: Checking: verb-IO below: C:\ProgramData\Boxstarter...
16:08:01:-GracefulFail specified, using EA:'Continue'
16:08:01:No existing Match:test-path -path C:\ProgramData\Boxstarter\verb-IO\*.*
16:08:01: INFO: Checking: verb-IO below: C:\Program Files\WindowsPowerShell\Modules...
16:08:01:-GracefulFail specified, using EA:'Continue'
16:08:01:No existing Match:test-path -path C:\Program Files\WindowsPowerShell\Modules\verb-IO\*.*
16:08:01: INFO: Checking: verb-IO below: C:\Windows\system32\WindowsPowerShell\v1.0\Modules...
16:08:01:-GracefulFail specified, using EA:'Continue'
16:08:01:No existing Match:test-path -path C:\Windows\system32\WindowsPowerShell\v1.0\Modules\verb-IO\*.*
16:08:01: INFO: Checking: verb-IO below: C:\Program Files\Microsoft Message Analyzer\PowerShell\...
16:08:01:-GracefulFail specified, using EA:'Continue'
16:08:01:No existing Match:test-path -path C:\Program Files\Microsoft Message Analyzer\PowerShell\verb-IO\*.*
16:08:01: INFO: (no $sRet returned on call)
16:08:01: INFO: Copying module to profile (net of .git & .vscode dirs, and backed up content)...
16:08:03:Creating Remove-Item w 
Name                           Value                                                                                                       
----                           -----                                                                                                       
path                           {C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\fingerprint, C:\Users\kadritss\Documents\W...
whatif                         False
Remove-Item : Cannot remove item C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\fingerprint_20220312: 
You do not have sufficient access rights to perform this operation.
At C:\sc\verb-dev\verb-dev\VERB-dev.psm1:9475 char:13
+             Remove-Item @pltRItm ;
+             ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : PermissionDenied: (C:\Users\kadrit...rprint_20220312:FileInfo) [Remove-Item], IOException
    + FullyQualifiedErrorId : RemoveFileSystemItemUnAuthorizedAccess,Microsoft.PowerShell.Commands.RemoveItemCommand
Remove-Item : Cannot remove item C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\fingerprint_20220312: You do not have
sufficient access rights to perform this operation.
At C:\sc\verb-dev\verb-dev\VERB-dev.psm1:9475 char:13
+             Remove-Item @pltRItm ;
+             ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : PermissionDenied: (C:\Users\kadrit...rprint_20220312:FileInfo) [Remove-Item], IOException
    + FullyQualifiedErrorId : RemoveFileSystemItemUnAuthorizedAccess,Microsoft.PowerShell.Commands.RemoveItemCommand
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\verb-IO\verb-IO.psm1'.
16:08:04: INFO: (Profiling Repo: get-PSRepository -name lyncRepo...)
16:08:04: INFO: 
Publish-Module w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Name                           verb-IO                                                                                                     
Repository                     lyncRepo                                                                                                    
RequiredVersion                4.0.0                                                                                                       
Verbose                        True                                                                                                        
ErrorAction                    Stop                                                                                                        
whatif                         False
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Publish Location:'\\lynmsv10\lync_fs\scripts\sc'.
VERBOSE: Module 'verb-IO' was found in 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\verb-IO'.
VERBOSE: Loading module from path 'C:\Users\kadritss\AppData\Local\Temp\1356758186\verb-IO\verb-IO.psm1'.
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'lyncRepo'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is '\\lynmsv10\lync_fs\scripts\sc' and PackageManagementProvider is 'NuGet'.
VERBOSE: Total package yield:'0' for the specified package 'verb-IO'.
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'lyncRepo'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is '\\lynmsv10\lync_fs\scripts\sc' and PackageManagementProvider is 'NuGet'.
VERBOSE: Total package yield:'1' for the specified package 'verb-IO'.
VERBOSE: Performing the operation "Publish-Module" on target "Version '4.0.0' of module 'verb-IO'".
VERBOSE: Calling Publish-PSArtifactUtility
VERBOSE: Calling New-NuspecFile
WARNING: Tag list exceeded 4000 characters and may not be accepted by some Nuget feeds.
VERBOSE: Calling New-NugetPackage
VERBOSE: Calling C:\Chocolatey\bin\NuGet.exe pack "C:\Users\kadritss\AppData\Local\Temp\1356758186\verb-IO\verb-IO.nuspec" -outputdirectory "C:\Users\kadritss\AppData\Local\Temp\1356758186\verb-IO" -noninteractive
VERBOSE: C:\Chocolatey\bin\NuGet.exe output:
VERBOSE: 	Attempting to build package from 'verb-IO.nuspec'.
VERBOSE: 	Successfully created package 'C:\Users\kadritss\AppData\Local\Temp\1356758186\verb-IO\verb-IO.4.0.0.nupkg'.
VERBOSE:
VERBOSE: finished running C:\Chocolatey\bin\NuGet.exe with exit code 0
VERBOSE: Created Nuget Package C:\Users\kadritss\AppData\Local\Temp\1356758186\verb-IO\verb-IO.4.0.0.nupkg
VERBOSE: Successfully created nuget package at C:\Users\kadritss\AppData\Local\Temp\1356758186\verb-IO\verb-IO.4.0.0.nupkg
VERBOSE: Calling Publish-NugetPackage -NupkgPath C:\Users\kadritss\AppData\Local\Temp\1356758186\verb-IO\verb-IO.4.0.0.nupkg -Destination \\lynmsv10\lync_fs\scripts\sc -NugetExePath C:\Chocolatey\bin\NuGet.exe -UseDotnetCli:False
VERBOSE: Pushing verb-IO.4.0.0.nupkg to '\\lynmsv10\lync_fs\scripts\sc'...
Your package was pushed.
VERBOSE: Successfully published module 'verb-IO' to the module publish location '\\lynmsv10\lync_fs\scripts\sc'. Please allow few minutes for 'verb-IO' to show up in the search results.
16:08:35: INFO: Waiting for:find-module -name verb-IO -Repository lyncRepo ...
.
16:08:48:-GracefulFail specified, using EA:'Continue'
16:08:49:remove-item w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           {C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\Docs\Quick-Start-Installation-and-Example....
Recurse                        True                                                                                                        
ErrorAction                    Continue                                                                                                    
whatif                         False
16:08:50: INFO: Install-Module w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Name                           verb-IO                                                                                                     
Repository                     lyncRepo                                                                                                    
RequiredVersion                4.0.0                                                                                                       
scope                          CurrentUser                                                                                                 
force                          True                                                                                                        
AllowClobber                   True                                                                                                        
ErrorAction                    Stop                                                                                                        
whatif                         False
16:09:10: INFO: Testing Module:Import-Module w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Name                           verb-IO                                                                                                     
ErrorAction                    Stop                                                                                                        
force                          True                                                                                                        
verbose                        True
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\4.0.0\verb-IO.psd1'.
VERBOSE: Populating RepositorySourceLocation property for module verb-IO.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\4.0.0\verb-IO.psm1'.
VERBOSE: Importing function 'Add-ContentFixEncoding'.
VERBOSE: Importing function 'Add-PSTitleBar'.
WARNING: The names of some imported commands from the module 'verb-IO' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'Authenticate-File' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Authenticate-File'.
VERBOSE: Importing function 'backup-FileTDO'.
VERBOSE: The 'check-FileLock' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'check-FileLock'.
VERBOSE: Importing function 'Close-IfAlreadyRunning'.
VERBOSE: Importing function 'ColorMatch'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide3'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide4'.
VERBOSE: Importing function 'Compress-ArchiveFile'.
VERBOSE: Importing function 'convert-BinaryToDecimalStorageUnits'.
VERBOSE: Importing function 'convert-ColorHexCodeToWindowsMediaColorsName'.
VERBOSE: Importing function 'convert-DehydratedBytesToGB'.
VERBOSE: Importing function 'convert-DehydratedBytesToMB'.
VERBOSE: Importing function 'Convert-FileEncoding'.
VERBOSE: Importing function 'convert-HelpToMarkdown'.
VERBOSE: Importing function 'convert-VideoToMp3'.
VERBOSE: Importing function 'ConvertFrom-CanonicalOU'.
VERBOSE: Importing function 'ConvertFrom-CanonicalUser'.
VERBOSE: Importing function 'ConvertFrom-CmdList'.
VERBOSE: Importing function 'ConvertFrom-DN'.
VERBOSE: Importing function 'ConvertFrom-IniFile'.
VERBOSE: Importing function 'convertFrom-MarkdownTable'.
VERBOSE: Importing function 'ConvertFrom-SourceTable'.
VERBOSE: Importing function 'ConvertFrom-UncPath'.
VERBOSE: Importing function 'ConvertTo-HashIndexed'.
VERBOSE: Importing function 'convertTo-MarkdownTable'.
VERBOSE: Importing function 'convertTo-Object'.
VERBOSE: Importing function 'ConvertTo-SRT'.
VERBOSE: Importing function 'ConvertTo-UncPath'.
VERBOSE: Importing function 'copy-Profile'.
VERBOSE: The 'Count-Object' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Count-Object'.
VERBOSE: The 'Create-ScheduledTaskLegacy' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "New".
VERBOSE: Importing function 'Create-ScheduledTaskLegacy'.
VERBOSE: The 'dump-Shortcuts' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Get".
VERBOSE: Importing function 'dump-Shortcuts'.
VERBOSE: The 'Echo-Finish' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-Finish'.
VERBOSE: The 'Echo-ScriptEnd' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-ScriptEnd'.
VERBOSE: The 'Echo-Start' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-Start'.
VERBOSE: Importing function 'Expand-ArchiveFile'.
VERBOSE: The 'extract-Icon' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Export".
VERBOSE: Importing function 'extract-Icon'.
VERBOSE: Importing function 'Find-LockedFileProcess'.
VERBOSE: Importing function 'Format-Json'.
VERBOSE: Importing function 'get-AliasDefinition'.
VERBOSE: Importing function 'Get-AverageItems'.
VERBOSE: Importing function 'get-colorcombo'.
VERBOSE: Importing function 'get-ConsoleText'.
VERBOSE: Importing function 'Get-CountItems'.
VERBOSE: Importing function 'Get-FileEncoding'.
VERBOSE: Importing function 'Get-FileEncodingExtended'.
VERBOSE: Importing function 'Get-FolderSize'.
VERBOSE: Importing function 'Get-FolderSize2'.
VERBOSE: Importing function 'Get-FsoShortName'.
VERBOSE: Importing function 'Get-FsoShortPath'.
VERBOSE: Importing function 'Get-FsoTypeObj'.
VERBOSE: Importing function 'get-InstalledApplication'.
VERBOSE: Importing function 'get-LoremName'.
VERBOSE: Importing function 'Get-ProductItems'.
VERBOSE: Importing function 'get-RegistryProperty'.
VERBOSE: Importing function 'Get-ScheduledTaskLegacy'.
VERBOSE: Importing function 'Get-Shortcut'.
VERBOSE: Importing function 'Get-SumItems'.
VERBOSE: Importing function 'get-TaskReport'.
VERBOSE: Importing function 'Get-Time'.
VERBOSE: Importing function 'Get-TimeStamp'.
VERBOSE: Importing function 'get-TimeStampNow'.
VERBOSE: Importing function 'get-Uptime'.
VERBOSE: Importing function 'Invoke-Flasher'.
VERBOSE: Importing function 'Invoke-Pause'.
VERBOSE: Importing function 'Invoke-Pause2'.
VERBOSE: Importing function 'invoke-SoundCue'.
VERBOSE: Importing function 'mount-UnavailableMappedDrives'.
VERBOSE: Importing function 'move-FileOnReboot'.
VERBOSE: Importing function 'New-RandomFilename'.
VERBOSE: Importing function 'new-Shortcut'.
VERBOSE: Importing function 'out-Clipboard'.
VERBOSE: Importing function 'Out-Excel'.
WARNING: Some imported command names contain one or more of the following restricted characters: # , ( ) {{ }} [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: The command name 'Out-Excel-Events' from the module 'verb-IO' contains one or more of the following restricted characters: # , ( ) { } [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: Importing function 'Out-Excel-Events'.
VERBOSE: The 'parse-PSTitleBar' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'parse-PSTitleBar'.
VERBOSE: The 'play-beep' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'play-beep'.
VERBOSE: Importing function 'Pop-LocationFirst'.
VERBOSE: The 'prompt-Continue' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Read".
VERBOSE: Importing function 'prompt-Continue'.
VERBOSE: Importing function 'Read-Host2'.
VERBOSE: The 'rebuild-PSTitleBar' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Initialize".
VERBOSE: Importing function 'rebuild-PSTitleBar'.
VERBOSE: Importing function 'Remove-AuthenticodeSignature'.
VERBOSE: Importing function 'Remove-InvalidFileNameChars'.
VERBOSE: Importing function 'Remove-InvalidVariableNameChars'.
VERBOSE: Importing function 'remove-ItemRetry'.
VERBOSE: Importing function 'Remove-JsonComments'.
VERBOSE: Importing function 'Remove-PSTitleBar'.
VERBOSE: Importing function 'Remove-ScheduledTaskLegacy'.
VERBOSE: Importing function 'remove-UnneededFileVariants'.
VERBOSE: The 'replace-PSTitleBarText' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'replace-PSTitleBarText'.
VERBOSE: Importing function 'reset-ConsoleColors'.
VERBOSE: Importing function 'restore-FileTDO'.
VERBOSE: The 'Run-ScheduledTaskLegacy' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Invoke,Start".
VERBOSE: Importing function 'Run-ScheduledTaskLegacy'.
VERBOSE: Importing function 'Save-ConsoleOutputToClipBoard'.
VERBOSE: Importing function 'select-first'.
VERBOSE: Importing function 'Select-last'.
VERBOSE: Importing function 'Select-StringAll'.
VERBOSE: Importing function 'set-ConsoleColors'.
VERBOSE: Importing function 'Set-ContentFixEncoding'.
VERBOSE: Importing function 'set-ItemReadOnlyTDO'.
VERBOSE: Importing function 'set-PSTitleBar'.
VERBOSE: Importing function 'Set-Shortcut'.
VERBOSE: The 'Shorten-Path' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Shorten-Path'.
VERBOSE: Importing function 'Show-MsgBox'.
VERBOSE: The 'Sign-File' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Sign-File'.
VERBOSE: Importing function 'stop-driveburn'.
VERBOSE: Importing function 'test-FileSysAutomaticVariables'.
VERBOSE: Importing function 'test-IsUncPath'.
VERBOSE: Importing function 'test-LineEndings'.
VERBOSE: Importing function 'test-MediaFile'.
VERBOSE: Importing function 'test-MissingMediaSummary'.
VERBOSE: Importing function 'Test-PendingReboot'.
VERBOSE: Importing function 'test-PSTitleBar'.
VERBOSE: Importing function 'Test-RegistryKey'.
VERBOSE: Importing function 'Test-RegistryValue'.
VERBOSE: Importing function 'Test-RegistryValueNotNull'.
VERBOSE: The 'Touch-File' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Touch-File'.
VERBOSE: The 'trim-FileList' command in the verb-IO' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'trim-FileList'.
VERBOSE: Importing function 'unless'.
VERBOSE: Importing function 'update-RegistryProperty'.
VERBOSE: Importing function 'Write-ProgressHelper'.
VERBOSE: Importing alias 'add-PSTitle'.
VERBOSE: Importing alias 'backup-File'.
VERBOSE: Importing alias 'cfst'.
VERBOSE: Importing alias 'Compress-ZipFile'.
VERBOSE: Importing alias 'convertfrom-mdt'.
VERBOSE: Importing alias 'ConvertTo-CanonicalName'.
VERBOSE: Importing alias 'ConvertTo-DNOU'.
VERBOSE: Importing alias 'ConvertTo-DNUser'.
VERBOSE: Importing alias 'Expand-ZipFile'.
VERBOSE: Importing alias 'gald'.
VERBOSE: Importing alias 'gclr'.
VERBOSE: Importing alias 'get-ScheduledTaskReport'.
VERBOSE: Importing alias 'in-markdowntable'.
VERBOSE: Importing alias 'in-mdt'.
VERBOSE: Importing alias 'invoke-audio'.
VERBOSE: Importing alias 'invoke-sound'.
VERBOSE: Importing alias 'out-markdowntable'.
VERBOSE: Importing alias 'out-mdt'.
VERBOSE: Importing alias 'popd1'.
VERBOSE: Importing alias 'Remove-IllegalFileNameChars'.
VERBOSE: Importing alias 'restore-file'.
VERBOSE: Importing alias 'revert-File'.
VERBOSE: Importing alias 'sdb'.
VERBOSE: Importing alias 'set-ConsColor'.
VERBOSE: Importing alias 'Set-FileContent'.
VERBOSE: Importing alias 'set-PSTitle'.
VERBOSE: Importing alias 'tmf'.
VERBOSE: Importing alias 'touch'.
VERBOSE: Importing alias 'vmf'.
16:09:12: INFO: Retrieving matching Repo .nupkg file:
gci \\lynmsv10\lync_fs\scripts\sc\verb-IO.4.0.0.nupkgl..
16:09:12: INFO: Proper updated .nupkg file found:verb-IO.4.0.0.nupkg, copying to local Pkg directory.
16:09:12:Copy-Item w
Name                           Value                                                                                                       
----                           -----                                                                                                       
path                           \\lynmsv10\lync_fs\scripts\sc\verb-IO.4.0.0.nupkg                                                           
destination                    c:\sc\verb-IO\Package                                                                                       
whatif                         False
16:09:13: INFO: remove-UnneededFileVariants w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           c:\sc\verb-IO\Package                                                                                       
Include                        verb-IO*.nupkg                                                                                              
Pattern                                                                                                                                    
FilterOn                       CreationTime                                                                                                
Keep                           2                                                                                                           
KeepToday                      True                                                                                                        
verbose                        True                                                                                                        
whatif                         False
16:09:14:gci w
Name                           Value                                                                                                       
----                           -----                                                                                                       
path                           c:\sc\verb-IO\Package\*                                                                                     
include                        verb-IO*.nupkg                                                                                              
ErrorAction                    Stop
VERBOSE: $cuttime:09/08/2022 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/08/2022 00:00:00 AM, on CreationTime property
(4 in set *before* filtering)
(3 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(3 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
16:09:14:Reducing matched population from 4 to 1 files via:
filtered files on CreationTime prior to 09/08/2022 00:00:00 AM
16:09:14:Remove-Item w 
Name                           Value                                                                                                       
----                           -----                                                                                                       
path                           C:\sc\verb-IO\Package\verb-io.3.0.0.nupkg                                                                   
ErrorAction                    STOP                                                                                                        
whatif                         False
True
16:09:14: INFO: remove-UnneededFileVariants w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           c:\sc\verb-IO\Tests                                                                                         
Include                        ScriptAnalyzer-Results-*.xml                                                                                
Pattern                                                                                                                                    
FilterOn                       CreationTime                                                                                                
Keep                           4                                                                                                           
KeepToday                      True                                                                                                        
verbose                        True                                                                                                        
whatif                         False
16:09:14:gci w
Name                           Value                                                                                                       
----                           -----                                                                                                       
path                           c:\sc\verb-IO\Tests\*                                                                                       
include                        ScriptAnalyzer-Results-*.xml                                                                                
ErrorAction                    Stop
VERBOSE: $cuttime:09/08/2022 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/08/2022 00:00:00 AM, on CreationTime property
(5 in set *before* filtering)
(5 in set *after* filtering)
VERBOSE: attempting to retain remaining 4 generations net of prior filtering
(5 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:4 spec - insufficient older files available)
16:09:14:Reducing matched population from 5 to 1 files via:
filtered files on CreationTime prior to 09/08/2022 00:00:00 AM
16:09:14:Remove-Item w 
Name                           Value                                                                                                       
----                           -----                                                                                                       
path                           C:\sc\verb-IO\Tests\ScriptAnalyzer-Results-20220512-1512PM.xml                                              
ErrorAction                    STOP                                                                                                        
whatif                         False
True
16:09:15: INFO: -RunTest specified: Running Pester Test script:
c:\sc\verb-IO\Tests\verb-IO.tests.ps1
16:09:15:
#*------v RUNNING c:\sc\verb-IO\Tests\verb-IO.tests.ps1: v------
WARNING: The names of some imported commands from the module 'verb-IO' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
WARNING: Some imported command names contain one or more of the following restricted characters: # , ( ) {{ }} [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~

Describing Module Information

  Context Manifest Testing
    [+] Valid Module Manifest
 226ms
    [+] Valid Manifest Name
 102ms
    [+] Generic Version Check
 57ms
    [+] Valid Author
 48ms
    [+] Valid Company Name
 41ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Valid License
 41ms
      Expected a value, but got $null or empty.
      154:             $ModuleInformation.LicenseURI | Should not BeNullOrEmpty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 154
    [+] Valid Manifest Description
 46ms
    [+] Valid Manifest Root Module
 46ms
    [+] Valid Manifest GUID
 58ms
    [+] Required Modules
 30ms

  Context Exported Functions
PS>TerminatingError(): "Expected 124, but got 144."
>> TerminatingError(): "Expected 124, but got 144."
>> TerminatingError(): "Expected 124, but got 144."
    [-] Proper Number of Functions Exported
 1.21s
      Expected 124, but got 144.
      214:             $ExportedCount | Should be $FileCount
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 214
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Exports All Public Functions
 2.43s
      Expected $true, but got $false.
      224:                 $ExFunctions -contains $FunctionName | Should Be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 224
    [+] Compare Missing Functions
 59ms

Describing Help

  Context Function - add-PSTitle
    [+] Synopsis
 543ms
    [+] Description
 363ms
    [+] Examples
 324ms

Describing Help

  Context Function - backup-File
    [+] Synopsis
 173ms
    [+] Description
 185ms
    [+] Examples
 383ms

Describing Help

  Context Function - Compress-ZipFile
    [+] Synopsis
 267ms
    [+] Description
 387ms
    [+] Examples
 207ms

Describing Help

  Context Function - convertfrom-mdt
    [+] Synopsis
 591ms
    [+] Description
 165ms
    [+] Examples
 163ms

Describing Help

  Context Function - ConvertTo-CanonicalName
    [+] Synopsis
 152ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 576ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
    [+] Examples
 174ms

Describing Help

  Context Function - ConvertTo-DNOU
    [+] Synopsis
 222ms
    [+] Description
 1.54s
    [+] Examples
 549ms

Describing Help

  Context Function - ConvertTo-DNUser
    [+] Synopsis
 505ms
    [+] Description
 550ms
    [+] Examples
 553ms

Describing Help

  Context Function - Expand-ZipFile
    [+] Synopsis
 425ms
    [+] Description
 329ms
    [+] Examples
 312ms

Describing Help

  Context Function - get-ScheduledTaskReport
    [+] Synopsis
 339ms
    [+] Description
 500ms
    [+] Examples
 358ms

Describing Help

  Context Function - in-markdowntable
    [+] Synopsis
 226ms
    [+] Description
 160ms
    [+] Examples
 462ms

Describing Help

  Context Function - in-mdt
    [+] Synopsis
 211ms
    [+] Description
 374ms
    [+] Examples
 245ms

Describing Help

  Context Function - invoke-audio
    [+] Synopsis
 345ms
    [+] Description
 235ms
    [+] Examples
 140ms

Describing Help

  Context Function - invoke-sound
    [+] Synopsis
 4.04s
    [+] Description
 343ms
    [+] Examples
 839ms

Describing Help

  Context Function - out-markdowntable
    [+] Synopsis
 429ms
    [+] Description
 282ms
    [+] Examples
 480ms

Describing Help

  Context Function - out-mdt
    [+] Synopsis
 307ms
    [+] Description
 166ms
    [+] Examples
 466ms

Describing Help

  Context Function - Remove-IllegalFileNameChars
    [+] Synopsis
 383ms
    [+] Description
 1.03s
    [+] Examples
 320ms

Describing Help

  Context Function - restore-file
    [+] Synopsis
 334ms
    [+] Description
 449ms
    [+] Examples
 627ms

Describing Help

  Context Function - revert-File
    [+] Synopsis
 1.28s
    [+] Description
 1.02s
    [+] Examples
 351ms

Describing Help

  Context Function - set-ConsColor
    [+] Synopsis
 245ms
    [+] Description
 822ms
    [+] Examples
 455ms

Describing Help

  Context Function - Set-FileContent
    [+] Synopsis
 1.13s
    [+] Description
 482ms
    [+] Examples
 581ms

Describing Help

  Context Function - set-PSTitle
    [+] Synopsis
 0.99s
    [+] Description
 784ms
    [+] Examples
 506ms

Describing Help

  Context Function - Add-ContentFixEncoding
    [+] Synopsis
 235ms
    [+] Description
 263ms
    [+] Examples
 469ms

Describing Help

  Context Function - Add-PSTitleBar
    [+] Synopsis
 370ms
    [+] Description
 322ms
    [+] Examples
 265ms

Describing Help

  Context Function - Authenticate-File
    [+] Synopsis
 258ms
    [+] Description
 219ms
    [+] Examples
 352ms

Describing Help

  Context Function - backup-FileTDO
    [+] Synopsis
 181ms
    [+] Description
 205ms
    [+] Examples
 396ms

Describing Help

  Context Function - check-FileLock
    [+] Synopsis
 205ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 624ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
    [+] Examples
 243ms

Describing Help

  Context Function - Close-IfAlreadyRunning
    [+] Synopsis
 154ms
    [+] Description
 159ms
    [+] Examples
 165ms

Describing Help

  Context Function - ColorMatch
    [+] Synopsis
 108ms
    [+] Description
 127ms
    [+] Examples
 131ms

Describing Help

  Context Function - Compare-ObjectsSideBySide
    [+] Synopsis
 270ms
    [+] Description
 870ms
    [+] Examples
 971ms

Describing Help

  Context Function - Compare-ObjectsSideBySide3
    [+] Synopsis
 378ms
    [+] Description
 332ms
    [+] Examples
 410ms

Describing Help

  Context Function - Compare-ObjectsSideBySide4
    [+] Synopsis
 1.09s
    [+] Description
 546ms
    [+] Examples
 1.14s

Describing Help

  Context Function - Compress-ArchiveFile
    [+] Synopsis
 419ms
    [+] Description
 333ms
    [+] Examples
 510ms

Describing Help

  Context Function - convert-BinaryToDecimalStorageUnits
    [+] Synopsis
 480ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 353ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 329ms
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - convert-ColorHexCodeToWindowsMediaColorsName
    [+] Synopsis
 293ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 230ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 238ms
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - convert-DehydratedBytesToGB
    [+] Synopsis
 221ms
    [+] Description
 227ms
    [+] Examples
 287ms

Describing Help

  Context Function - convert-DehydratedBytesToMB
    [+] Synopsis
 268ms
    [+] Description
 1s
    [+] Examples
 1.14s

Describing Help

  Context Function - Convert-FileEncoding
    [+] Synopsis
 339ms
    [+] Description
 701ms
    [+] Examples
 627ms

Describing Help

  Context Function - ConvertFrom-CanonicalOU
    [+] Synopsis
 338ms
    [+] Description
 407ms
    [+] Examples
 620ms

Describing Help

  Context Function - ConvertFrom-CanonicalUser
    [+] Synopsis
 553ms
    [+] Description
 675ms
    [+] Examples
 433ms

Describing Help

  Context Function - ConvertFrom-DN
    [+] Synopsis
 367ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 772ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
    [+] Examples
 1.44s

Describing Help

  Context Function - ConvertFrom-IniFile
    [+] Synopsis
 466ms
    [+] Description
 302ms
    [+] Examples
 296ms

Describing Help

  Context Function - convertFrom-MarkdownTable
    [+] Synopsis
 439ms
    [+] Description
 1.04s
    [+] Examples
 807ms

Describing Help

  Context Function - ConvertFrom-SourceTable
    [+] Synopsis
 376ms
    [+] Description
 348ms
    [+] Examples
 185ms

Describing Help

  Context Function - ConvertFrom-UncPath
    [+] Synopsis
 835ms
    [+] Description
 766ms
    [+] Examples
 306ms

Describing Help

  Context Function - convert-HelpToMarkdown
    [+] Synopsis
 920ms
    [+] Description
 795ms
    [+] Examples
 466ms

Describing Help

  Context Function - ConvertTo-HashIndexed
    [+] Synopsis
 655ms
    [+] Description
 347ms
    [+] Examples
 562ms

Describing Help

  Context Function - convertTo-MarkdownTable
    [+] Synopsis
 749ms
    [+] Description
 1.03s
    [+] Examples
 1.47s

Describing Help

  Context Function - convertTo-Object
    [+] Synopsis
 359ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 511ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 1.03s
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - ConvertTo-SRT
    [+] Synopsis
 436ms
    [+] Description
 865ms
    [+] Examples
 385ms

Describing Help

  Context Function - ConvertTo-UncPath
    [+] Synopsis
 342ms
    [+] Description
 294ms
    [+] Examples
 347ms

Describing Help

  Context Function - convert-VideoToMp3
PS>TerminatingError(Get-Help): "Cannot find the type for custom attribute 'Aliases'. Make sure that the assembly that contains this type is loaded."
>> TerminatingError(Get-Help): "Cannot find the type for custom attribute 'Aliases'. Make sure that the assembly that contains this type is loaded."
    [-] Synopsis
 392ms
      RuntimeException: Cannot find the type for custom attribute 'Aliases'. Make sure that the assembly that contains this type is loaded.
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 248
PS>TerminatingError(Get-Help): "Cannot find the type for custom attribute 'Aliases'. Make sure that the assembly that contains this type is loaded."
>> TerminatingError(Get-Help): "Cannot find the type for custom attribute 'Aliases'. Make sure that the assembly that contains this type is loaded."
    [-] Description
 2.8s
      RuntimeException: Cannot find the type for custom attribute 'Aliases'. Make sure that the assembly that contains this type is loaded.
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(Get-Help): "Cannot find the type for custom attribute 'Aliases'. Make sure that the assembly that contains this type is loaded."
>> TerminatingError(Get-Help): "Cannot find the type for custom attribute 'Aliases'. Make sure that the assembly that contains this type is loaded."
    [-] Examples
 662ms
      RuntimeException: Cannot find the type for custom attribute 'Aliases'. Make sure that the assembly that contains this type is loaded.
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 254

Describing Help

  Context Function - copy-Profile
    [+] Synopsis
 1.29s
    [+] Description
 615ms
    [+] Examples
 681ms

Describing Help

  Context Function - Count-Object
    [+] Synopsis
 300ms
    [+] Description
 828ms
    [+] Examples
 637ms

Describing Help

  Context Function - Create-ScheduledTaskLegacy
    [+] Synopsis
 536ms
    [+] Description
 317ms
    [+] Examples
 572ms

Describing Help

  Context Function - dump-Shortcuts
    [+] Synopsis
 1.46s
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...=; ModuleName=}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...=; ModuleName=}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 2.31s
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
    [+] Examples
 1.09s

Describing Help

  Context Function - Echo-Finish
    [+] Synopsis
 477ms
    [+] Description
 532ms
    [+] Examples
 324ms

Describing Help

  Context Function - Echo-ScriptEnd
    [+] Synopsis
 212ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 1.46s
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
    [+] Examples
 824ms

Describing Help

  Context Function - Echo-Start
    [+] Synopsis
 559ms
    [+] Description
 349ms
    [+] Examples
 311ms

Describing Help

  Context Function - Expand-ArchiveFile
    [+] Synopsis
 288ms
    [+] Description
 496ms
    [+] Examples
 287ms

Describing Help

  Context Function - extract-Icon
    [+] Synopsis
 232ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 1.03s
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 844ms
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - Find-LockedFileProcess
    [+] Synopsis
 478ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 566ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
    [+] Examples
 238ms

Describing Help

  Context Function - Format-Json
    [+] Synopsis
 184ms
    [+] Description
 223ms
    [+] Examples
 337ms

Describing Help

  Context Function - get-AliasDefinition
    [+] Synopsis
 523ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 973ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 464ms
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - Get-AverageItems
    [+] Synopsis
 1.2s
    [+] Description
 1.08s
    [+] Examples
 436ms

Describing Help

  Context Function - get-colorcombo
    [+] Synopsis
 549ms
    [+] Description
 438ms
    [+] Examples
 554ms

Describing Help

  Context Function - get-ConsoleText
    [+] Synopsis
 344ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 954ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 663ms
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - Get-CountItems
    [+] Synopsis
 690ms
    [+] Description
 0.99s
    [+] Examples
 611ms

Describing Help

  Context Function - Get-FileEncoding
    [+] Synopsis
 577ms
    [+] Description
 644ms
    [+] Examples
 528ms

Describing Help

  Context Function - Get-FileEncodingExtended
    [+] Synopsis
 283ms
    [+] Description
 225ms
    [+] Examples
 381ms

Describing Help

  Context Function - Get-FolderSize
    [+] Synopsis
 452ms
    [+] Description
 241ms
    [+] Examples
 241ms

Describing Help

  Context Function - Get-FolderSize2
    [+] Synopsis
 579ms
    [+] Description
 613ms
    [+] Examples
 1.03s

Describing Help

  Context Function - Get-FsoShortName
    [+] Synopsis
 276ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 2.73s
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
    [+] Examples
 1.17s

Describing Help

  Context Function - Get-FsoShortPath
    [+] Synopsis
 360ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 1.05s
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
    [+] Examples
 234ms

Describing Help

  Context Function - Get-FsoTypeObj
    [+] Synopsis
 1.03s
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 2.26s
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
    [+] Examples
 656ms

Describing Help

  Context Function - get-InstalledApplication
    [+] Synopsis
 341ms
    [+] Description
 324ms
    [+] Examples
 476ms

Describing Help

  Context Function - get-LoremName
    [+] Synopsis
 303ms
    [+] Description
 199ms
    [+] Examples
 353ms

Describing Help

  Context Function - Get-ProductItems
    [+] Synopsis
 983ms
    [+] Description
 778ms
    [+] Examples
 383ms

Describing Help

  Context Function - get-RegistryProperty
    [+] Synopsis
 650ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 1.15s
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 371ms
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - Get-ScheduledTaskLegacy
    [+] Synopsis
 2.04s
    [+] Description
 678ms
    [+] Examples
 346ms

Describing Help

  Context Function - Get-Shortcut
    [+] Synopsis
 1.46s
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (get-shortcut.ps1 
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (get-shortcut.ps1
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

    [+] Description
 1.38s
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:254 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (get-shortcut.ps1 
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:254 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (get-shortcut.ps1
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

    [+] Examples
 1.58s

Describing Help

  Context Function - Get-SumItems
    [+] Synopsis
 226ms
    [+] Description
 715ms
    [+] Examples
 917ms

Describing Help

  Context Function - get-TaskReport
    [+] Synopsis
 364ms
    [+] Description
 743ms
    [+] Examples
 317ms

Describing Help

  Context Function - Get-Time
    [+] Synopsis
 204ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{syntax=@{synt...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{syntax=@{synt...leName=verb-IO}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 1.75s
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
    [+] Examples
 732ms

Describing Help

  Context Function - Get-TimeStamp
    [+] Synopsis
 678ms
    [+] Description
 532ms
    [+] Examples
 436ms

Describing Help

  Context Function - get-TimeStampNow
    [+] Synopsis
 299ms
    [+] Description
 257ms
    [+] Examples
 355ms

Describing Help

  Context Function - get-Uptime
    [+] Synopsis
 1.69s
    [+] Description
 983ms
    [+] Examples
 947ms

Describing Help

  Context Function - Invoke-Flasher
    [+] Synopsis
 529ms
    [+] Description
 578ms
    [+] Examples
 327ms

Describing Help

  Context Function - Invoke-Pause
    [+] Synopsis
 303ms
    [+] Description
 557ms
    [+] Examples
 706ms

Describing Help

  Context Function - Invoke-Pause2
    [+] Synopsis
 562ms
    [+] Description
 699ms
    [+] Examples
 358ms

Describing Help

  Context Function - invoke-SoundCue
    [+] Synopsis
 342ms
    [+] Description
 353ms
    [+] Examples
 339ms

Describing Help

  Context Function - mount-UnavailableMappedDrives
    [+] Synopsis
 260ms
    [+] Description
 172ms
    [+] Examples
 162ms

Describing Help

  Context Function - move-FileOnReboot
    [+] Synopsis
 845ms
    [+] Description
 578ms
    [+] Examples
 1s

Describing Help

  Context Function - New-RandomFilename
    [+] Synopsis
 249ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 935ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 1s
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - new-Shortcut
    [+] Synopsis
 812ms
    [+] Description
 326ms
    [+] Examples
 242ms

Describing Help

  Context Function - out-Clipboard
    [+] Synopsis
 553ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 1s
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 811ms
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - Out-Excel
    [+] Synopsis
 1.24s
    [+] Description
 651ms
    [+] Examples
 772ms

Describing Help

  Context Function - Out-Excel-Events
    [+] Synopsis
 492ms
    [+] Description
 260ms
    [+] Examples
 883ms

Describing Help

  Context Function - parse-PSTitleBar
    [+] Synopsis
 1.07s
    [+] Description
 806ms
    [+] Examples
 498ms

Describing Help

  Context Function - play-beep
    [+] Synopsis
 777ms
    [+] Description
 714ms
    [+] Examples
 1.41s

Describing Help

  Context Function - Pop-LocationFirst
    [+] Synopsis
 451ms
    [+] Description
 333ms
    [+] Examples
 761ms

Describing Help

  Context Function - prompt-Continue
    [+] Synopsis
 628ms
    [+] Description
 755ms
    [+] Examples
 459ms

Describing Help

  Context Function - Read-Host2
    [+] Synopsis
 572ms
    [+] Description
 276ms
    [+] Examples
 1.14s

Describing Help

  Context Function - rebuild-PSTitleBar
    [+] Synopsis
 616ms
    [+] Description
 765ms
    [+] Examples
 672ms

Describing Help

  Context Function - Remove-AuthenticodeSignature
    [+] Synopsis
 1.05s
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (Remove-Authenti...nParameters>]
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (Remove-Authenti...nParameters>]
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

    [+] Description
 2.24s
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:254 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (Remove-Authenti...nParameters>]
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:254 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (Remove-Authenti...nParameters>]
:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

    [+] Examples
 2.89s

Describing Help

  Context Function - Remove-InvalidFileNameChars
    [+] Synopsis
 644ms
    [+] Description
 514ms
    [+] Examples
 421ms

Describing Help

  Context Function - Remove-InvalidVariableNameChars
    [+] Synopsis
 155ms
    [+] Description
 355ms
    [+] Examples
 1.35s

Describing Help

  Context Function - remove-ItemRetry
    [+] Synopsis
 368ms
    [+] Description
 464ms
    [+] Examples
 449ms

Describing Help

  Context Function - Remove-JsonComments
    [+] Synopsis
 439ms
    [+] Description
 337ms
    [+] Examples
 2.03s

Describing Help

  Context Function - Remove-PSTitleBar
    [+] Synopsis
 1.53s
    [+] Description
 278ms
    [+] Examples
 245ms

Describing Help

  Context Function - Remove-ScheduledTaskLegacy
    [+] Synopsis
 603ms
    [+] Description
 432ms
    [+] Examples
 809ms

Describing Help

  Context Function - remove-UnneededFileVariants
    [+] Synopsis
 1s
    [+] Description
 541ms
    [+] Examples
 799ms

Describing Help

  Context Function - replace-PSTitleBarText
    [+] Synopsis
 578ms
    [+] Description
 738ms
    [+] Examples
 284ms

Describing Help

  Context Function - reset-ConsoleColors
    [+] Synopsis
 328ms
    [+] Description
 298ms
    [+] Examples
 475ms

Describing Help

  Context Function - restore-FileTDO
    [+] Synopsis
 376ms
    [+] Description
 306ms
    [+] Examples
 324ms

Describing Help

  Context Function - Run-ScheduledTaskLegacy
    [+] Synopsis
 238ms
    [+] Description
 201ms
    [+] Examples
 171ms

Describing Help

  Context Function - Save-ConsoleOutputToClipBoard
    [+] Synopsis
 146ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 3.11s
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
    [+] Examples
 625ms

Describing Help

  Context Function - select-first
    [+] Synopsis
 416ms
    [+] Description
 337ms
    [+] Examples
 674ms

Describing Help

  Context Function - Select-last
    [+] Synopsis
 310ms
    [+] Description
 324ms
    [+] Examples
 480ms

Describing Help

  Context Function - Select-StringAll
    [+] Synopsis
 280ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 644ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 201ms
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - set-ConsoleColors
    [+] Synopsis
 284ms
    [+] Description
 238ms
    [+] Examples
 204ms

Describing Help

  Context Function - Set-ContentFixEncoding
    [+] Synopsis
 844ms
    [+] Description
 511ms
    [+] Examples
 550ms

Describing Help

  Context Function - set-ItemReadOnlyTDO
    [+] Synopsis
 235ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 311ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 171ms
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - set-PSTitleBar
    [+] Synopsis
 442ms
    [+] Description
 261ms
    [+] Examples
 362ms

Describing Help

  Context Function - Set-Shortcut
    [+] Synopsis
 813ms
    [+] Description
 677ms
    [+] Examples
 740ms

Describing Help

  Context Function - Shorten-Path
    [+] Synopsis
 1.63s
    [+] Description
 243ms
    [+] Examples
 361ms

Describing Help

  Context Function - Show-MsgBox
    [+] Synopsis
 299ms
    [+] Description
 1.08s
    [+] Examples
 1.14s

Describing Help

  Context Function - Sign-File
    [+] Synopsis
 321ms
    [+] Description
 319ms
    [+] Examples
 958ms

Describing Help

  Context Function - stop-driveburn
    [+] Synopsis
 1.17s
    [+] Description
 1.35s
    [+] Examples
 989ms

Describing Help

  Context Function - test-FileSysAutomaticVariables
    [+] Synopsis
 523ms
    [+] Description
 293ms
    [+] Examples
 620ms

Describing Help

  Context Function - test-IsUncPath
    [+] Synopsis
 1.36s
    [+] Description
 599ms
    [+] Examples
 458ms

Describing Help

  Context Function - test-LineEndings
    [+] Synopsis
 244ms
    [+] Description
 170ms
    [+] Examples
 945ms

Describing Help

  Context Function - test-MediaFile
    [+] Synopsis
 550ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 292ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 240ms
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - test-MissingMediaSummary
    [+] Synopsis
 1.07s
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 485ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 961ms
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - Test-PendingReboot
    [+] Synopsis
 605ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 925ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 1.23s
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - test-PSTitleBar
    [+] Synopsis
 681ms
    [+] Description
 692ms
    [+] Examples
 622ms

Describing Help

  Context Function - Test-RegistryKey
    [+] Synopsis
 673ms
    [+] Description
 898ms
    [+] Examples
 554ms

Describing Help

  Context Function - Test-RegistryValue
    [+] Synopsis
 951ms
    [+] Description
 455ms
    [+] Examples
 368ms

Describing Help

  Context Function - Test-RegistryValueNotNull
    [+] Synopsis
 390ms
    [+] Description
 280ms
    [+] Examples
 244ms

Describing Help

  Context Function - Touch-File
    [+] Synopsis
 945ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 2.11s
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
    [+] Examples
 589ms

Describing Help

  Context Function - trim-FileList
    [+] Synopsis
 443ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...=; ModuleName=}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...=; ModuleName=}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 4.39s
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
    [+] Examples
 634ms

Describing Help

  Context Function - unless
    [+] Synopsis
 383ms
    [+] Description
 730ms
    [+] Examples
 688ms

Describing Help

  Context Function - update-RegistryProperty
    [+] Synopsis
 526ms
PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 762ms
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
PS>TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
>> TerminatingError(): "Expected $true, but got $false."
    [-] Examples
 1.01s
      Expected $true, but got $false.
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 255

Describing Help

  Context Function - Write-ProgressHelper
    [+] Synopsis
 422ms
    [+] Description
 360ms
    [+] Examples
 447ms

Describing Help

  Context Function - ConvertFrom-CmdList
    [+] Synopsis
 3.08s
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-IO\Tests\verb-IO.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
>> TerminatingError(): "Expected a value, but got $null or empty."
    [-] Description
 1.43s
      Expected a value, but got $null or empty.
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 251
    [+] Examples
 296ms

Describing General - Testing all scripts and modules against the Script Analyzer Rules

  Context Checking files to test exist and Invoke-ScriptAnalyzer cmdLet is available
    [+] Checking files exist to test.
 15ms
    [+] Checking Invoke-ScriptAnalyzer exists.
 16ms

Describing Testing against PSScriptAnalyzer rules

  Context PSSA Standard Rules
    [+] Should pass PSAlignAssignmentStatement
 105ms
    [!] Should pass PSAvoidUsingCmdletAliases
, is skipped
 0ms
    [+] Should pass PSAvoidAssignmentToAutomaticVariable
 74ms
PS>TerminatingError(): "Expected 0, but got 8."
>> TerminatingError(): "Expected 0, but got 8."
>> TerminatingError(): "Expected 0, but got 8."
    [-] Should pass PSAvoidDefaultValueSwitchParameter
 89ms
      Expected 0, but got 8.
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 318
PS>TerminatingError(): "Expected 0, but got 4."
>> TerminatingError(): "Expected 0, but got 4."
>> TerminatingError(): "Expected 0, but got 4."
    [-] Should pass PSAvoidDefaultValueForMandatoryParameter
 59ms
      Expected 0, but got 4.
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSAvoidUsingEmptyCatchBlock
 70ms
    [+] Should pass PSAvoidGlobalAliases
 79ms
    [+] Should pass PSAvoidGlobalFunctions
 58ms
    [!] Should pass PSAvoidGlobalVars
, is skipped
 0ms
    [+] Should pass PSAvoidInvokingEmptyMembers
 262ms
    [+] Should pass PSAvoidLongLines
 50ms
    [+] Should pass PSAvoidNullOrEmptyHelpMessageAttribute
 74ms
    [+] Should pass PSAvoidOverwritingBuiltInCmdlets
 105ms
    [+] Should pass PSAvoidUsingPositionalParameters
 125ms
    [+] Should pass PSReservedCmdletChar
 180ms
    [+] Should pass PSReservedParams
 116ms
    [+] Should pass PSAvoidShouldContinueWithoutForce
 116ms
    [+] Should pass PSAvoidTrailingWhitespace
 66ms
    [+] Should pass PSAvoidUsingUsernameAndPasswordParams
 109ms
    [+] Should pass PSAvoidUsingComputerNameHardcoded
 83ms
PS>TerminatingError(): "Expected 0, but got 2."
>> TerminatingError(): "Expected 0, but got 2."
>> TerminatingError(): "Expected 0, but got 2."
    [-] Should pass PSAvoidUsingConvertToSecureStringWithPlainText
 152ms
      Expected 0, but got 2.
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSAvoidUsingDeprecatedManifestFields
 60ms
    [+] Should pass PSAvoidUsingDoubleQuotesForConstantString
 62ms
PS>TerminatingError(): "Expected 0, but got 1."
>> TerminatingError(): "Expected 0, but got 1."
>> TerminatingError(): "Expected 0, but got 1."
    [-] Should pass PSAvoidUsingInvokeExpression
 68ms
      Expected 0, but got 1.
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSAvoidUsingPlainTextForPassword
 47ms
PS>TerminatingError(): "Expected 0, but got 8."
>> TerminatingError(): "Expected 0, but got 8."
>> TerminatingError(): "Expected 0, but got 8."
    [-] Should pass PSAvoidUsingWMICmdlet
 64ms
      Expected 0, but got 8.
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 318
    [!] Should pass PSAvoidUsingWriteHost
, is skipped
 0ms
    [+] Should pass PSUseCompatibleCommands
 47ms
    [+] Should pass PSUseCompatibleSyntax
 72ms
    [+] Should pass PSUseCompatibleTypes
 46ms
PS>TerminatingError(): "Expected 0, but got 4."
>> TerminatingError(): "Expected 0, but got 4."
>> TerminatingError(): "Expected 0, but got 4."
    [-] Should pass PSMisleadingBacktick
 44ms
      Expected 0, but got 4.
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSMissingModuleManifestField
 48ms
PS>TerminatingError(): "Expected 0, but got 150."
>> TerminatingError(): "Expected 0, but got 150."
>> TerminatingError(): "Expected 0, but got 150."
    [-] Should pass PSPlaceCloseBrace
 86ms
      Expected 0, but got 150.
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 318
PS>TerminatingError(): "Expected 0, but got 1."
>> TerminatingError(): "Expected 0, but got 1."
>> TerminatingError(): "Expected 0, but got 1."
    [-] Should pass PSPlaceOpenBrace
 45ms
      Expected 0, but got 1.
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 318
PS>TerminatingError(): "Expected 0, but got 12."
>> TerminatingError(): "Expected 0, but got 12."
>> TerminatingError(): "Expected 0, but got 12."
    [-] Should pass PSPossibleIncorrectComparisonWithNull
 52ms
      Expected 0, but got 12.
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSPossibleIncorrectUsageOfAssignmentOperator
 51ms
    [+] Should pass PSPossibleIncorrectUsageOfRedirectionOperator
 59ms
    [!] Should pass PSProvideCommentHelp
, is skipped
 0ms
    [+] Should pass PSReviewUnusedParameter
 50ms
    [!] Should pass PSUseApprovedVerbs
, is skipped
 0ms
PS>TerminatingError(): "Expected 0, but got 2."
>> TerminatingError(): "Expected 0, but got 2."
>> TerminatingError(): "Expected 0, but got 2."
    [-] Should pass PSUseBOMForUnicodeEncodedFile
 55ms
      Expected 0, but got 2.
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 318
    [!] Should pass PSUseCmdletCorrectly
, is skipped
 0ms
    [+] Should pass PSUseCompatibleCmdlets
 58ms
    [+] Should pass PSUseConsistentIndentation
 51ms
    [!] Should pass PSUseConsistentWhitespace
, is skipped
 0ms
    [+] Should pass PSUseCorrectCasing
 38ms
    [!] Should pass PSUseDeclaredVarsMoreThanAssignments
, is skipped
 0ms
    [+] Should pass PSUseLiteralInitializerForHashtable
 45ms
PS>TerminatingError(): "Expected 0, but got 14."
>> TerminatingError(): "Expected 0, but got 14."
>> TerminatingError(): "Expected 0, but got 14."
    [-] Should pass PSUseOutputTypeCorrectly
 46ms
      Expected 0, but got 14.
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSUseProcessBlockForPipelineCommand
 45ms
    [+] Should pass PSUsePSCredentialType
 31ms
    [+] Should pass PSShouldProcess
 30ms
PS>TerminatingError(): "Expected 0, but got 34."
>> TerminatingError(): "Expected 0, but got 34."
>> TerminatingError(): "Expected 0, but got 34."
    [-] Should pass PSUseShouldProcessForStateChangingFunctions
 34ms
      Expected 0, but got 34.
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 318
PS>TerminatingError(): "Expected 0, but got 30."
>> TerminatingError(): "Expected 0, but got 30."
>> TerminatingError(): "Expected 0, but got 30."
    [-] Should pass PSUseSingularNouns
 491ms
      Expected 0, but got 30.
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 318
PS>TerminatingError(): "Expected 0, but got 46."
>> TerminatingError(): "Expected 0, but got 46."
>> TerminatingError(): "Expected 0, but got 46."
    [-] Should pass PSUseSupportsShouldProcess
 111ms
      Expected 0, but got 46.
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-IO\Tests\verb-IO.tests.ps1: line 318
    [+] Should pass PSUseToExportFieldsInManifest
 44ms
    [+] Should pass PSUseUsingScopeModifierInNewRunspaces
 49ms
    [+] Should pass PSUseUTF8EncodingForHelpFile
 53ms
    [+] Should pass PSDSCDscExamplesPresent
 50ms
    [+] Should pass PSDSCDscTestsPresent
 62ms
    [+] Should pass PSDSCReturnCorrectTypesForDSCFunctions
 48ms
    [+] Should pass PSDSCUseIdenticalMandatoryParametersForDSC
 48ms
    [+] Should pass PSDSCUseIdenticalParametersForDSC
 52ms
    [+] Should pass PSDSCStandardDSCFunctionsInResource
 66ms
    [+] Should pass PSDSCUseVerboseMessageInDSCResource
 62ms
16:18:51:
#*------^ RUNNING c:\sc\verb-IO\Tests\verb-IO.tests.ps1: ^------
16:18:51: INFO: 
---------------------------------------------------------------------------------
Processing completed: verb-IO :: c:\sc\verb-IO
- Script is currently installed (from PsRep: with scope:CurrentUser, under TORO\kadriTSS profile

- To update other scopes/accounts on same machine, or install on other machines:
    1. Uninstall current module copies:

        Uninstall-Module -Name verb-IO) -AllVersion -whatif ;

    2. Install the current version (or higher) from the Repo:lyncRepo:

        install-Module -name verb-IO -Repository lyncRepo -MinimumVersion 4.0.0 -scope currentuser -whatif ;

    3. Reimport the module with -force, to ensure the current installed verison is loaded:

        import-Module -name verb-IO -force -verbose ;

#-=-Stacked list: Unwrap to create a 1-liner for the above: CURRENTUSER =-=-=-=-=-=-=
$whatif=$false ; $tMod = 'verb-IO' ; $tVer = '4.0.0' ;  $tScop = 'CurrentUser' ;
TRY {
Remove-Module -Name $tmod -ea 0 ;
Uninstall-Module -Name $tmod -AllVersion -whatif:$($whatif) ;
install-Module -name $tmod -Repository 'lyncRepo' -MinimumVersion $tVer -scope $tScop -AllowClobber -whatif:$($whatif) ;
import-Module -name $tmod -force -verbose ;
} CATCH {
Write-Warning "Failed processing $($_.Exception.ItemName). 
Error Message: $($_.Exception.Message)
Error Details: $($_)" ; Break ;
} ;
#-=-=-=-=-=-=-=-=
#-=-Stacked list: Unwrap to create a 1-liner for the above: ALLUSERS =-=-=-=-=-=-=
$whatif=$false ; $tMod = 'verb-IO' ; $tVer = '4.0.0' ;  $tScop = 'AllUsers' ;
TRY {
Remove-Module -Name $tmod -ea 0 ;
Uninstall-Module -Name $tmod -AllVersion -whatif:$($whatif) ;
install-Module -name $tmod -Repository 'lyncRepo' -MinimumVersion $tVer -scope $tScop -AllowClobber -whatif:$($whatif) ;
import-Module -name $tmod -force -verbose ;
} CATCH {
Write-Warning "Failed processing $($_.Exception.ItemName). 
Error Message: $($_.Exception.Message)
Error Details: $($_)" ; Break ;
} ;
#-=-=-=-=-=-=-=-=

- You may also want to run the configured Pester Tests of the new script:

        . c:\sc\verb-IO\Tests\verb-IO.tests.ps1

Full Processing Details can be found in:

C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-IO-LOG-BATCH-EXEC-20220908-1605PM-log.txt

---------------------------------------------------------------------------------
16:18:51: INFO: 
(Processing log can be found at:c:\sc\verb-IO\C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-IO-LOG-BATCH-EXEC-20220908-1605PM-log.txt)
16:18:51: INFO: remove-UnneededFileVariants w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           c:\sc\verb-IO                                                                                               
Include                        VERB-dev-verb-IO-LOG-BATCH-*-log.txt                                                                        
Pattern                                                                                                                                    
FilterOn                       CreationTime                                                                                                
Keep                           2                                                                                                           
KeepToday                      True                                                                                                        
verbose                        True                                                                                                        
whatif                         False
16:18:51:gci w
Name                           Value                                                                                                       
----                           -----                                                                                                       
path                           c:\sc\verb-IO\*                                                                                             
include                        VERB-dev-verb-IO-LOG-BATCH-*-log.txt                                                                        
ErrorAction                    Stop
VERBOSE: $cuttime:09/08/2022 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/08/2022 00:00:00 AM, on CreationTime property
(1 in set *before* filtering)
(0 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(0 in set *before* filtering)
(0 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
16:18:52:Reducing matched population from 1 to 0 files via:
filtered files on CreationTime prior to 09/08/2022 00:00:00 AM
16:18:52:There are *no* files to be removed, as per the specified inputs. ($population:0)
16:18:52: INFO: #*======^ VERB-dev.psm1:verb-IO ^======
write-host 16:18:52:
#*------^ (1/1):PROC:verb-IO: ^------
16:18:52:
#*======^ RUNNING processbulk-NewModule.ps1 ^======



▒
▒
▒
░
░

LYN-8DCZ1G2
 ▓▒▓
TORO\kadriTSS
 ▓▒▓
Thu 09/08/2022 16:18
 [00:14:40]

▒
▒
▒
▒
▒

[PS]
:
C:\U\W\P\SCRIPTS

$



PS>.\processbulk-NewModule.ps1 -mod verb-logging -verb
VERBOSE: $PSBoundParameters:
Key     Value         
---     -----         
Modules {verb-logging}
Verbose True
16:27:30:
#*======v RUNNING processbulk-NewModule.ps1 v======
16:27:30:
#*------v (1/1):PROC:verb-logging: v------
==(1/19):ipmo'ing C:\sc\verb-logging\public\Archive-Log.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\Archive-Log.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\Archive-Log.ps1'.
==(2/19):ipmo'ing C:\sc\verb-logging\public\Cleanup.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\Cleanup.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\Cleanup.ps1'.
==(3/19):ipmo'ing C:\sc\verb-logging\public\get-ArchivePath.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\get-ArchivePath.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\get-ArchivePath.ps1'.
==(4/19):ipmo'ing C:\sc\verb-logging\public\get-EventsFiltered.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\get-EventsFiltered.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\get-EventsFiltered.ps1'.
==(5/19):ipmo'ing C:\sc\verb-logging\public\get-lastboot.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\get-lastboot.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\get-lastboot.ps1'.
==(6/19):ipmo'ing C:\sc\verb-logging\public\get-LastEvent.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\get-LastEvent.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\get-LastEvent.ps1'.
==(7/19):ipmo'ing C:\sc\verb-logging\public\get-lastlogon.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\get-lastlogon.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\get-lastlogon.ps1'.
==(8/19):ipmo'ing C:\sc\verb-logging\public\get-lastshutdown.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\get-lastshutdown.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\get-lastshutdown.ps1'.
==(9/19):ipmo'ing C:\sc\verb-logging\public\get-lastsleep.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\get-lastsleep.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\get-lastsleep.ps1'.
==(10/19):ipmo'ing C:\sc\verb-logging\public\get-lastwake.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\get-lastwake.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\get-lastwake.ps1'.
==(11/19):ipmo'ing C:\sc\verb-logging\public\get-winEventsLoopedIDs.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\get-winEventsLoopedIDs.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\get-winEventsLoopedIDs.ps1'.
==(12/19):ipmo'ing C:\sc\verb-logging\public\Start-IseTranscript.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\Start-IseTranscript.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\Start-IseTranscript.ps1'.
==(13/19):ipmo'ing C:\sc\verb-logging\public\Start-Log.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\Start-Log.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\Start-Log.ps1'.
==(14/19):ipmo'ing C:\sc\verb-logging\public\start-TranscriptLog.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\start-TranscriptLog.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\start-TranscriptLog.ps1'.
==(15/19):ipmo'ing C:\sc\verb-logging\public\Stop-TranscriptLog.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\Stop-TranscriptLog.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\Stop-TranscriptLog.ps1'.
==(16/19):ipmo'ing C:\sc\verb-logging\public\Test-Transcribing.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\Test-Transcribing.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\Test-Transcribing.ps1'.
==(17/19):ipmo'ing C:\sc\verb-logging\public\Test-Transcribing2.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\Test-Transcribing2.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\Test-Transcribing2.ps1'.
==(18/19):ipmo'ing C:\sc\verb-logging\public\Test-TranscriptionSupported.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\Test-TranscriptionSupported.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\Test-TranscriptionSupported.ps1'.
==(19/19):ipmo'ing C:\sc\verb-logging\public\Write-Log.ps1
VERBOSE: Loading module from path 'C:\sc\verb-logging\public\Write-Log.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-logging\public\Write-Log.ps1'.
16:27:31:(executing:Set-BuildEnvironment -Path c:\sc\verb-logging -Force 
(use -NoBuildInfo if hangs))
==16:27:33:Processing verb-logging:
Name                           Value                                                                                                       
----                           -----                                                                                                       
BHProjectName                  verb-logging                                                                                                
BHModulePath                   C:\sc\verb-logging\verb-logging                                                                             
BHPSModulePath                 C:\sc\verb-logging\verb-logging                                                                             
BHBuildOutput                  C:\sc\verb-logging\BuildOutput                                                                              
BHProjectPath                  C:\sc\verb-logging                                                                                          
BHPSModuleManifest             C:\sc\verb-logging\verb-logging\verb-logging.psd1                                                           
BHBuildSystem                  Unknown                                                                                                     
BHCommitMessage                Update Start-IseTranscript.ps1...                                                                           
BHBranchName                   master                                                                                                      
BHCommitHash                   00a07bda7d579e416489607df216c91c7922ce20                                                                    
BHBuildNumber                  0
VERBOSE: Loading module from path 'C:\sc\verb-logging\verb-logging\verb-logging.psm1'.
16:27:33:Step-ModuleVersionCalculated w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           c:\sc\verb-logging                                                                                          
Verbose                        True
16:27:33:#*======v RUNNING :Step-ModuleVersionCalculated:c:\sc\verb-logging v======
16:27:33:profiling existing content...
VERBOSE: 16:27:33:#*======v RUNNING :Get-PSModuleFile:.psd1:C:\sc\verb-logging v======
VERBOSE: 16:27:33:#*======^ RUNNING :Get-PSModuleFile:.psd1:C:\sc\verb-logging ^======
VERBOSE: 16:27:33:#*======v RUNNING :Get-PSModuleFile:.psm1:C:\sc\verb-logging v======
VERBOSE: 16:27:33:#*======^ RUNNING :Get-PSModuleFile:.psm1:C:\sc\verb-logging ^======
WARNING: 16:27:33:MULTIPLE #requires -version strings matched in:
C:\sc\verb-logging\verb-logging\verb-logging.psm1
(not-permited, wrecks ipmo) - psm1 and constitutent .ps1 files:
Filename                LineNumber Line                      
--------                ---------- ----                      
Start-IseTranscript.ps1        115     #Requires -Version 2.0
verb-logging.psm1             1085     #Requires -Version 2.0
Moving on
VERBOSE: 16:27:35:Import-PowerShellDataFile w
Name                           Value                                                                                                       
----                           -----                                                                                                       
path                           C:\sc\verb-logging\verb-logging\verb-logging.psd1                                                           
ErrorAction                    STOP                                                                                                        
Verbose                        True
VERBOSE: 16:27:35:test-ModuleManifest w
Name                           Value                                                                                                       
----                           -----                                                                                                       
path                           C:\sc\verb-logging\verb-logging\verb-logging.psd1                                                           
ErrorAction                    STOP                                                                                                        
Verbose                        True
VERBOSE: Loading module from path 'C:\sc\verb-logging\verb-logging\verb-logging.psm1'.
16:27:35:(Test-ModuleManifest:PASSED)
16:27:37:Module:psd1M:calculating *FINGERPRINT* change Version Step
VERBOSE: 16:27:37:import-module w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Verbose                        True                                                                                                        
Name                           C:\sc\verb-logging\verb-logging\verb-logging.psm1                                                           
force                          True                                                                                                        
ErrorAction                    STOP
VERBOSE: Loading module from path 'C:\sc\verb-logging\verb-logging\verb-logging.psm1'.
WARNING: The names of some imported commands from the module 'verb-logging' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'Archive-Log' command in the verb-logging' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Archive-Log'.
VERBOSE: Importing function 'Cleanup'.
VERBOSE: Importing function 'get-ArchivePath'.
VERBOSE: Importing function 'get-EventsFiltered'.
VERBOSE: Importing function 'get-lastevent'.
VERBOSE: Importing function 'get-lastlogon'.
VERBOSE: Importing function 'get-lastshutdown'.
VERBOSE: Importing function 'get-lastsleep'.
VERBOSE: Importing function 'get-lastwake'.
VERBOSE: Importing function 'get-winEventsLoopedIDs'.
VERBOSE: Importing function 'Start-IseTranscript'.
VERBOSE: Importing function 'Start-Log'.
VERBOSE: Importing function 'start-TranscriptLog'.
VERBOSE: Importing function 'Stop-TranscriptLog'.
VERBOSE: Importing function 'Test-Transcribing'.
VERBOSE: Importing function 'test-Transcribing2'.
VERBOSE: Importing function 'Test-TranscriptionSupported'.
VERBOSE: Importing function 'Write-Log'.
16:27:38:get-command verb-logging -gt AST 80% match:
VERBOSE: 16:27:38:get-module |where-object{$_.path -eq 'C:\sc\verb-logging\verb-logging\verb-logging.psm1'} |remove-module w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Verbose                        True                                                                                                        
force                          True                                                                                                        
ErrorAction                    STOP
VERBOSE: Performing the operation "Remove-Module" on target "verb-logging (Path: 'C:\sc\verb-logging\verb-logging\verb-logging.psm1')".
VERBOSE: Removing the imported "Write-Log" function.
VERBOSE: Removing the imported "Test-TranscriptionSupported" function.
VERBOSE: Removing the imported "test-Transcribing2" function.
VERBOSE: Removing the imported "Test-Transcribing" function.
VERBOSE: Removing the imported "Stop-TranscriptLog" function.
VERBOSE: Removing the imported "start-TranscriptLog" function.
VERBOSE: Removing the imported "Start-Log" function.
VERBOSE: Removing the imported "Start-IseTranscript" function.
VERBOSE: Removing the imported "get-winEventsLoopedIDs" function.
VERBOSE: Removing the imported "get-lastwake" function.
VERBOSE: Removing the imported "get-lastsleep" function.
VERBOSE: Removing the imported "get-lastshutdown" function.
VERBOSE: Removing the imported "get-lastlogon" function.
VERBOSE: Removing the imported "get-lastevent" function.
VERBOSE: Removing the imported "get-EventsFiltered" function.
VERBOSE: Removing the imported "get-ArchivePath" function.
VERBOSE: Removing the imported "Cleanup" function.
VERBOSE: Removing the imported "Archive-Log" function.
VERBOSE: 16:27:39:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\BuildHelpers\2.0.16\BuildHelpers.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\GroupSet\GroupSet.Schema.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Windows\system32\WindowsPowerShell\v1.0\Modules\Microsoft.PowerShell.Host\Microsoft.PowerShell.Host.psd1:still loaded)
VERBOSE: 16:27:39:(C:\Windows\system32\WindowsPowerShell\v1.0\Modules\Microsoft.PowerShell.Management\Microsoft.PowerShell.Management.psd1:still loaded)
VERBOSE: 16:27:39:(C:\Windows\system32\WindowsPowerShell\v1.0\Modules\Microsoft.PowerShell.Security\Microsoft.PowerShell.Security.psd1:still loaded)
VERBOSE: 16:27:39:(C:\Windows\system32\WindowsPowerShell\v1.0\Modules\Microsoft.PowerShell.Utility\Microsoft.PowerShell.Utility.psd1:still loaded)
VERBOSE: 16:27:39:(C:\Windows\system32\WindowsPowerShell\v1.0\Modules\Microsoft.WSMan.Management\Microsoft.WSMan.Management.psd1:still loaded)
VERBOSE: 16:27:39:(C:\Program Files\WindowsPowerShell\Modules\PackageManagement\1.4.8\PackageManagement.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Program Files\WindowsPowerShell\Modules\Pester\4.9.0\Pester.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Windows\system32\WindowsPowerShell\v1.0\Modules\pki\pki.psd1:still loaded)
VERBOSE: 16:27:39:(C:\Program Files\WindowsPowerShell\Modules\PowerShellGet\2.2.5\PSModule.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\ProcessSet\ProcessSet.Schema.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Windows\system32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\PSDesiredStateConfiguration.psd1:still loaded)
VERBOSE: 16:27:39:(C:\Program Files\WindowsPowerShell\Modules\PSReadline\2.1.0\PSReadLine.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Program Files\WindowsPowerShell\Modules\PSScriptAnalyzer\1.19.1\PSScriptAnalyzer.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\ServiceSet\ServiceSet.Schema.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Windows\system32\WindowsPowerShell\v1.0\Modules\SmbShare\SmbShare.psd1:still loaded)
VERBOSE: 16:27:39:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Auth\1.1.0\verb-Auth.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\4.0.0\verb-IO.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-logging\1.1.1\verb-logging.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Mods\1.2.1\verb-Mods.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Text\4.3.0\verb-Text.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\WindowsFeatureSet\WindowsFeatureSet.Schema.psm1:still loaded)
VERBOSE: 16:27:39:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\WindowsOptionalFeatureSet\WindowsOptionalFeatureSet.Schema.psm1:still loaded)
VERBOSE: 16:27:39:(=cmd:Archive-Log...)
VERBOSE: 16:27:39:(---param:FilePath...)
VERBOSE: 16:27:39:(---param:Overwrite...)
VERBOSE: 16:27:39:(---param:UniqueClash...)
VERBOSE: 16:27:39:(---param:showDebug...)
VERBOSE: 16:27:39:(---param:whatIf...)
VERBOSE: 16:27:39:(---param:Verbose...)
VERBOSE: 16:27:39:(---param:Debug...)
VERBOSE: 16:27:39:(---param:ErrorAction...)
VERBOSE: 16:27:39:(---param:WarningAction...)
VERBOSE: 16:27:39:(---param:InformationAction...)
VERBOSE: 16:27:39:(---param:ErrorVariable...)
VERBOSE: 16:27:39:(---param:WarningVariable...)
VERBOSE: 16:27:39:(---param:InformationVariable...)
VERBOSE: 16:27:39:(---param:OutVariable...)
VERBOSE: 16:27:39:(---param:OutBuffer...)
VERBOSE: 16:27:39:(---param:PipelineVariable...)
VERBOSE: 16:27:39:(=cmd:Cleanup...)
VERBOSE: 16:27:39:(---param:Verbose...)
VERBOSE: 16:27:39:(---param:Debug...)
VERBOSE: 16:27:39:(---param:ErrorAction...)
VERBOSE: 16:27:39:(---param:WarningAction...)
VERBOSE: 16:27:39:(---param:InformationAction...)
VERBOSE: 16:27:39:(---param:ErrorVariable...)
VERBOSE: 16:27:39:(---param:WarningVariable...)
VERBOSE: 16:27:39:(---param:InformationVariable...)
VERBOSE: 16:27:39:(---param:OutVariable...)
VERBOSE: 16:27:39:(---param:OutBuffer...)
VERBOSE: 16:27:39:(---param:PipelineVariable...)
VERBOSE: 16:27:39:(=cmd:get-ArchivePath...)
VERBOSE: 16:27:39:(---param:Verbose...)
VERBOSE: 16:27:39:(---param:Debug...)
VERBOSE: 16:27:39:(---param:ErrorAction...)
VERBOSE: 16:27:39:(---param:WarningAction...)
VERBOSE: 16:27:39:(---param:InformationAction...)
VERBOSE: 16:27:39:(---param:ErrorVariable...)
VERBOSE: 16:27:39:(---param:WarningVariable...)
VERBOSE: 16:27:39:(---param:InformationVariable...)
VERBOSE: 16:27:39:(---param:OutVariable...)
VERBOSE: 16:27:39:(---param:OutBuffer...)
VERBOSE: 16:27:39:(---param:PipelineVariable...)
VERBOSE: 16:27:39:(=cmd:get-EventsFiltered...)
VERBOSE: 16:27:39:(---param:LogName...)
VERBOSE: 16:27:39:(---param:ID...)
VERBOSE: 16:27:39:(---param:ProviderName...)
VERBOSE: 16:27:39:(---param:Message...)
VERBOSE: 16:27:39:(---param:Type...)
VERBOSE: 16:27:39:(---param:Level...)
VERBOSE: 16:27:39:(---param:MaxEvents...)
VERBOSE: 16:27:39:(---param:StartTime...)
VERBOSE: 16:27:39:(---param:EndTime...)
VERBOSE: 16:27:39:(---param:AMPMFilter...)
VERBOSE: 16:27:39:(---param:FailureAudit...)
VERBOSE: 16:27:39:(---param:SuccessAudit...)
VERBOSE: 16:27:39:(---param:showDebug...)
VERBOSE: 16:27:39:(---param:Verbose...)
VERBOSE: 16:27:39:(---param:Debug...)
VERBOSE: 16:27:39:(---param:ErrorAction...)
VERBOSE: 16:27:39:(---param:WarningAction...)
VERBOSE: 16:27:39:(---param:InformationAction...)
VERBOSE: 16:27:39:(---param:ErrorVariable...)
VERBOSE: 16:27:39:(---param:WarningVariable...)
VERBOSE: 16:27:39:(---param:InformationVariable...)
VERBOSE: 16:27:39:(---param:OutVariable...)
VERBOSE: 16:27:39:(---param:OutBuffer...)
VERBOSE: 16:27:39:(---param:PipelineVariable...)
VERBOSE: 16:27:39:(=cmd:get-lastevent...)
VERBOSE: 16:27:39:(---param:MaxEvents...)
VERBOSE: 16:27:39:(---param:FinalEvents...)
VERBOSE: 16:27:39:(---param:Bootup...)
VERBOSE: 16:27:39:(---param:Shutdown...)
VERBOSE: 16:27:39:(---param:Sleep...)
VERBOSE: 16:27:39:(---param:Wake...)
VERBOSE: 16:27:39:(---param:Logon...)
VERBOSE: 16:27:39:(---param:Logoff...)
VERBOSE: 16:27:39:(---param:Verbose...)
VERBOSE: 16:27:39:(---param:Debug...)
VERBOSE: 16:27:39:(---param:ErrorAction...)
VERBOSE: 16:27:39:(---param:WarningAction...)
VERBOSE: 16:27:39:(---param:InformationAction...)
VERBOSE: 16:27:39:(---param:ErrorVariable...)
VERBOSE: 16:27:39:(---param:WarningVariable...)
VERBOSE: 16:27:39:(---param:InformationVariable...)
VERBOSE: 16:27:39:(---param:OutVariable...)
VERBOSE: 16:27:39:(---param:OutBuffer...)
VERBOSE: 16:27:39:(---param:PipelineVariable...)
VERBOSE: 16:27:39:(=cmd:get-lastlogon...)
VERBOSE: 16:27:39:(---param:Verbose...)
VERBOSE: 16:27:39:(---param:Debug...)
VERBOSE: 16:27:39:(---param:ErrorAction...)
VERBOSE: 16:27:39:(---param:WarningAction...)
VERBOSE: 16:27:39:(---param:InformationAction...)
VERBOSE: 16:27:39:(---param:ErrorVariable...)
VERBOSE: 16:27:39:(---param:WarningVariable...)
VERBOSE: 16:27:39:(---param:InformationVariable...)
VERBOSE: 16:27:39:(---param:OutVariable...)
VERBOSE: 16:27:39:(---param:OutBuffer...)
VERBOSE: 16:27:39:(---param:PipelineVariable...)
VERBOSE: 16:27:39:(=cmd:get-lastshutdown...)
VERBOSE: 16:27:39:(---param:Verbose...)
VERBOSE: 16:27:39:(---param:Debug...)
VERBOSE: 16:27:39:(---param:ErrorAction...)
VERBOSE: 16:27:39:(---param:WarningAction...)
VERBOSE: 16:27:39:(---param:InformationAction...)
VERBOSE: 16:27:40:(---param:ErrorVariable...)
VERBOSE: 16:27:40:(---param:WarningVariable...)
VERBOSE: 16:27:40:(---param:InformationVariable...)
VERBOSE: 16:27:40:(---param:OutVariable...)
VERBOSE: 16:27:40:(---param:OutBuffer...)
VERBOSE: 16:27:40:(---param:PipelineVariable...)
VERBOSE: 16:27:40:(=cmd:get-lastsleep...)
VERBOSE: 16:27:40:(---param:Verbose...)
VERBOSE: 16:27:40:(---param:Debug...)
VERBOSE: 16:27:40:(---param:ErrorAction...)
VERBOSE: 16:27:40:(---param:WarningAction...)
VERBOSE: 16:27:40:(---param:InformationAction...)
VERBOSE: 16:27:40:(---param:ErrorVariable...)
VERBOSE: 16:27:40:(---param:WarningVariable...)
VERBOSE: 16:27:40:(---param:InformationVariable...)
VERBOSE: 16:27:40:(---param:OutVariable...)
VERBOSE: 16:27:40:(---param:OutBuffer...)
VERBOSE: 16:27:40:(---param:PipelineVariable...)
VERBOSE: 16:27:40:(=cmd:get-lastwake...)
VERBOSE: 16:27:40:(---param:Verbose...)
VERBOSE: 16:27:40:(---param:Debug...)
VERBOSE: 16:27:40:(---param:ErrorAction...)
VERBOSE: 16:27:40:(---param:WarningAction...)
VERBOSE: 16:27:40:(---param:InformationAction...)
VERBOSE: 16:27:40:(---param:ErrorVariable...)
VERBOSE: 16:27:40:(---param:WarningVariable...)
VERBOSE: 16:27:40:(---param:InformationVariable...)
VERBOSE: 16:27:40:(---param:OutVariable...)
VERBOSE: 16:27:40:(---param:OutBuffer...)
VERBOSE: 16:27:40:(---param:PipelineVariable...)
VERBOSE: 16:27:40:(=cmd:get-winEventsLoopedIDs...)
VERBOSE: 16:27:40:(---param:MaxEvents...)
VERBOSE: 16:27:40:(---param:FinalEvents...)
VERBOSE: 16:27:40:(---param:Filter...)
VERBOSE: 16:27:40:(---param:Verbose...)
VERBOSE: 16:27:40:(---param:Debug...)
VERBOSE: 16:27:40:(---param:ErrorAction...)
VERBOSE: 16:27:40:(---param:WarningAction...)
VERBOSE: 16:27:40:(---param:InformationAction...)
VERBOSE: 16:27:40:(---param:ErrorVariable...)
VERBOSE: 16:27:40:(---param:WarningVariable...)
VERBOSE: 16:27:40:(---param:InformationVariable...)
VERBOSE: 16:27:40:(---param:OutVariable...)
VERBOSE: 16:27:40:(---param:OutBuffer...)
VERBOSE: 16:27:40:(---param:PipelineVariable...)
VERBOSE: 16:27:40:(=cmd:Start-IseTranscript...)
VERBOSE: 16:27:40:(---param:Logname...)
VERBOSE: 16:27:40:(---param:Verbose...)
VERBOSE: 16:27:40:(---param:Debug...)
VERBOSE: 16:27:40:(---param:ErrorAction...)
VERBOSE: 16:27:40:(---param:WarningAction...)
VERBOSE: 16:27:40:(---param:InformationAction...)
VERBOSE: 16:27:40:(---param:ErrorVariable...)
VERBOSE: 16:27:40:(---param:WarningVariable...)
VERBOSE: 16:27:40:(---param:InformationVariable...)
VERBOSE: 16:27:40:(---param:OutVariable...)
VERBOSE: 16:27:40:(---param:OutBuffer...)
VERBOSE: 16:27:40:(---param:PipelineVariable...)
VERBOSE: 16:27:40:(=cmd:Start-Log...)
VERBOSE: 16:27:40:(---param:Path...)
VERBOSE: 16:27:40:(---param:Tag...)
VERBOSE: 16:27:40:(---param:NoTimeStamp...)
VERBOSE: 16:27:40:(---param:TagFirst...)
VERBOSE: 16:27:40:(---param:showDebug...)
VERBOSE: 16:27:40:(---param:whatIf...)
VERBOSE: 16:27:40:(---param:Verbose...)
VERBOSE: 16:27:40:(---param:Debug...)
VERBOSE: 16:27:40:(---param:ErrorAction...)
VERBOSE: 16:27:40:(---param:WarningAction...)
VERBOSE: 16:27:40:(---param:InformationAction...)
VERBOSE: 16:27:40:(---param:ErrorVariable...)
VERBOSE: 16:27:40:(---param:WarningVariable...)
VERBOSE: 16:27:40:(---param:InformationVariable...)
VERBOSE: 16:27:40:(---param:OutVariable...)
VERBOSE: 16:27:40:(---param:OutBuffer...)
VERBOSE: 16:27:40:(---param:PipelineVariable...)
VERBOSE: 16:27:40:(=cmd:start-TranscriptLog...)
VERBOSE: 16:27:40:(---param:Transcript...)
VERBOSE: 16:27:40:(---param:Verbose...)
VERBOSE: 16:27:40:(---param:Debug...)
VERBOSE: 16:27:40:(---param:ErrorAction...)
VERBOSE: 16:27:40:(---param:WarningAction...)
VERBOSE: 16:27:40:(---param:InformationAction...)
VERBOSE: 16:27:40:(---param:ErrorVariable...)
VERBOSE: 16:27:40:(---param:WarningVariable...)
VERBOSE: 16:27:40:(---param:InformationVariable...)
VERBOSE: 16:27:40:(---param:OutVariable...)
VERBOSE: 16:27:40:(---param:OutBuffer...)
VERBOSE: 16:27:40:(---param:PipelineVariable...)
VERBOSE: 16:27:40:(=cmd:Stop-TranscriptLog...)
VERBOSE: 16:27:40:(---param:Transcript...)
VERBOSE: 16:27:40:(---param:Verbose...)
VERBOSE: 16:27:40:(---param:Debug...)
VERBOSE: 16:27:40:(---param:ErrorAction...)
VERBOSE: 16:27:40:(---param:WarningAction...)
VERBOSE: 16:27:40:(---param:InformationAction...)
VERBOSE: 16:27:40:(---param:ErrorVariable...)
VERBOSE: 16:27:40:(---param:WarningVariable...)
VERBOSE: 16:27:40:(---param:InformationVariable...)
VERBOSE: 16:27:40:(---param:OutVariable...)
VERBOSE: 16:27:40:(---param:OutBuffer...)
VERBOSE: 16:27:40:(---param:PipelineVariable...)
VERBOSE: 16:27:40:(=cmd:Test-Transcribing...)
VERBOSE: 16:27:40:(---param:Verbose...)
VERBOSE: 16:27:40:(---param:Debug...)
VERBOSE: 16:27:40:(---param:ErrorAction...)
VERBOSE: 16:27:40:(---param:WarningAction...)
VERBOSE: 16:27:40:(---param:InformationAction...)
VERBOSE: 16:27:40:(---param:ErrorVariable...)
VERBOSE: 16:27:40:(---param:WarningVariable...)
VERBOSE: 16:27:40:(---param:InformationVariable...)
VERBOSE: 16:27:40:(---param:OutVariable...)
VERBOSE: 16:27:40:(---param:OutBuffer...)
VERBOSE: 16:27:40:(---param:PipelineVariable...)
VERBOSE: 16:27:40:(=cmd:test-Transcribing2...)
VERBOSE: 16:27:40:(---param:Verbose...)
VERBOSE: 16:27:40:(---param:Debug...)
VERBOSE: 16:27:40:(---param:ErrorAction...)
VERBOSE: 16:27:40:(---param:WarningAction...)
VERBOSE: 16:27:40:(---param:InformationAction...)
VERBOSE: 16:27:40:(---param:ErrorVariable...)
VERBOSE: 16:27:40:(---param:WarningVariable...)
VERBOSE: 16:27:40:(---param:InformationVariable...)
VERBOSE: 16:27:40:(---param:OutVariable...)
VERBOSE: 16:27:40:(---param:OutBuffer...)
VERBOSE: 16:27:40:(---param:PipelineVariable...)
VERBOSE: 16:27:40:(---param:WhatIf...)
VERBOSE: 16:27:40:(---param:Confirm...)
VERBOSE: 16:27:40:(=cmd:Test-TranscriptionSupported...)
VERBOSE: 16:27:40:(---param:Verbose...)
VERBOSE: 16:27:40:(---param:Debug...)
VERBOSE: 16:27:40:(---param:ErrorAction...)
VERBOSE: 16:27:40:(---param:WarningAction...)
VERBOSE: 16:27:40:(---param:InformationAction...)
VERBOSE: 16:27:40:(---param:ErrorVariable...)
VERBOSE: 16:27:40:(---param:WarningVariable...)
VERBOSE: 16:27:40:(---param:InformationVariable...)
VERBOSE: 16:27:40:(---param:OutVariable...)
VERBOSE: 16:27:40:(---param:OutBuffer...)
VERBOSE: 16:27:40:(---param:PipelineVariable...)
VERBOSE: 16:27:40:(=cmd:Write-Log...)
VERBOSE: 16:27:40:(---param:Message...)
VERBOSE: 16:27:40:(---param:Path...)
VERBOSE: 16:27:40:(---param:Level...)
VERBOSE: 16:27:40:(---param:useHost...)
VERBOSE: 16:27:40:(---param:NoEcho...)
VERBOSE: 16:27:40:(---param:NoClobber...)
VERBOSE: 16:27:40:(---param:showDebug...)
VERBOSE: 16:27:40:(---param:Verbose...)
VERBOSE: 16:27:40:(---param:Debug...)
VERBOSE: 16:27:40:(---param:ErrorAction...)
VERBOSE: 16:27:40:(---param:WarningAction...)
VERBOSE: 16:27:40:(---param:InformationAction...)
VERBOSE: 16:27:40:(---param:ErrorVariable...)
VERBOSE: 16:27:40:(---param:WarningVariable...)
VERBOSE: 16:27:40:(---param:InformationVariable...)
VERBOSE: 16:27:40:(---param:OutVariable...)
VERBOSE: 16:27:40:(---param:OutBuffer...)
VERBOSE: 16:27:40:(---param:PipelineVariable...)
16:27:40:Detecting new features
16:27:41:Detecting breaking changes
VERBOSE: (backup-FileTDO -path C:\sc\verb-logging\fingerprint)
16:27:41:Writing fingerprint: Out-File w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Encoding                       utf8                                                                                                        
FilePath                       C:\sc\verb-logging\fingerprint                                                                              
whatif                         False                                                                                                       
Verbose                        True
VERBOSE: Performing the operation "Output to File" on target "C:\sc\verb-logging\fingerprint".
16:27:41:

Fingerprint analysis recommends ModuleVersion Step:Patch. 

This can be implemented with the following command:

Step-ModuleVersion -Path C:\sc\verb-logging\verb-logging\verb-logging.psd1 -By Patch

(the above will use the BuildHelpers module to update the revision stored in the Manifest .psd1 file for the module).
VERBOSE: 16:27:42:Minor/New-Feature Chgs:


Major/Removal/Breaking Chgs:
16:27:42:-applyChange *not* specified, returning 'bumpVersionType' specification to pipeline:
16:27:42:#*======^ RUNNING :Step-ModuleVersionCalculated:c:\sc\verb-logging ^======
16:27:42:----PsdVers incremented from 1.1.1 to 1.1.2
16:27:42:process-NewModule w
Name                           Value                                                                                                       
----                           -----                                                                                                       
ModuleName                     verb-logging                                                                                                
ModDirPath                     c:\sc\verb-logging                                                                                          
RequiredVersion                1.1.2                                                                                                       
Repository                     lyncRepo                                                                                                    
Merge                          True                                                                                                        
RunTest                        True                                                                                                        
showdebug                      False                                                                                                       
whatif                         False                                                                                                       
verbose                        True
VERBOSE: (running verb-dev:process-NewModule)
VERBOSE: $PSBoundParameters:
Key             Value             
---             -----             
ModuleName      verb-logging      
ModDirPath      c:\sc\verb-logging
RequiredVersion 1.1.2             
Repository      lyncRepo          
Merge           True              
RunTest         True              
showDebug       False             
whatIf          False             
Verbose         True
16:27:45:( processing $tModName:verb-logging	$tModFile:C:\sc\verb-logging\verb-logging\verb-logging.psm1	$tModCmdlet:write-log )
VERBOSE: (confirmed verb-logging loaded: write-log present)
16:27:45:( processing $tModName:verb-IO	$tModFile:C:\sc\verb-IO\verb-IO\verb-IO.psm1	$tModCmdlet:Add-PSTitleBar )
VERBOSE: (confirmed verb-IO loaded: Add-PSTitleBar present)
16:27:46:( processing $tModName:verb-Mods	$tModFile:C:\sc\verb-Mods\verb-Mods\verb-Mods.psm1	$tModCmdlet:check-ReqMods )
VERBOSE: (confirmed verb-Mods loaded: check-ReqMods present)
16:27:46:( processing $tModName:verb-Text	$tModFile:C:\sc\verb-Text\verb-Text\verb-Text.psm1	$tModCmdlet:Remove-StringDiacritic )
VERBOSE: (confirmed verb-Text loaded: Remove-StringDiacritic present)
VERBOSE: start-Log w
Name                           Value                                                                                                       
----                           -----                                                                                                       
Path                           C:\sc\verb-dev\verb-dev\VERB-dev.psm1                                                                       
NoTimeStamp                    False                                                                                                       
Tag                            verb-logging                                                                                                
showdebug                      False                                                                                                       
Verbose                        True                                                                                                        
whatif                         False
VERBOSE: Name                           Value                                                                                                       
----                           -----                                                                                                       
logging                        True                                                                                                        
logfile                        C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-logging-LOG-BATCH-EXEC-20220908-1627PM-log.txt                   
transcript                     C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-logging-Transcript-BATCH-EXEC-20220908-1627PM-trans-log.txt
**********************
Windows PowerShell transcript end
End time: 20220908162747
**********************
