**********************
Windows PowerShell transcript start
Start time: 20240917130932
Username: TORO\kadritss
RunAs User: TORO\kadritss
Configuration Name: 
Machine: LYN-9C5CTV3 (Microsoft Windows NT 10.0.19045.0)
Host Application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
Process ID: 15248
PSVersion: 5.1.19041.4780
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.19041.4780
Platform: Win32NT
BuildVersion: 10.0.19041.4780
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
OS: Microsoft Windows NT 10.0.19045.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-text-Transcript-BATCH-EXEC-20240917-1309PM-trans-log.txt
13:09:32: INFO:  #*======v VERB-dev.psm1:verb-text v======
13:09:32: VERBOSE:  ($modRoot is blank, assigning from mandetory param:$ModDirPath)
13:09:32:(executing:Get-BuildEnvironment -Path c:\sc\verb-text 
(use -NoBuildInfo if hangs))
13:09:32: INFO:  Run: reset-ModulePublishingDirectory -ModuleName verb-text
VERBOSE: $PSBoundParameters:
Key        Value    
---        -----    
ModuleName verb-text
whatIf     False    
Verbose    True
13:09:32: ##  
#*------v PROCESSING : verb-text v------
13:09:32: INFO:  Pre-purge (CHANGELOG|README)\.md$ Root dir matches from :
processing:Resource...
13:09:32: INFO:  verb-text resolved $ModPubPath:C:\sc\verb-text\verb-text\
$ModResPath:C:\sc\verb-text\Resource\
13:09:32: VERBOSE:  (Reset module Resource files (purge from C:\sc\verb-text\verb-text\))
processing:Licenses...
13:09:32: INFO:  verb-text resolved $ModPubPath:C:\sc\verb-text\verb-text\
$ModResPath:C:\sc\verb-text\Licenses\
13:09:32: VERBOSE:  (Reset module Licenses files (purge from C:\sc\verb-text\verb-text\))
processing:Docs...
13:09:32: INFO:  verb-text resolved $ModPubPath:C:\sc\verb-text\verb-text\
$ModResPath:C:\sc\verb-text\Docs\
13:09:32: VERBOSE:  (Reset module Docs files (purge from C:\sc\verb-text\verb-text\))
13:09:32: INFO:  ==C:\sc\verb-text\CHANGELOG.md:
WARNING: removing matched C:\sc\verb-text\verb-text\CHANGELOG.md...
VERBOSE: Performing the operation "Remove File" on target "C:\sc\verb-text\verb-text\CHANGELOG.md".
13:09:32: INFO:  ==C:\sc\verb-text\README.md:
WARNING: removing matched C:\sc\verb-text\verb-text\README.md...
VERBOSE: Performing the operation "Remove File" on target "C:\sc\verb-text\verb-text\README.md".
13:09:32: INFO:  ==C:\sc\verb-text\Licenses\LICENSE:
WARNING: removing matched C:\sc\verb-text\verb-text\LICENSE...
VERBOSE: Performing the operation "Remove File" on target "C:\sc\verb-text\verb-text\LICENSE".
13:09:32: INFO:  ==C:\sc\verb-text\Docs\Quick-Start-Installation-and-Example.md:
WARNING: removing matched C:\sc\verb-text\verb-text\Quick-Start-Installation-and-Example.md...
VERBOSE: Performing the operation "Remove File" on target "C:\sc\verb-text\verb-text\Quick-Start-Installation-and-Example.md".
13:09:32: ##  
#*------^ PROCESSING : verb-text ^------
13:09:32: INFO:  Run: populate-ModulePublishingDirectory -ModuleName verb-text
VERBOSE: $PSBoundParameters:
Key        Value    
---        -----    
ModuleName verb-text
whatIf     False    
Verbose    True
13:09:32: ##  
#*------v PROCESSING : verb-text v------
13:09:32: INFO:  Locating (CHANGELOG|README)\.md$ Root dir matches from :
processing:Resource...
13:09:32: INFO:  verb-text resolved $ModPubPath:C:\sc\verb-text\verb-text\
$ModResPath:C:\sc\verb-text\Resource\
13:09:32: VERBOSE:  (Recopy module Resource files (copy from C:\sc\verb-text\verb-text\))
processing:Licenses...
13:09:32: INFO:  verb-text resolved $ModPubPath:C:\sc\verb-text\verb-text\
$ModResPath:C:\sc\verb-text\Licenses\
13:09:32: VERBOSE:  (Recopy module Licenses files (copy from C:\sc\verb-text\verb-text\))
processing:Docs...
13:09:32: INFO:  verb-text resolved $ModPubPath:C:\sc\verb-text\verb-text\
$ModResPath:C:\sc\verb-text\Docs\
13:09:32: VERBOSE:  (Recopy module Docs files (copy from C:\sc\verb-text\verb-text\))
13:09:32: INFO:  copy-item w
Name                           Value                                                         
----                           -----                                                         
path                           {C:\sc\verb-text\CHANGELOG.md, C:\sc\verb-text\README.md, C...
destination                    C:\sc\verb-text\verb-text\                                    
force                          True                                                          
erroraction                    STOP                                                          
verbose                        True                                                          
whatif                         False
--$pltCI.path:
C:\sc\verb-text\CHANGELOG.md
C:\sc\verb-text\README.md
C:\sc\verb-text\Licenses\LICENSE
C:\sc\verb-text\Docs\Quick-Start-Installation-and-Example.md
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-text\CHANGELOG.md Destination: C:\sc\verb-text\verb-text\CHANGELOG.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-text\README.md Destination: C:\sc\verb-text\verb-text\README.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-text\Licenses\LICENSE Destination: C:\sc\verb-text\verb-text\LICENSE".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-text\Docs\Quick-Start-Installation-and-Example.md Destination: C:\sc\verb-text\verb-text\Quick-Start-Installation-and-Example.md".
13:09:32: ##  
#*------^ PROCESSING : verb-text ^------
13:09:32: INFO:  Validate updated verb-text\verb-text dir contents against Manifest:
Run: test-modulemanifest -Path C:\sc\verb-text\verb-text\verb-text.psd1
VERBOSE: Loading module from path 'C:\sc\verb-text\verb-text\verb-Text.psm1'.
13:09:32: VERBOSE:  ((no $ttmm_Err: test-ModuleManifest had no errors))
13:09:32: INFO:  NON-Republish pass detected:
MERGE parm specified as well:`n-Merge Public|Internal|Classes include subdirs module content into updated .psm1
-Sign updated files.
-Uninstall/Remove existing profile module
-Copy new module to profile
-Confirm: Get-Module -ListAvailable
-Check/Update existing Psd1 Version
-Publish-Module
-Remove existing installed profile module
-Test Install-Module
-Test Import-Module
13:09:32: INFO:  -Merge specified...
13:09:32: INFO:  ConvertTo-ModuleMergedTDO w
Name                           Value                                                         
----                           -----                                                         
ModuleName                     verb-text                                                     
ModuleSourcePath               {c:\sc\verb-text\Public, c:\sc\verb-text\Internal}            
ModuleDestinationPath          c:\sc\verb-text\verb-text                                     
RequiredVersion                6.3.0                                                         
LogSpec                        {logging, logfile, transcript}                                
NoAliasExport                                                                                
ErrorAction                    Stop                                                          
showdebug                      False                                                         
whatif                         False
VERBOSE: $PSBoundParameters:
Key                   Value                                             
---                   -----                                             
ModuleName            verb-text                                         
ModuleSourcePath      {c:\sc\verb-text\Public, c:\sc\verb-text\Internal}
ModuleDestinationPath c:\sc\verb-text\verb-text                         
RequiredVersion       6.3.0                                             
LogSpec               {logging, logfile, transcript}                    
NoAliasExport         False                                             
ErrorAction           Stop                                              
showDebug             False                                             
whatIf                False
13:09:32: INFO:  ConvertTo-ModuleMergedTDO w
Name                           Value                                                         
----                           -----                                                         
ModuleName                     verb-text                                                     
ModuleSourcePath               {c:\sc\verb-text\Public, c:\sc\verb-text\Internal}            
ModuleDestinationPath          c:\sc\verb-text\verb-text                                     
RequiredVersion                6.3.0                                                         
LogSpec                        {logging, logfile, transcript}                                
NoAliasExport                                                                                
ErrorAction                    Stop                                                          
showdebug                      False                                                         
whatif                         False
VERBOSE: (backup-FileTDO -path c:\sc\verb-text\verb-text\verb-text.psm1)
VERBOSE: (backup-FileTDO -path c:\sc\verb-text\verb-text\verb-text.psd1)
DEADWOOD REMOVAL:remove-UnneededFileVariants w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-text\verb-text                                     
Include                        verb-text.psm1_*                                              
Pattern                        \.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$                               
FilterOn                       CreationTime                                                  
Keep                           2                                                             
KeepToday                      True                                                          
verbose                        True                                                          
whatif                         False
13:09:32:gci w
Name                           Value                                                         
----                           -----                                                         
path                           c:\sc\verb-text\verb-text\*                                   
include                        verb-text.psm1_*                                              
ErrorAction                    Stop
VERBOSE: $cuttime:09/17/2024 00:00:00
VERBOSE: post-filtering on pattern:\.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$
(5 in set *before* filtering)
(4 in set *after* filtering)
VERBOSE: filtering on files prior to $cuttime:09/17/2024 00:00:00 AM, on CreationTime property
(4 in set *before* filtering)
(3 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(3 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
13:09:32:Reducing matched population from 5 to 1 files via:
post-filtered files with regex pattern:\.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$
filtered files on CreationTime prior to 09/17/2024 00:00:00 AM
13:09:32:Remove-Item w 
Name                           Value                                                         
----                           -----                                                         
path                           C:\sc\verb-text\verb-text\verb-text.psm1_20240821-1619PM      
ErrorAction                    STOP                                                          
whatif                         False
13:09:32: INFO:  (NON-dyn psm1 detected - purging existing non-CBH content...)
VERBOSE: L13:09:33:(doesn't appear to be an inter meta-CBH block)
VERBOSE: adding $PostCBHBlock
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Value    {# verb-text.psm1...                                                                
Path     c:\sc\verb-text\verb-text\verb-text.psm1_TMP                                        
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False
VERBOSE: 13:09:33:(Set-ContentFixEncoding:c:\sc\verb-text\verb-text\verb-text.psm1_TMP)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
PassThru                       True                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
encoding                       UTF8                                                          
ErrorAction                    STOP
-Value[0,2]:
# verb-text.psm1
  <#
13:09:33: INFO:  Initialize-PSModuleDirectories w
Name                           Value                                                         
----                           -----                                                         
ModuleSourcePath               {c:\sc\verb-text\Public, c:\sc\verb-text\Internal}            
ModuleDestinationPath          c:\sc\verb-text\verb-text                                     
ErrorAction                    Stop                                                          
whatif                         False
VERBOSE: $PSBoundParameters:
Key                   Value                                             
---                   -----                                             
ModuleSourcePath      {c:\sc\verb-text\Public, c:\sc\verb-text\Internal}
ModuleDestinationPath c:\sc\verb-text\verb-text                         
ErrorAction           Stop                                              
whatIf                False
VERBOSE: (non-pipeline - param - input)
13:09:33: INFO:  
#*------v (1/2):C:\sc\verb-text\Public v------
13:09:33: INFO:  Processing 37 $ComponentScripts files through Remove-AuthenticodeSignature...
13:09:33: INFO:  Remove-AuthenticodeSignature w
Name                           Value                                                         
----                           -----                                                         
Path                           {C:\sc\verb-text\Public\compare-CodeRevision.ps1, C:\sc\ver...
whatif                         False                                                         
verbose                        True
VERBOSE: 13:09:33:((1/37):C:\sc\verb-text\Public\compare-CodeRevision.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((2/37):C:\sc\verb-text\Public\convert-CaesarCipher.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((3/37):C:\sc\verb-text\Public\Convert-CodePointToPSSyntaxTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((4/37):C:\sc\verb-text\Public\convertFrom-Base64String.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((5/37):C:\sc\verb-text\Public\convert-HtmlCodeToTextTDO.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((6/37):C:\sc\verb-text\Public\Convert-invertCase.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((7/37):C:\sc\verb-text\Public\convert-Rot13.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((8/37):C:\sc\verb-text\Public\convert-Rot47.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((9/37):C:\sc\verb-text\Public\convertto-AcronymFromCaps.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((10/37):C:\sc\verb-text\Public\convertTo-Base64String.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((11/37):C:\sc\verb-text\Public\convertto-Base64StringCommaQuoted.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((12/37):C:\sc\verb-text\Public\ConvertTo-CamelCase.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((13/37):C:\sc\verb-text\Public\ConvertTo-L33t.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((14/37):C:\sc\verb-text\Public\ConvertTo-lowerCamelCase.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((15/37):C:\sc\verb-text\Public\convertTo-PSHelpExample.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((16/37):C:\sc\verb-text\Public\convertTo-QuotedList.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((17/37):C:\sc\verb-text\Public\ConvertTo-SCase.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((18/37):C:\sc\verb-text\Public\ConvertTo-SNAKE_CASE.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((19/37):C:\sc\verb-text\Public\convertto-StringCommaQuote.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((20/37):C:\sc\verb-text\Public\ConvertTo-StringQuoted.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((21/37):C:\sc\verb-text\Public\convertTo-StringReverse.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((22/37):C:\sc\verb-text\Public\ConvertTo-StudlyCaps.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((23/37):C:\sc\verb-text\Public\convertTo-TitleCase.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((24/37):C:\sc\verb-text\Public\convertTo-UnWrappedText.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((25/37):C:\sc\verb-text\Public\convertTo-WordsReverse.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((26/37):C:\sc\verb-text\Public\convertTo-WrappedText.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((27/37):C:\sc\verb-text\Public\convert-UnicodeUPlusToCharCode.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((28/37):C:\sc\verb-text\Public\Get-CharInfo.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((29/37):C:\sc\verb-text\Public\get-StringHash.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((30/37):C:\sc\verb-text\Public\new-LoremString.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((31/37):C:\sc\verb-text\Public\Remove-StringDiacritic.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((32/37):C:\sc\verb-text\Public\Remove-StringLatinCharacters.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((33/37):C:\sc\verb-text\Public\test-IsGuid.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((34/37):C:\sc\verb-text\Public\test-IsNumeric.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((35/37):C:\sc\verb-text\Public\test-IsRegexPattern.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((36/37):C:\sc\verb-text\Public\test-IsRegexValid.ps1:has no existing Authenticode signature)
VERBOSE: 13:09:33:((37/37):C:\sc\verb-text\Public\test-IsUri.ps1:has no existing Authenticode signature)
13:09:33: INFO:  Processing (1/37):C:\sc\verb-text\Public\compare-CodeRevision.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v compare-CodeRevision.ps1 v------
function compare-CodeRevision {
13:09:33: INFO:  Processing (2/37):C:\sc\verb-text\Public\convert-CaesarCipher.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-CaesarCipher.ps1 v------
function convert-CaesarCipher {
13:09:33: INFO:  Processing (3/37):C:\sc\verb-text\Public\Convert-CodePointToPSSyntaxTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Convert-CodePointToPSSyntaxTDO.ps1 v------
function Convert-CodePointToPSSyntaxTDO {
13:09:33: INFO:  Processing (4/37):C:\sc\verb-text\Public\convertFrom-Base64String.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertFrom-Base64String.ps1 v------
function convertFrom-Base64String {
13:09:33: INFO:  Processing (5/37):C:\sc\verb-text\Public\convert-HtmlCodeToTextTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-HtmlCodeToTextTDO.ps1 v------
function convert-HtmlCodeToTextTDO {
13:09:33: INFO:  Processing (6/37):C:\sc\verb-text\Public\Convert-invertCase.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Convert-invertCase.ps1 v------
function Convert-invertCase {
13:09:33: INFO:  Processing (7/37):C:\sc\verb-text\Public\convert-Rot13.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-Rot13.ps1 v------
function convert-Rot13 {
13:09:33: INFO:  Processing (8/37):C:\sc\verb-text\Public\convert-Rot47.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-Rot47.ps1 v------
function convert-Rot47 {
13:09:33: INFO:  Processing (9/37):C:\sc\verb-text\Public\convertto-AcronymFromCaps.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertto-AcronymFromCaps.ps1 v------
Function convertto-AcronymFromCaps {
13:09:33: INFO:  Processing (10/37):C:\sc\verb-text\Public\convertTo-Base64String.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertTo-Base64String.ps1 v------
function convertTo-Base64String {
13:09:33: INFO:  Processing (11/37):C:\sc\verb-text\Public\convertto-Base64StringCommaQuoted.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertto-Base64StringCommaQuoted.ps1 v------
function convertto-Base64StringCommaQuoted{
13:09:33: INFO:  Processing (12/37):C:\sc\verb-text\Public\ConvertTo-CamelCase.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertTo-CamelCase.ps1 v------
function ConvertTo-CamelCase {
13:09:33: INFO:  Processing (13/37):C:\sc\verb-text\Public\ConvertTo-L33t.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertTo-L33t.ps1 v------
function ConvertTo-L33t {
13:09:33: INFO:  Processing (14/37):C:\sc\verb-text\Public\ConvertTo-lowerCamelCase.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertTo-lowerCamelCase.ps1 v------
function ConvertTo-lowerCamelCase {
13:09:33: INFO:  Processing (15/37):C:\sc\verb-text\Public\convertTo-PSHelpExample.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertTo-PSHelpExample.ps1 v------
Function convertTo-PSHelpExample {
13:09:33: INFO:  Processing (16/37):C:\sc\verb-text\Public\convertTo-QuotedList.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertTo-QuotedList.ps1 v------
Function convertTo-QuotedList {
13:09:33: INFO:  Processing (17/37):C:\sc\verb-text\Public\ConvertTo-SCase.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertTo-SCase.ps1 v------
function ConvertTo-SCase {
13:09:33: INFO:  Processing (18/37):C:\sc\verb-text\Public\ConvertTo-SNAKE_CASE.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertTo-SNAKE_CASE.ps1 v------
function ConvertTo-SNAKE_CASE {
13:09:33: INFO:  Processing (19/37):C:\sc\verb-text\Public\convertto-StringCommaQuote.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertto-StringCommaQuote.ps1 v------
function convertto-StringCommaQuote{
13:09:33: INFO:  Processing (20/37):C:\sc\verb-text\Public\ConvertTo-StringQuoted.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertTo-StringQuoted.ps1 v------
Function ConvertTo-StringQuoted {
13:09:33: INFO:  Processing (21/37):C:\sc\verb-text\Public\convertTo-StringReverse.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertTo-StringReverse.ps1 v------
function convertTo-StringReverse {
13:09:33: INFO:  Processing (22/37):C:\sc\verb-text\Public\ConvertTo-StudlyCaps.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v ConvertTo-StudlyCaps.ps1 v------
function convertTo-StUdlycaPs {
13:09:33: INFO:  Processing (23/37):C:\sc\verb-text\Public\convertTo-TitleCase.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertTo-TitleCase.ps1 v------
function convertTo-TitleCase {
13:09:33: INFO:  Processing (24/37):C:\sc\verb-text\Public\convertTo-UnWrappedText.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertTo-UnWrappedText.ps1 v------
Function convertTo-UnWrappedText {
13:09:33: INFO:  Processing (25/37):C:\sc\verb-text\Public\convertTo-WordsReverse.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertTo-WordsReverse.ps1 v------
Function convertTo-WordsReverse {
13:09:33: INFO:  Processing (26/37):C:\sc\verb-text\Public\convertTo-WrappedText.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convertTo-WrappedText.ps1 v------
Function convertTo-WrappedText {
13:09:33: INFO:  Processing (27/37):C:\sc\verb-text\Public\convert-UnicodeUPlusToCharCode.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-UnicodeUPlusToCharCode.ps1 v------
function convert-UnicodeUPlusToCharCode {
13:09:33: INFO:  Processing (28/37):C:\sc\verb-text\Public\Get-CharInfo.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-CharInfo.ps1 v------
function Get-CharInfo {
13:09:33: INFO:  Processing (29/37):C:\sc\verb-text\Public\get-StringHash.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v get-StringHash.ps1 v------
function get-StringHash {
13:09:33: INFO:  Processing (30/37):C:\sc\verb-text\Public\new-LoremString.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v new-LoremString.ps1 v------
function new-LoremString {
13:09:33: INFO:  Processing (31/37):C:\sc\verb-text\Public\Remove-StringDiacritic.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-StringDiacritic.ps1 v------
function Remove-StringDiacritic {
13:09:33: INFO:  Processing (32/37):C:\sc\verb-text\Public\Remove-StringLatinCharacters.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-StringLatinCharacters.ps1 v------
function Remove-StringLatinCharacters {
13:09:33: INFO:  Processing (33/37):C:\sc\verb-text\Public\test-IsGuid.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:33:(Add-ContentFixEncoding:)
VERBOSE: 13:09:33:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v test-IsGuid.ps1 v------
function Test-IsGuid{
13:09:33: INFO:  Processing (34/37):C:\sc\verb-text\Public\test-IsNumeric.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:34:(Add-ContentFixEncoding:)
VERBOSE: 13:09:34:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v test-IsNumeric.ps1 v------
Function test-IsNumeric {
13:09:34: INFO:  Processing (35/37):C:\sc\verb-text\Public\test-IsRegexPattern.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:34:(Add-ContentFixEncoding:)
VERBOSE: 13:09:34:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v test-IsRegexPattern.ps1 v------
Function test-IsRegexPattern {
13:09:34: INFO:  Processing (36/37):C:\sc\verb-text\Public\test-IsRegexValid.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:34:(Add-ContentFixEncoding:)
VERBOSE: 13:09:34:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v test-IsRegexValid.ps1 v------
Function test-IsRegexValid {
13:09:34: INFO:  Processing (37/37):C:\sc\verb-text\Public\test-IsUri.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:34:(Add-ContentFixEncoding:)
VERBOSE: 13:09:34:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*------v test-IsUri.ps1 v------
function test-IsUri{
13:09:34: INFO:  
#*------^ (1/2):C:\sc\verb-text\Public ^------
13:09:34: INFO:  
#*------v (2/2):C:\sc\verb-text\Internal v------
13:09:34: INFO:  Processing 0 $ComponentScripts files through Remove-AuthenticodeSignature...
13:09:34: INFO:  Remove-AuthenticodeSignature w
Name                           Value                                                         
----                           -----                                                         
Path                                                                                         
whatif                         False                                                         
verbose                        True
13:09:34: INFO:  
#*------^ (2/2):C:\sc\verb-text\Internal ^------
VERBOSE: (no Public\_CommonCode.ps1)
13:09:34: INFO:  (Updating Psm1 Export-ModuleMember -Function to reflect Public modules)
13:09:34: INFO:  Adding:FooterBlock...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}                                      
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    ...
VERBOSE: 13:09:34:(Add-ContentFixEncoding:)
VERBOSE: 13:09:34:Set-Content w
Name                           Value                                                         
----                           -----                                                         
encoding                       UTF8                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
PassThru                       True                                                          
ErrorAction                    STOP
-Value[0,2]:
#*======^ END FUNCTIONS ^======
Export-ModuleMember -Function compare-CodeRevision,convert-CaesarCipher,_encode,_decode,Convert-CodePointToPSSyntaxTDO,convertFrom-Base64String,convert-HtmlCodeToTextTDO,Convert-invertCase,convert-Rot13,convert-Rot47,convertto-AcronymFromCaps,convertTo-Base64String,convertto-Base64StringCommaQuoted,ConvertTo-CamelCase,ConvertTo-L33t,ConvertTo-lowerCamelCase,convertTo-PSHelpExample,convertTo-QuotedList,ConvertTo-SCase,ConvertTo-SNAKE_CASE,convertto-StringCommaQuote,ConvertTo-StringQuoted,convertTo-StringReverse,convertTo-StUdlycaPs,convertTo-TitleCase,convertTo-UnWrappedText,convertTo-WordsReverse,convertTo-WrappedText,convert-UnicodeUPlusToCharCode,Get-CharInfo,ReadUnicodeRanges,ReadUnicodeData,out,get-StringHash,new-LoremString,Remove-StringDiacritic,Remove-StringLatinCharacters,Test-IsGuid,test-IsNumeric,test-IsRegexPattern,test-IsRegexValid,test-IsUri -Alias *
13:09:34: INFO:  Updating the Psd1 FunctionsToExport to match
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     c:\sc\verb-text\verb-text\verb-text.psd1_TMP                                        
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    {#...
VERBOSE: 13:09:34:(Set-ContentFixEncoding:c:\sc\verb-text\verb-text\verb-text.psd1_TMP)
VERBOSE: 13:09:34:Set-Content w
Name                           Value                                                         
----                           -----                                                         
PassThru                       True                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psd1_TMP                  
whatif                         False                                                         
encoding                       UTF8                                                          
ErrorAction                    STOP
-Value[0,2]:
#
# Module manifest for module 'verb-Text'
13:09:34: INFO:  confirm-ModuleBuildSync w
Name                           Value                                                         
----                           -----                                                         
ModPsdPath                     c:\sc\verb-text\verb-text\verb-text.psd1_TMP                  
RequiredVersion                6.3.0                                                         
NoTest                         True                                                          
whatif                         False                                                         
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                         
---             -----                                         
ModPsdPath      {c:\sc\verb-text\verb-text\verb-text.psd1_TMP}
RequiredVersion 6.3.0                                         
NoTest          True                                          
whatIf          False                                         
Verbose         True
13:09:34: INFO:  #*======v confirm-ModuleBuildSync:  v======
VERBOSE: (non-pipeline - param - input)
13:09:34: INFO:  (test-path confirms $ModPsm1 & $ModTestPs1)
13:09:34: INFO:  Import-PowerShellDataFile w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-text\verb-text\verb-text.psd1_TMP                  
ErrorAction                    Stop                                                          
verbose                        True
13:09:34: INFO:  (resolved Module attributes:
$ModuleName:	verb-text
$ModRoot:	c:\sc\verb-text
$ModPsd1:	c:\sc\verb-text\verb-text\verb-text.psd1_TMP
$ModPsm1:	c:\sc\verb-text\verb-text\verb-text.psm1_TMP
$ModTestPs1:	c:\sc\verb-text\Tests\verb-text.tests.ps1
$psd1Vers:	6.3.0
$psd1guid:	17eb54c0-da66-4673-816a-586ff5e3090b)
13:09:34: INFO:  confirm-ModulePsd1Version w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-text\verb-text\verb-text.psd1_TMP                  
RequiredVersion                6.3.0                                                         
whatif                         False                                                         
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                         
---             -----                                         
Path            {c:\sc\verb-text\verb-text\verb-text.psd1_TMP}
RequiredVersion 6.3.0                                         
whatIf          False                                         
Verbose         True
13:09:34: INFO:  #*======v confirm-ModulePsd1Version: c:\sc\verb-text\verb-text\verb-text.psd1_TMP v======
VERBOSE: (non-pipeline - param - input)
13:09:34: INFO:  (Version already updated to match)
13:09:34: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Version                        6.3.0                                                         
Valid                          False
13:09:34: INFO:  (SET:$objReport.Valid = $true ;)
13:09:34: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Version                        6.3.0                                                         
Valid                          True
13:09:34: INFO:  #*======^ confirm-ModulePsd1Version: c:\sc\verb-text\verb-text\verb-text.psd1_TMP ^======
13:09:34: INFO:  (confirm-ModulePsd1Version:Success)
13:09:34: INFO:  confirm-ModulePsm1Version w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
RequiredVersion                6.3.0                                                         
whatif                         False                                                         
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                         
---             -----                                         
Path            {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}
RequiredVersion 6.3.0                                         
whatIf          False                                         
Verbose         True
13:09:34: INFO:  #*======v confirm-ModulePsm1Version: c:\sc\verb-text\verb-text\verb-text.psm1_TMP v======
VERBOSE: (non-pipeline - param - input)
13:09:34: WARNING:  In:c:\sc\verb-text\verb-text\verb-text.psm1_TMP
Version present:(6.2.3)
*does not* properly match:6.3.0
FORCING MATCHING UPDATE!
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     c:\sc\verb-text\verb-text\verb-text.psm1_TMP                                        
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    {# verb-text.psm1...
VERBOSE: 13:09:34:(Set-ContentFixEncoding:c:\sc\verb-text\verb-text\verb-text.psm1_TMP)
VERBOSE: 13:09:34:Set-Content w
Name                           Value                                                         
----                           -----                                                         
PassThru                       True                                                          
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
encoding                       UTF8                                                          
ErrorAction                    STOP
-Value[0,2]:
# verb-text.psm1
  <#
13:09:34: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Version                        6.3.0                                                         
Valid                          False
13:09:34: INFO:  (SET:$objReport.Valid = $true ;)
13:09:34: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Version                        6.3.0                                                         
Valid                          True
13:09:34: INFO:  #*======^ confirm-ModulePsm1Version: c:\sc\verb-text\verb-text\verb-text.psm1_TMP ^======
13:09:34: INFO:  (confirm-ModulePsm1Version:Success)
13:09:34: INFO:  (-NoTest: skipping confirm-ModuleTestPs1Guid)
13:09:34: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Manifest                       c:\sc\verb-text\verb-text\verb-text.psd1_TMP                  
Module                         c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
Pester                         (SKIPPED)                                                     
Guid                           (SKIPPED)                                                     
Version                        6.3.0                                                         
Valid                          False
13:09:34: INFO:  (SET:$objReport.Valid = $true ;)
13:09:34: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Manifest                       c:\sc\verb-text\verb-text\verb-text.psd1_TMP                  
Module                         c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
Pester                         (SKIPPED)                                                     
Guid                           (SKIPPED)                                                     
Version                        6.3.0                                                         
Valid                          True
13:09:34: INFO:  #*======^ confirm-ModuleBuildSync:  ^======
13:09:34: INFO:  (confirm-ModuleBuildSync:Success)
13:09:34: INFO:  Test-ModuleTMPFiles w
Name                           Value                                                         
----                           -----                                                         
ModuleNamePSM1Path             c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
verbose                        True
VERBOSE: $PSBoundParameters:
Key                Value                                         
---                -----                                         
ModuleNamePSM1Path {c:\sc\verb-text\verb-text\verb-text.psm1_TMP}
Verbose            True
13:09:34: INFO:  #*======v Test-ModuleTMPFiles: c:\sc\verb-text\verb-text\verb-text.psm1_TMP v======
VERBOSE: (non-pipeline - param - input)
13:09:34: INFO:  
Psm1:c:\sc\verb-text\verb-text\verb-text.psm1_TMP
Psd1:c:\sc\verb-text\verb-text\verb-text.psd1_TMP
13:09:34: INFO:  Creating Testable c:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a335c6.psd1
 to validate c:\sc\verb-text\verb-text\verb-text.psd1_TMP will Test-ModuleManifest
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-text\verb-text\verb-text.psd1_TMP Destination: C:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a335c6.psd1".
13:09:34: INFO:  Test-ModuleManifest w
Name                           Value                                                         
----                           -----                                                         
verbose                        True                                                          
Path                           c:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a33...
ErrorVariable                  vManiErr                                                      
ErrorAction                    STOP
VERBOSE: Loading module from path 'C:\sc\verb-text\verb-text\verb-Text.psm1'.
13:09:34: INFO:  Test-ModuleManifest:PASSED
13:09:34: INFO:  Creating Testable c:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a335c6.psm1
 to validate c:\sc\verb-text\verb-text\verb-text.psm1_TMP will Import-Module
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-text\verb-text\verb-text.psm1_TMP Destination: C:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a335c6.psm1".
13:09:34: INFO:  n import-module w
Name                           Value                                                         
----                           -----                                                         
Name                           c:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a33...
Force                          True                                                          
verbose                        True                                                          
ErrorAction                    STOP                                                          
ErrorVariable                  vIpMoErr                                                      
PassThru                       True
VERBOSE: Loading module from path 'C:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a335c6.psm1'.
VERBOSE: Importing function 'compare-CodeRevision'.
VERBOSE: Importing function 'convert-CaesarCipher'.
VERBOSE: Importing function 'Convert-CodePointToPSSyntaxTDO'.
VERBOSE: Importing function 'convert-HtmlCodeToTextTDO'.
VERBOSE: Importing function 'Convert-invertCase'.
VERBOSE: Importing function 'convert-Rot13'.
VERBOSE: Importing function 'convert-Rot47'.
VERBOSE: Importing function 'convert-UnicodeUPlusToCharCode'.
VERBOSE: Importing function 'convertFrom-Base64String'.
VERBOSE: Importing function 'convertto-AcronymFromCaps'.
VERBOSE: Importing function 'convertTo-Base64String'.
VERBOSE: Importing function 'convertto-Base64StringCommaQuoted'.
VERBOSE: Importing function 'ConvertTo-CamelCase'.
VERBOSE: Importing function 'ConvertTo-L33t'.
VERBOSE: Importing function 'ConvertTo-lowerCamelCase'.
VERBOSE: Importing function 'convertTo-PSHelpExample'.
VERBOSE: Importing function 'convertTo-QuotedList'.
VERBOSE: Importing function 'ConvertTo-SCase'.
VERBOSE: Importing function 'ConvertTo-SNAKE_CASE'.
VERBOSE: Importing function 'convertto-StringCommaQuote'.
VERBOSE: Importing function 'ConvertTo-StringQuoted'.
VERBOSE: Importing function 'convertTo-StringReverse'.
VERBOSE: Importing function 'convertTo-StUdlycaPs'.
VERBOSE: Importing function 'convertTo-TitleCase'.
VERBOSE: Importing function 'convertTo-UnWrappedText'.
VERBOSE: Importing function 'convertTo-WordsReverse'.
VERBOSE: Importing function 'convertTo-WrappedText'.
VERBOSE: Importing function 'Get-CharInfo'.
VERBOSE: Importing function 'get-StringHash'.
VERBOSE: Importing function 'new-LoremString'.
VERBOSE: Importing function 'Remove-StringDiacritic'.
VERBOSE: Importing function 'Remove-StringLatinCharacters'.
VERBOSE: Importing function 'Test-IsGuid'.
VERBOSE: Importing function 'test-IsNumeric'.
VERBOSE: Importing function 'test-IsRegexPattern'.
VERBOSE: Importing function 'test-IsRegexValid'.
VERBOSE: Importing function 'test-IsUri'.
VERBOSE: Importing alias 'cfB64'.
VERBOSE: Importing alias 'chr'.
VERBOSE: Importing alias 'convertFrom-HtmlTDO'.
VERBOSE: Importing alias 'convertTo-CrAzYCaPS'.
VERBOSE: Importing alias 'convertTo-PascalCase'.
VERBOSE: Importing alias 'convertTo-ProperCase'.
VERBOSE: Importing alias 'convertTo-SentanceCase'.
VERBOSE: Importing alias 'convertto-StringHash'.
VERBOSE: Importing alias 'convertTo-StUdlycaSe'.
VERBOSE: Importing alias 'convertTo-UpperCamelCase'.
VERBOSE: Importing alias 'create-AcronymFromCaps'.
VERBOSE: Importing alias 'CtB64'.
VERBOSE: Importing alias 'IsNumeric'.
VERBOSE: Importing alias 'quote-list'.
VERBOSE: Importing alias 'quote-string'.
VERBOSE: Importing alias 'test-URI'.
VERBOSE: Importing alias 'unwrap-text'.
VERBOSE: Importing alias 'Unwrap-TextN'.
VERBOSE: Importing alias 'wrap-text'.
13:09:34: INFO:  Ipmo: PASSED
13:09:34: INFO:  (remove-module -name c:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a335c6.psm1 -force)
13:09:34: INFO:  (remove-item -path c:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a335c6.psm1 -ErrorAction SilentlyContinue ;
13:09:34: INFO:  (remove-item -path c:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a335c6.psd1 -ErrorAction SilentlyContinue ;
13:09:34: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Manifest                       e8686a87-a584-4f19-9dec-8e4762a335c6                          
Module                         e8686a87-a584-4f19-9dec-8e4762a335c6                          
Valid                          False
13:09:34: INFO:  (SET:$objReport.Valid = $true ;)
13:09:34: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Manifest                       e8686a87-a584-4f19-9dec-8e4762a335c6                          
Module                         e8686a87-a584-4f19-9dec-8e4762a335c6                          
Valid                          True
13:09:34: INFO:  #*======^ Test-ModuleTMPFiles: c:\sc\verb-text\verb-text\verb-text.psm1_TMP ^======
13:09:34: INFO:  Processing error free: Overwriting temp .psm1 with temp copy
copy-item w
Name                           Value                                                         
----                           -----                                                         
Destination                    c:\sc\verb-text\verb-text\verb-text.psm1                      
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP                  
whatif                         False                                                         
ErrorAction                    STOP
13:09:34: INFO:  Processing error free: Overwriting temp .psd1 with temp copy
copy-item w
Name                           Value                                                         
----                           -----                                                         
Destination                    c:\sc\verb-text\verb-text\verb-text.psd1                      
Path                           c:\sc\verb-text\verb-text\verb-text.psd1_TMP                  
whatif                         False                                                         
ErrorAction                    STOP
13:09:34: INFO:  #*======^ ConvertTo-ModuleMergedTDO: ^======
VERBOSE: Loading module from path 'C:\sc\verb-text\verb-text\verb-Text.psm1'.
13:09:34: VERBOSE:  ((no $ttmm_Err: test-ModuleManifest had no errors))
13:09:34: INFO:  (Test-ModuleManifest:PASSED)
13:09:34: INFO:  Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-text\Tests\verb-text.tests.ps1
13:09:34: INFO:  confirm-ModuleBuildSync w
Name                           Value                                                         
----                           -----                                                         
ModPsdPath                     C:\sc\verb-text\verb-text\verb-text.psd1                      
RequiredVersion                6.3.0                                                         
whatif                         False                                                         
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                     
---             -----                                     
ModPsdPath      {C:\sc\verb-text\verb-text\verb-text.psd1}
RequiredVersion 6.3.0                                     
whatIf          False                                     
Verbose         True
13:09:34: INFO:  #*======v confirm-ModuleBuildSync:  v======
VERBOSE: (non-pipeline - param - input)
13:09:34: INFO:  (test-path confirms $ModPsm1 & $ModTestPs1)
13:09:34: INFO:  Import-PowerShellDataFile w
Name                           Value                                                         
----                           -----                                                         
Path                           C:\sc\verb-text\verb-text\verb-text.psd1                      
ErrorAction                    Stop                                                          
verbose                        True
13:09:34: INFO:  (resolved Module attributes:
$ModuleName:	verb-text
$ModRoot:	c:\sc\verb-text
$ModPsd1:	C:\sc\verb-text\verb-text\verb-text.psd1
$ModPsm1:	C:\sc\verb-text\verb-text\verb-text.psm1
$ModTestPs1:	c:\sc\verb-text\Tests\verb-text.tests.ps1
$psd1Vers:	6.3.0
$psd1guid:	17eb54c0-da66-4673-816a-586ff5e3090b)
13:09:34: INFO:  confirm-ModulePsd1Version w
Name                           Value                                                         
----                           -----                                                         
Path                           C:\sc\verb-text\verb-text\verb-text.psd1                      
RequiredVersion                6.3.0                                                         
whatif                         False                                                         
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                     
---             -----                                     
Path            {C:\sc\verb-text\verb-text\verb-text.psd1}
RequiredVersion 6.3.0                                     
whatIf          False                                     
Verbose         True
13:09:34: INFO:  #*======v confirm-ModulePsd1Version: C:\sc\verb-text\verb-text\verb-text.psd1 v======
VERBOSE: (non-pipeline - param - input)
13:09:34: INFO:  (Version already updated to match)
13:09:34: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Version                        6.3.0                                                         
Valid                          False
13:09:34: INFO:  (SET:$objReport.Valid = $true ;)
13:09:34: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Version                        6.3.0                                                         
Valid                          True
13:09:34: INFO:  #*======^ confirm-ModulePsd1Version: C:\sc\verb-text\verb-text\verb-text.psd1 ^======
13:09:34: INFO:  (confirm-ModulePsd1Version:Success)
13:09:34: INFO:  confirm-ModulePsm1Version w
Name                           Value                                                         
----                           -----                                                         
Path                           C:\sc\verb-text\verb-text\verb-text.psm1                      
RequiredVersion                6.3.0                                                         
whatif                         False                                                         
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                     
---             -----                                     
Path            {C:\sc\verb-text\verb-text\verb-text.psm1}
RequiredVersion 6.3.0                                     
whatIf          False                                     
Verbose         True
13:09:34: INFO:  #*======v confirm-ModulePsm1Version: C:\sc\verb-text\verb-text\verb-text.psm1 v======
VERBOSE: (non-pipeline - param - input)
13:09:34: INFO:  (Version already updated to match)
13:09:34: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Version                        6.3.0                                                         
Valid                          False
13:09:34: INFO:  (SET:$objReport.Valid = $true ;)
13:09:34: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Version                        6.3.0                                                         
Valid                          True
13:09:34: INFO:  #*======^ confirm-ModulePsm1Version: C:\sc\verb-text\verb-text\verb-text.psm1 ^======
13:09:34: INFO:  (confirm-ModulePsm1Version:Success)
13:09:34: INFO:  Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-text\Tests\verb-text.tests.ps1
13:09:34: INFO:  confirm-ModuleTestPs1Guid w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-text\Tests\verb-text.tests.ps1                     
RequiredGuid                   17eb54c0-da66-4673-816a-586ff5e3090b                          
whatif                         False                                                         
verbose                        True
VERBOSE: $PSBoundParameters:
Key          Value                                      
---          -----                                      
Path         {c:\sc\verb-text\Tests\verb-text.tests.ps1}
RequiredGuid 17eb54c0-da66-4673-816a-586ff5e3090b       
whatIf       False                                      
Verbose      True
13:09:34: INFO:  #*======v confirm-ModuleTestPs1Guid: c:\sc\verb-text\Tests\verb-text.tests.ps1 v======
VERBOSE: (non-pipeline - param - input)
13:09:34: INFO:  (Guid  already updated to match)
13:09:34: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Guid                           17eb54c0-da66-4673-816a-586ff5e3090b                          
Valid                          False
13:09:34: INFO:  (SET:$objReport.Valid = $true ;)
13:09:34: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Guid                           17eb54c0-da66-4673-816a-586ff5e3090b                          
Valid                          True
13:09:34: INFO:  #*======^ confirm-ModuleTestPs1Guid: c:\sc\verb-text\Tests\verb-text.tests.ps1 ^======
13:09:34: INFO:  (confirm-ModuleTestPs1Guid:Success)
13:09:34: INFO:  $objReport
Name                           Value                                                         
----                           -----                                                         
Manifest                       C:\sc\verb-text\verb-text\verb-text.psd1                      
Module                         C:\sc\verb-text\verb-text\verb-text.psm1                      
Pester                         c:\sc\verb-text\Tests\verb-text.tests.ps1                     
Guid                           17eb54c0-da66-4673-816a-586ff5e3090b                          
Version                        6.3.0                                                         
Valid                          False
13:09:34: INFO:  (SET:$objReport.Valid = $true ;)
13:09:34: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                         
----                           -----                                                         
Manifest                       C:\sc\verb-text\verb-text\verb-text.psd1                      
Module                         C:\sc\verb-text\verb-text\verb-text.psm1                      
Pester                         c:\sc\verb-text\Tests\verb-text.tests.ps1                     
Guid                           17eb54c0-da66-4673-816a-586ff5e3090b                          
Version                        6.3.0                                                         
Valid                          True
13:09:34: INFO:  #*======^ confirm-ModuleBuildSync:  ^======
13:09:34: INFO:  (confirm-ModuleBuildSync:Success)
13:09:34: VERBOSE:  ($Psd1filelist populated: export-cliXML:c:\sc\verb-text\Psd1filelist)
13:09:34: INFO:  Updating the Psd1 FileList to with populated $Psd1filelist...
VERBOSE: $PSBoundParameters:
Key      Value                                                                               
---      -----                                                                               
Path     C:\sc\verb-text\verb-text\verb-text.psd1                                            
PassThru True                                                                                
Verbose  True                                                                                
whatIf   False                                                                               
Value    {#...
VERBOSE: 13:09:34:(Set-ContentFixEncoding:C:\sc\verb-text\verb-text\verb-text.psd1)
VERBOSE: 13:09:34:Set-Content w
Name                           Value                                                         
----                           -----                                                         
PassThru                       True                                                          
Path                           C:\sc\verb-text\verb-text\verb-text.psd1                      
whatif                         False                                                         
encoding                       UTF8                                                          
ErrorAction                    STOP
-Value[0,2]:
#
# Module manifest for module 'verb-Text'
VERBOSE: Get-ChildItem c:\sc\verb-text\* -recur | where-object {.name -match $rgxGuidModFiles}
13:09:35: INFO:  Signing appropriate files...
VERBOSE: (MONOLITH module:collecting non-include sign files)
13:09:35: INFO:  set-AuthenticodeSignatureTDO w
Name                           Value                                                         
----                           -----                                                         
file                           {C:\sc\verb-text\rebuild-module.ps1, C:\sc\verb-text\requir...
ErrorAction                    Stop                                                          
whatif                         False
Current certificate 5AC9D2B4552E48854D47CBA1352944E9 chain and revocation status is valid
(NOTE:-CRLMode:'NoCheck', no Certificate Revocation Check performed)
(C:\sc\verb-text\rebuild-module.ps1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-text\requirements.psd1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-text\Tests\PPoShScriptingStyle.psd1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-text\Tests\ToddomationScriptingStyle-medium.psd1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-text\Tests\verb-Text.tests.ps1 has a valid existing AuthenticodeSignature, skipping)

Directory: C:\sc\verb-text\verb-Text


SignerCertificate                        Status Path          
-----------------                        ------ ----          
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5 Valid  verb-Text.psd1

Directory: C:\sc\verb-text\verb-Text


SignerCertificate                        Status Path          
-----------------                        ------ ----          
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5 Valid  verb-Text.psm1
13:09:35: INFO:  Removing existing profile verb-text content...
13:09:35: INFO:  Uninstall-ModuleForce w
Name                           Value                                                         
----                           -----                                                         
ModuleName                     verb-text                                                     
Verbose                        True                                                          
whatif                         False
VERBOSE: $PSBoundParameters:
Key        Value      
---        -----      
ModuleName {verb-text}
Verbose    True       
whatIf     False
VERBOSE: (non-pipeline - param - input)
13:09:37: INFO:  
#*------v Uninstall PSGet Mod:verb-Text:v6.2.3 v------
13:09:37: INFO:  Uninstall-Script w
Name                           Value                                                         
----                           -----                                                         
Force                          True                                                          
Whatif                         False                                                         
Verbose                        True
VERBOSE: Populating RepositorySourceLocation property for module verb-Text.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Text\6.2.3\verb-Text.psm1'.
VERBOSE: Performing the operation "Uninstall-Module" on target "Version '6.2.3' of module 'verb-Text'".
VERBOSE: Successfully uninstalled the module 'verb-Text' from module base 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Text\6.2.3'.
13:09:51: INFO:  
#*------^ Uninstall PSGet Mod:verb-Text:v6.2.3 ^------
13:09:51: INFO:  (Processing $env:PSModulePath paths, for surviving locked copies of verb-text to *manually* purge...)
13:09:51: INFO:  Checking: verb-text below: C:\Users\kadritss\Documents\WindowsPowerShell\Modules...
13:09:51:-GracefulFail specified, using EA:'Continue'
13:09:51:No existing Match:test-path -path C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\*.*
13:09:51: INFO:  Checking: verb-text below: C:\ProgramData\Boxstarter...
13:09:51:-GracefulFail specified, using EA:'Continue'
13:09:51:No existing Match:test-path -path C:\ProgramData\Boxstarter\verb-text\*.*
13:09:51: INFO:  Checking: verb-text below: C:\Program Files\WindowsPowerShell\Modules...
13:09:51:-GracefulFail specified, using EA:'Continue'
13:09:51:No existing Match:test-path -path C:\Program Files\WindowsPowerShell\Modules\verb-text\*.*
13:09:51: INFO:  Checking: verb-text below: C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules...
13:09:51:-GracefulFail specified, using EA:'Continue'
13:09:51:No existing Match:test-path -path C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\verb-text\*.*
13:09:51: INFO:  Checking: verb-text below: C:\Program Files (x86)\AutoIt3\AutoItX...
13:09:51:-GracefulFail specified, using EA:'Continue'
13:09:51:No existing Match:test-path -path C:\Program Files (x86)\AutoIt3\AutoItX\verb-text\*.*
13:09:51: INFO:  (no $sRet returned on call)
13:09:51: INFO:  Copying module to profile (net of .git & .vscode dirs, and backed up content)...
13:09:51: INFO:  $srcFiles:post-filter out:
\\(Package|Tests|logs)\\|(\.ps[dm]1_(\d+-\d+[AP]M|TMP)|-LOG-BATCH-EXEC-\d+-\d+[AP]M-log\.txt|\\(fingerprint|Psd1filelist))$
13:09:51: INFO:  Discovered mod-copy files ($srcFiles.fullname):w
C:\sc\verb-text\verb-Text\CHANGELOG.md
C:\sc\verb-text\verb-Text\LICENSE
C:\sc\verb-text\verb-Text\LICENSE.txt
C:\sc\verb-text\verb-Text\Quick-Start-Installation-and-Example.md
C:\sc\verb-text\verb-Text\README.md
C:\sc\verb-text\verb-Text\verb-Text.psd1
C:\sc\verb-text\verb-Text\verb-Text.psm1
13:09:51: INFO:  Non-Pre-existing:$to:C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text
Pre-creating before copy...
VERBOSE: Performing the operation "Create Directory" on target "Destination: C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text".
13:09:51: INFO:  Mode   LastWriteTime        Length Name     
----   -------------        ------ ----     
d----- 9/17/2024 1:09:51 PM        verb-text
13:09:51: INFO:  -Merge:exclude $MergeBuildExcl \\(Public|Internal|External|Private)\\.*.ps1$ files from temp build copy
13:09:51: INFO:  Recursively remove empty subdirs below C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text...
.
13:09:51: INFO:  Move/Flatten Resource etc files into root of temp Build dir...
13:09:51: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text COPY of Quick-Start-Installation-and-Example.md
13:09:51: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text COPY of LICENSE
13:09:51: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text COPY of CHANGELOG.md
13:09:51: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text COPY of LICENSE.txt
13:09:51: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text COPY of README.md
13:09:51: INFO:  copy/Flatten Resource etc files into source root c:\sc\verb-text\verb-text dir...
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-text\Docs\Quick-Start-Installation-and-Example.md Destination: C:\sc\verb-text\verb-text\Quick-Start-Installation-and-Example.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-text\Licenses\LICENSE Destination: C:\sc\verb-text\verb-text\LICENSE".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-text\CHANGELOG.md Destination: C:\sc\verb-text\verb-text\CHANGELOG.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-text\LICENSE.txt Destination: C:\sc\verb-text\verb-text\LICENSE.txt".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-text\README.md Destination: C:\sc\verb-text\verb-text\README.md".
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text\verb-Text.psm1'.
13:09:51: INFO:  Resolved $ModPsdPath:
C:\sc\verb-text\verb-text\verb-text.psd1
13:09:51: VERBOSE:  (resolve-path the CUMods verb-text.psd1 location)
13:09:51: INFO:  
==Verifying CU:Mods\verb-text\verb-text\Quick-Start-Installation-and-Example.md:
validated Quick-Start-Installation-and-Example.md is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text\Quick-Start-Installation-and-Example.md
13:09:51: INFO:  
==Verifying CU:Mods\verb-text\verb-text\LICENSE:
validated LICENSE is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text\LICENSE
13:09:51: INFO:  
==Verifying CU:Mods\verb-text\verb-text\CHANGELOG.md:
validated CHANGELOG.md is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text\CHANGELOG.md
13:09:51: INFO:  
==Verifying CU:Mods\verb-text\verb-text\LICENSE.txt:
validated LICENSE.txt is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text\LICENSE.txt
13:09:51: INFO:  
==Verifying CU:Mods\verb-text\verb-text\README.md:
validated README.md is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text\README.md
13:09:51: INFO:  Running pre-Publish-Module .psd1 test:
Test-ModuleManifest -path C:\sc\verb-text\verb-text\verb-text.psd1
VERBOSE: Loading module from path 'C:\sc\verb-text\verb-text\verb-Text.psm1'.
13:09:51: VERBOSE:  ((no $ttmm_Err: test-ModuleManifest had no errors))
13:09:51: INFO:  (Test-ModuleManifest:PASSED)
13:09:51: INFO:  (Profiling Repo: get-PSRepository -name lyncRepo...)
13:09:51: VERBOSE:  ((confirmed:$tRepo.PublishLocation accessible))
13:09:51: INFO:  
Publish-Module w
Name                           Value                                                         
----                           -----                                                         
Name                           verb-text                                                     
Repository                     lyncRepo                                                      
RequiredVersion                6.3.0                                                         
Verbose                        True                                                          
ErrorAction                    Stop                                                          
errorVariable                  pbmo_Err                                                      
whatif                         False
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Publish Location:'\\lynmsv10\lync_fs\scripts\sc'.
VERBOSE: Module 'verb-text' was found in 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text'.
VERBOSE: Loading module from path 'C:\Users\kadritss\AppData\Local\Temp\292802109\verb-text\verb-Text.psm1'.
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'lyncRepo'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is '\\lynmsv10\lync_fs\scripts\sc' and PackageManagementProvider is 'NuGet'.
VERBOSE: Total package yield:'0' for the specified package 'verb-text'.
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'lyncRepo'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is '\\lynmsv10\lync_fs\scripts\sc' and PackageManagementProvider is 'NuGet'.
VERBOSE: Total package yield:'1' for the specified package 'verb-text'.
VERBOSE: Performing the operation "Publish-Module" on target "Version '6.3.0' of module 'verb-Text'".
VERBOSE: Calling Publish-PSArtifactUtility
VERBOSE: Calling New-NuspecFile
VERBOSE: Calling New-NugetPackage
VERBOSE: Calling C:\chocolatey\bin\nuget.exe pack "C:\Users\kadritss\AppData\Local\Temp\292802109\verb-text\verb-Text.nuspec" -outputdirectory "C:\Users\kadritss\AppData\Local\Temp\292802109\verb-text" -noninteractive
VERBOSE: C:\chocolatey\bin\nuget.exe output:
VERBOSE: 	Attempting to build package from 'verb-Text.nuspec'.
VERBOSE: 	The package verb-Text.6.3.0 is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn why package readmes are important.
VERBOSE: 	Successfully created package 'C:\Users\kadritss\AppData\Local\Temp\292802109\verb-text\verb-Text.6.3.0.nupkg'.
VERBOSE:
VERBOSE: finished running C:\chocolatey\bin\nuget.exe with exit code 0
VERBOSE: Created Nuget Package C:\Users\kadritss\AppData\Local\Temp\292802109\verb-text\verb-Text.6.3.0.nupkg
VERBOSE: Successfully created nuget package at C:\Users\kadritss\AppData\Local\Temp\292802109\verb-text\verb-Text.6.3.0.nupkg
VERBOSE: Calling Publish-NugetPackage -NupkgPath C:\Users\kadritss\AppData\Local\Temp\292802109\verb-text\verb-Text.6.3.0.nupkg -Destination \\lynmsv10\lync_fs\scripts\sc -NugetExePath C:\chocolatey\bin\nuget.exe -UseDotnetCli:False
VERBOSE: Pushing verb-Text.6.3.0.nupkg to '\\lynmsv10\lync_fs\scripts\sc'...
Your package was pushed.
VERBOSE: Successfully published module 'verb-Text' to the module publish location '\\lynmsv10\lync_fs\scripts\sc'. Please allow few minutes for 'verb-Text' to show up in the search results.

13:10:00: WARNING:

13:10:00: WARNING:  FOUND $pbmo_Err: import-module HAD ERRORS! (no action, could be non-impacting)
WARNING: ===:System.Management.Automation.StopUpstreamCommandsException: System error.
   at Microsoft.PowerShell.Commands.SelectObjectCommand.ProcessRecord()
   at System.Management.Automation.CommandProcessor.ProcessRecord()

13:10:00: WARNING:

13:10:00: WARNING:  Publish-Module PBMO UNDEFINED ERROR!

13:10:00: WARNING:  System.Management.Automation.StopUpstreamCommandsException: System error.

13:10:00: WARNING:

13:10:00: WARNING:     at Microsoft.PowerShell.Commands.SelectObjectCommand.ProcessRecord()

13:10:00: WARNING:

13:10:00: WARNING:     at System.Management.Automation.CommandProcessor.ProcessRecord()

13:10:00: WARNING:  (But PublishModule doesn't bother to return a functional Error object with an Exception, so we can't trust/parse or act on it. Just echo)
13:10:00: INFO:  Waiting for:find-module -name verb-text -Repository lyncRepo ...
.
13:10:01:-GracefulFail specified, using EA:'Continue'
13:10:01:remove-item w
Name                           Value                                                         
----                           -----                                                         
Path                           {C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb...
Recurse                        True                                                          
ErrorAction                    Continue                                                      
whatif                         False
13:10:01: INFO:  Install-Module w
Name                           Value                                                         
----                           -----                                                         
Name                           verb-text                                                     
Repository                     lyncRepo                                                      
RequiredVersion                6.3.0                                                         
scope                          CurrentUser                                                   
force                          True                                                          
AllowClobber                   True                                                          
errorVariable                  ismo_Err                                                      
ErrorAction                    Stop                                                          
whatif                         False
13:10:04: VERBOSE:  ((no $ismo_Err: Install-Module had no errors))
13:10:04: INFO:  Testing Module:Import-Module w
Name                           Value                                                         
----                           -----                                                         
Name                           verb-text                                                     
ErrorAction                    Stop                                                          
errorVariable                  ipmo_Err                                                      
force                          True                                                          
verbose                        True
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\6.3.0\verb-text.psd1'.
VERBOSE: Populating RepositorySourceLocation property for module verb-text.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\6.3.0\verb-Text.psm1'.
VERBOSE: Importing function 'compare-CodeRevision'.
VERBOSE: Importing function 'convert-CaesarCipher'.
VERBOSE: Importing function 'Convert-CodePointToPSSyntaxTDO'.
VERBOSE: Importing function 'convert-HtmlCodeToTextTDO'.
VERBOSE: Importing function 'Convert-invertCase'.
VERBOSE: Importing function 'convert-Rot13'.
VERBOSE: Importing function 'convert-Rot47'.
VERBOSE: Importing function 'convert-UnicodeUPlusToCharCode'.
VERBOSE: Importing function 'convertFrom-Base64String'.
VERBOSE: Importing function 'convertto-AcronymFromCaps'.
VERBOSE: Importing function 'convertTo-Base64String'.
VERBOSE: Importing function 'convertto-Base64StringCommaQuoted'.
VERBOSE: Importing function 'ConvertTo-CamelCase'.
VERBOSE: Importing function 'ConvertTo-L33t'.
VERBOSE: Importing function 'ConvertTo-lowerCamelCase'.
VERBOSE: Importing function 'convertTo-PSHelpExample'.
VERBOSE: Importing function 'convertTo-QuotedList'.
VERBOSE: Importing function 'ConvertTo-SCase'.
VERBOSE: Importing function 'ConvertTo-SNAKE_CASE'.
VERBOSE: Importing function 'convertto-StringCommaQuote'.
VERBOSE: Importing function 'ConvertTo-StringQuoted'.
VERBOSE: Importing function 'convertTo-StringReverse'.
VERBOSE: Importing function 'convertTo-StUdlycaPs'.
VERBOSE: Importing function 'convertTo-TitleCase'.
VERBOSE: Importing function 'convertTo-UnWrappedText'.
VERBOSE: Importing function 'convertTo-WordsReverse'.
VERBOSE: Importing function 'convertTo-WrappedText'.
VERBOSE: Importing function 'Get-CharInfo'.
VERBOSE: Importing function 'get-StringHash'.
VERBOSE: Importing function 'new-LoremString'.
VERBOSE: Importing function 'Remove-StringDiacritic'.
VERBOSE: Importing function 'Remove-StringLatinCharacters'.
VERBOSE: Importing function 'Test-IsGuid'.
VERBOSE: Importing function 'test-IsNumeric'.
VERBOSE: Importing function 'test-IsRegexPattern'.
VERBOSE: Importing function 'test-IsRegexValid'.
VERBOSE: Importing function 'test-IsUri'.
VERBOSE: Importing alias 'cfB64'.
VERBOSE: Importing alias 'chr'.
VERBOSE: Importing alias 'convertFrom-HtmlTDO'.
VERBOSE: Importing alias 'convertTo-CrAzYCaPS'.
VERBOSE: Importing alias 'convertTo-PascalCase'.
VERBOSE: Importing alias 'convertTo-ProperCase'.
VERBOSE: Importing alias 'convertTo-SentanceCase'.
VERBOSE: Importing alias 'convertto-StringHash'.
VERBOSE: Importing alias 'convertTo-StUdlycaSe'.
VERBOSE: Importing alias 'convertTo-UpperCamelCase'.
VERBOSE: Importing alias 'create-AcronymFromCaps'.
VERBOSE: Importing alias 'CtB64'.
VERBOSE: Importing alias 'IsNumeric'.
VERBOSE: Importing alias 'quote-list'.
VERBOSE: Importing alias 'quote-string'.
VERBOSE: Importing alias 'test-URI'.
VERBOSE: Importing alias 'unwrap-text'.
VERBOSE: Importing alias 'Unwrap-TextN'.
VERBOSE: Importing alias 'wrap-text'.
13:10:04: VERBOSE:  ((no $ipmo_Err: test-ModuleManifest had no errors))
13:10:04: INFO:  Retrieving matching Repo .nupkg file:
gci \\lynmsv10\lync_fs\scripts\sc\verb-text.6.3.0.nupkgl..
13:10:04: INFO:  Proper updated .nupkg file found:verb-text.6.3.0.nupkg, copying to local Pkg directory.
13:10:04:Copy-Item w
Name                           Value                                                         
----                           -----                                                         
path                           \\lynmsv10\lync_fs\scripts\sc\verb-text.6.3.0.nupkg           
destination                    c:\sc\verb-text\Package                                       
whatif                         False
13:10:04: INFO:  remove-UnneededFileVariants w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-text\Package                                       
Include                        verb-text*.nupkg                                              
Pattern                                                                                      
FilterOn                       CreationTime                                                  
Keep                           2                                                             
KeepToday                      True                                                          
verbose                        True                                                          
whatif                         False
13:10:04:gci w
Name                           Value                                                         
----                           -----                                                         
path                           c:\sc\verb-text\Package\*                                     
include                        verb-text*.nupkg                                              
ErrorAction                    Stop
VERBOSE: $cuttime:09/17/2024 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/17/2024 00:00:00 AM, on CreationTime property
(4 in set *before* filtering)
(3 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(3 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
13:10:04:Reducing matched population from 4 to 1 files via:
filtered files on CreationTime prior to 09/17/2024 00:00:00 AM
13:10:04:Remove-Item w 
Name                           Value                                                         
----                           -----                                                         
path                           C:\sc\verb-text\Package\verb-text.5.3.3.nupkg                 
ErrorAction                    STOP                                                          
whatif                         False
True
13:10:04: INFO:  remove-UnneededFileVariants w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-text\Tests                                         
Include                        ScriptAnalyzer-Results-*.xml                                  
Pattern                                                                                      
FilterOn                       CreationTime                                                  
Keep                           4                                                             
KeepToday                      True                                                          
verbose                        True                                                          
whatif                         False
13:10:04:gci w
Name                           Value                                                         
----                           -----                                                         
path                           c:\sc\verb-text\Tests\*                                       
include                        ScriptAnalyzer-Results-*.xml                                  
ErrorAction                    Stop
VERBOSE: $cuttime:09/17/2024 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/17/2024 00:00:00 AM, on CreationTime property
(5 in set *before* filtering)
(5 in set *after* filtering)
VERBOSE: attempting to retain remaining 4 generations net of prior filtering
(5 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:4 spec - insufficient older files available)
13:10:04:Reducing matched population from 5 to 1 files via:
filtered files on CreationTime prior to 09/17/2024 00:00:00 AM
13:10:04:Remove-Item w 
Name                           Value                                                         
----                           -----                                                         
path                           C:\sc\verb-text\Tests\ScriptAnalyzer-Results-20230601-1332P...
ErrorAction                    STOP                                                          
whatif                         False
True
13:10:04: INFO:  -RunTest specified: Running Pester Test script:
c:\sc\verb-text\Tests\verb-text.tests.ps1
13:10:04:
#*------v RUNNING c:\sc\verb-text\Tests\verb-text.tests.ps1: v------
Describing Module Information
   Context Manifest Testing
    [+] Valid Module Manifest 54ms
PS>TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
    [-] Valid Manifest Name 105ms
      RuntimeException: '-Be' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 138
PS>TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
    [-] Generic Version Check 92ms
      RuntimeException: '-Not' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 141
    [+] Valid Author 21ms
    [+] Valid Company Name 15ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Valid License 17ms
      Expected: value to not be empty
      155:             $ModuleInformation.LicenseURI | Should not BeNullOrEmpty
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 155
PS>TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
    [-] Valid Manifest Description 102ms
      RuntimeException: '-Not' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 163
PS>TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
    [-] Valid Manifest Root Module 169ms
      RuntimeException: '-Be' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 171
PS>TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
    [-] Valid Manifest GUID 98ms
      RuntimeException: '-Be' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 174
    [+] Required Modules 24ms
   Context Exported Functions
PS>TerminatingError(): "Expected: {37}
But was:  {52}"
>> TerminatingError(): "Expected: {37}
But was:  {52}"
    [-] Proper Number of Functions Exported 85ms
      Expected: {37}
      But was:  {52}
      215:             $ExportedCount | Should be $FileCount
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 215
    [+] Exports All Public Functions 65ms
    [+] Compare Missing Functions 15ms
Describing Help
   Context Function - convertFrom-HtmlTDO
    [+] Synopsis 74ms
    [+] Description 56ms
    [+] Examples 59ms
Describing Help
   Context Function - convertTo-CrAzYCaPS
    [+] Synopsis 70ms
    [+] Description 53ms
    [+] Examples 48ms
Describing Help
   Context Function - convertTo-PascalCase
    [+] Synopsis 58ms
    [+] Description 47ms
    [+] Examples 73ms
Describing Help
   Context Function - convertTo-ProperCase
    [+] Synopsis 63ms
    [+] Description 45ms
    [+] Examples 53ms
Describing Help
   Context Function - convertTo-SentanceCase
    [+] Synopsis 57ms
    [+] Description 40ms
    [+] Examples 95ms
Describing Help
   Context Function - convertto-StringHash
    [+] Synopsis 58ms
    [+] Description 46ms
    [+] Examples 42ms
Describing Help
   Context Function - convertTo-StUdlycaSe
    [+] Synopsis 49ms
    [+] Description 38ms
    [+] Examples 44ms
Describing Help
   Context Function - convertTo-UpperCamelCase
    [+] Synopsis 48ms
    [+] Description 43ms
    [+] Examples 41ms
Describing Help
   Context Function - create-AcronymFromCaps
    [+] Synopsis 120ms
    [+] Description 48ms
    [+] Examples 40ms
Describing Help
   Context Function - quote-list
    [+] Synopsis 54ms
    [+] Description 39ms
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-text\Tests\verb-Text.tests.ps1:255 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{alertSet=@{al...Name=verb-text}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-text\Tests\verb-Text.tests.ps1:255 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{alertSet=@{al...Name=verb-text}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 183ms
      Expected: {True}
      But was:  {False}
      256:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 256
Describing Help
   Context Function - quote-string
    [+] Synopsis 50ms
    [+] Description 40ms
    [+] Examples 51ms
Describing Help
   Context Function - test-URI
    [+] Synopsis 50ms
    [+] Description 41ms
    [+] Examples 44ms
Describing Help
   Context Function - unwrap-text
    [+] Synopsis 48ms
    [+] Description 66ms
    [+] Examples 38ms
Describing Help
   Context Function - Unwrap-TextN
    [+] Synopsis 47ms
    [+] Description 66ms
    [+] Examples 41ms
Describing Help
   Context Function - wrap-text
    [+] Synopsis 55ms
    [+] Description 47ms
    [+] Examples 42ms
Describing Help
   Context Function - compare-CodeRevision
    [+] Synopsis 61ms
    [+] Description 57ms
    [+] Examples 73ms
Describing Help
   Context Function - convert-CaesarCipher
    [+] Synopsis 52ms
    [+] Description 42ms
    [+] Examples 42ms
Describing Help
   Context Function - Convert-CodePointToPSSyntaxTDO
    [+] Synopsis 59ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 40ms
      Expected: value to not be empty
      252:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 252
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 75ms
      Expected: {True}
      But was:  {False}
      256:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 256
Describing Help
   Context Function - convertFrom-Base64String
    [+] Synopsis 52ms
    [+] Description 41ms
    [+] Examples 55ms
Describing Help
   Context Function - convert-HtmlCodeToTextTDO
    [+] Synopsis 51ms
    [+] Description 111ms
    [+] Examples 46ms
Describing Help
   Context Function - Convert-invertCase
    [+] Synopsis 48ms
    [+] Description 53ms
    [+] Examples 39ms
Describing Help
   Context Function - convert-Rot13
    [+] Synopsis 62ms
    [+] Description 97ms
    [+] Examples 40ms
Describing Help
   Context Function - convert-Rot47
    [+] Synopsis 50ms
    [+] Description 41ms
    [+] Examples 41ms
Describing Help
   Context Function - convertto-AcronymFromCaps
    [+] Synopsis 106ms
    [+] Description 71ms
    [+] Examples 43ms
Describing Help
   Context Function - convertTo-Base64String
    [+] Synopsis 91ms
    [+] Description 41ms
    [+] Examples 40ms
Describing Help
   Context Function - convertto-Base64StringCommaQuoted
    [+] Synopsis 49ms
    [+] Description 40ms
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-text\Tests\verb-Text.tests.ps1:255 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{alertSet=@{al...Name=verb-text}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-text\Tests\verb-Text.tests.ps1:255 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{alertSet=@{al...Name=verb-text}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 186ms
      Expected: {True}
      But was:  {False}
      256:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 256
Describing Help
   Context Function - ConvertTo-CamelCase
    [+] Synopsis 55ms
    [+] Description 41ms
    [+] Examples 40ms
Describing Help
   Context Function - ConvertTo-L33t
    [+] Synopsis 48ms
    [+] Description 77ms
    [+] Examples 53ms
Describing Help
   Context Function - ConvertTo-lowerCamelCase
    [+] Synopsis 50ms
    [+] Description 40ms
    [+] Examples 57ms
Describing Help
   Context Function - convertTo-PSHelpExample
    [+] Synopsis 49ms
    [+] Description 59ms
    [+] Examples 43ms
Describing Help
   Context Function - convertTo-QuotedList
    [+] Synopsis 52ms
    [+] Description 49ms
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-text\Tests\verb-Text.tests.ps1:255 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{alertSet=@{al...Name=verb-text}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-text\Tests\verb-Text.tests.ps1:255 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{alertSet=@{al...Name=verb-text}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 227ms
      Expected: {True}
      But was:  {False}
      256:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 256
Describing Help
   Context Function - ConvertTo-SCase
    [+] Synopsis 58ms
    [+] Description 50ms
    [+] Examples 47ms
Describing Help
   Context Function - ConvertTo-SNAKE_CASE
    [+] Synopsis 102ms
    [+] Description 41ms
    [+] Examples 42ms
Describing Help
   Context Function - convertto-StringCommaQuote
    [+] Synopsis 51ms
    [+] Description 45ms
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-text\Tests\verb-Text.tests.ps1:255 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{alertSet=@{al...Name=verb-text}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-text\Tests\verb-Text.tests.ps1:255 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{alertSet=@{al...Name=verb-text}:PSObject)
   [Select-Object], PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObj
   ectCommand

PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 147ms
      Expected: {True}
      But was:  {False}
      256:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 256
Describing Help
   Context Function - ConvertTo-StringQuoted
    [+] Synopsis 103ms
    [+] Description 55ms
    [+] Examples 40ms
Describing Help
   Context Function - convertTo-StringReverse
    [+] Synopsis 52ms
    [+] Description 107ms
    [+] Examples 46ms
Describing Help
   Context Function - convertTo-StUdlycaPs
    [+] Synopsis 59ms
    [+] Description 41ms
    [+] Examples 45ms
Describing Help
   Context Function - convertTo-TitleCase
    [+] Synopsis 56ms
    [+] Description 67ms
    [+] Examples 49ms
Describing Help
   Context Function - convertTo-UnWrappedText
    [+] Synopsis 53ms
    [+] Description 45ms
    [+] Examples 101ms
Describing Help
   Context Function - convertTo-WordsReverse
    [+] Synopsis 65ms
    [+] Description 46ms
    [+] Examples 43ms
Describing Help
   Context Function - convertTo-WrappedText
    [+] Synopsis 52ms
    [+] Description 48ms
    [+] Examples 81ms
Describing Help
   Context Function - convert-UnicodeUPlusToCharCode
    [+] Synopsis 56ms
    [+] Description 40ms
    [+] Examples 43ms
Describing Help
   Context Function - Get-CharInfo
    [+] Synopsis 54ms
    [+] Description 40ms
    [+] Examples 51ms
Describing Help
   Context Function - get-StringHash
    [+] Synopsis 50ms
    [+] Description 42ms
    [+] Examples 50ms
Describing Help
   Context Function - new-LoremString
    [+] Synopsis 128ms
    [+] Description 46ms
    [+] Examples 41ms
Describing Help
   Context Function - Remove-StringDiacritic
    [+] Synopsis 58ms
    [+] Description 51ms
    [+] Examples 42ms
Describing Help
   Context Function - Remove-StringLatinCharacters
    [+] Synopsis 74ms
    [+] Description 41ms
    [+] Examples 63ms
Describing Help
   Context Function - Test-IsGuid
    [+] Synopsis 101ms
    [+] Description 42ms
    [+] Examples 42ms
Describing Help
   Context Function - test-IsNumeric
    [+] Synopsis 53ms
    [+] Description 48ms
    [+] Examples 45ms
Describing Help
   Context Function - test-IsRegexPattern
    [+] Synopsis 91ms
    [+] Description 44ms
    [+] Examples 42ms
Describing Help
   Context Function - test-IsRegexValid
    [+] Synopsis 50ms
    [+] Description 48ms
    [+] Examples 46ms
Describing Help
   Context Function - test-IsUri
    [+] Synopsis 60ms
    [+] Description 71ms
    [+] Examples 43ms
Describing General - Testing all scripts and modules against the Script Analyzer Rules
   Context Checking files to test exist and Invoke-ScriptAnalyzer cmdLet is available
    [+] Checking files exist to test. 26ms
    [+] Checking Invoke-ScriptAnalyzer exists. 17ms
Describing Testing against PSScriptAnalyzer rules
   Context PSSA Standard Rules
    [+] Should pass PSAlignAssignmentStatement 2.86s
    [!] Should pass PSAvoidUsingCmdletAliases 10ms
    [+] Should pass PSAvoidAssignmentToAutomaticVariable 13ms
PS>TerminatingError(): "Expected: {0}
But was:  {2}"
>> TerminatingError(): "Expected: {0}
But was:  {2}"
    [-] Should pass PSAvoidDefaultValueSwitchParameter 16ms
      Expected: {0}
      But was:  {2}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 319
PS>TerminatingError(): "Expected: {0}
But was:  {2}"
>> TerminatingError(): "Expected: {0}
But was:  {2}"
    [-] Should pass PSAvoidDefaultValueForMandatoryParameter 26ms
      Expected: {0}
      But was:  {2}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 319
    [+] Should pass PSAvoidUsingEmptyCatchBlock 24ms
    [+] Should pass PSAvoidExclaimOperator 21ms
    [+] Should pass PSAvoidGlobalAliases 19ms
    [+] Should pass PSAvoidGlobalFunctions 14ms
    [!] Should pass PSAvoidGlobalVars 8ms
    [+] Should pass PSAvoidInvokingEmptyMembers 31ms
    [+] Should pass PSAvoidLongLines 15ms
    [+] Should pass PSAvoidMultipleTypeAttributes 21ms
    [+] Should pass PSAvoidNullOrEmptyHelpMessageAttribute 13ms
    [+] Should pass PSAvoidOverwritingBuiltInCmdlets 16ms
    [+] Should pass PSAvoidUsingPositionalParameters 15ms
    [+] Should pass PSReservedCmdletChar 18ms
    [+] Should pass PSReservedParams 16ms
    [+] Should pass PSAvoidSemicolonsAsLineTerminators 15ms
    [+] Should pass PSAvoidShouldContinueWithoutForce 20ms
    [+] Should pass PSAvoidTrailingWhitespace 14ms
    [+] Should pass PSAvoidUsingUsernameAndPasswordParams 16ms
    [+] Should pass PSAvoidUsingAllowUnencryptedAuthentication 17ms
    [+] Should pass PSAvoidUsingBrokenHashAlgorithms 19ms
    [+] Should pass PSAvoidUsingComputerNameHardcoded 21ms
    [+] Should pass PSAvoidUsingConvertToSecureStringWithPlainText 19ms
    [+] Should pass PSAvoidUsingDeprecatedManifestFields 20ms
    [+] Should pass PSAvoidUsingDoubleQuotesForConstantString 18ms
PS>TerminatingError(): "Expected: {0}
But was:  {5}"
>> TerminatingError(): "Expected: {0}
But was:  {5}"
    [-] Should pass PSAvoidUsingInvokeExpression 17ms
      Expected: {0}
      But was:  {5}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 319
    [+] Should pass PSAvoidUsingPlainTextForPassword 30ms
    [+] Should pass PSAvoidUsingWMICmdlet 18ms
    [!] Should pass PSAvoidUsingWriteHost 13ms
    [+] Should pass PSUseCompatibleCommands 16ms
    [+] Should pass PSUseCompatibleSyntax 20ms
    [+] Should pass PSUseCompatibleTypes 22ms
PS>TerminatingError(): "Expected: {0}
But was:  {2}"
>> TerminatingError(): "Expected: {0}
But was:  {2}"
    [-] Should pass PSMisleadingBacktick 23ms
      Expected: {0}
      But was:  {2}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 319
    [+] Should pass PSMissingModuleManifestField 27ms
PS>TerminatingError(): "Expected: {0}
But was:  {8}"
>> TerminatingError(): "Expected: {0}
But was:  {8}"
    [-] Should pass PSPlaceCloseBrace 18ms
      Expected: {0}
      But was:  {8}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 319
PS>TerminatingError(): "Expected: {0}
But was:  {1}"
>> TerminatingError(): "Expected: {0}
But was:  {1}"
    [-] Should pass PSPlaceOpenBrace 32ms
      Expected: {0}
      But was:  {1}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 319
PS>TerminatingError(): "Expected: {0}
But was:  {8}"
>> TerminatingError(): "Expected: {0}
But was:  {8}"
    [-] Should pass PSPossibleIncorrectComparisonWithNull 26ms
      Expected: {0}
      But was:  {8}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 319
    [+] Should pass PSPossibleIncorrectUsageOfAssignmentOperator 26ms
    [+] Should pass PSPossibleIncorrectUsageOfRedirectionOperator 18ms
    [!] Should pass PSProvideCommentHelp 8ms
    [+] Should pass PSReviewUnusedParameter 10ms
    [!] Should pass PSUseApprovedVerbs 9ms
    [+] Should pass PSUseBOMForUnicodeEncodedFile 12ms
    [!] Should pass PSUseCmdletCorrectly 5ms
    [+] Should pass PSUseCompatibleCmdlets 15ms
    [+] Should pass PSUseConsistentIndentation 14ms
    [!] Should pass PSUseConsistentWhitespace 9ms
    [+] Should pass PSUseCorrectCasing 15ms
    [!] Should pass PSUseDeclaredVarsMoreThanAssignments 13ms
    [+] Should pass PSUseLiteralInitializerForHashtable 15ms
    [+] Should pass PSUseOutputTypeCorrectly 32ms
    [+] Should pass PSUseProcessBlockForPipelineCommand 22ms
    [+] Should pass PSUsePSCredentialType 18ms
    [+] Should pass PSShouldProcess 17ms
PS>TerminatingError(): "Expected: {0}
But was:  {6}"
>> TerminatingError(): "Expected: {0}
But was:  {6}"
    [-] Should pass PSUseShouldProcessForStateChangingFunctions 16ms
      Expected: {0}
      But was:  {6}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 319
PS>TerminatingError(): "Expected: {0}
But was:  {6}"
>> TerminatingError(): "Expected: {0}
But was:  {6}"
    [-] Should pass PSUseSingularNouns 25ms
      Expected: {0}
      But was:  {6}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-text\Tests\verb-Text.tests.ps1: line 319
    [+] Should pass PSUseSupportsShouldProcess 31ms
    [+] Should pass PSUseToExportFieldsInManifest 53ms
    [+] Should pass PSUseUsingScopeModifierInNewRunspaces 19ms
    [+] Should pass PSUseUTF8EncodingForHelpFile 16ms
    [+] Should pass PSDSCDscExamplesPresent 18ms
    [+] Should pass PSDSCDscTestsPresent 15ms
    [+] Should pass PSDSCReturnCorrectTypesForDSCFunctions 15ms
    [+] Should pass PSDSCUseIdenticalMandatoryParametersForDSC 16ms
    [+] Should pass PSDSCUseIdenticalParametersForDSC 16ms
    [+] Should pass PSDSCStandardDSCFunctionsInResource 16ms
    [+] Should pass PSDSCUseVerboseMessageInDSCResource 16ms
13:10:20:
#*------^ RUNNING c:\sc\verb-text\Tests\verb-text.tests.ps1: ^------
13:10:20: INFO:  
---------------------------------------------------------------------------------
Processing completed: verb-text :: c:\sc\verb-text
- Script is currently installed (from PsRep: with scope:CurrentUser, under TORO\kadritss profile

- To update other scopes/accounts on same machine, or install on other machines:
    1. Uninstall current module copies:

        Uninstall-Module -Name verb-text) -AllVersion -whatif ;

    2. Install the current version (or higher) from the Repo:lyncRepo:

        install-Module -name verb-text -Repository lyncRepo -MinimumVersion 6.3.0 -scope currentuser -whatif ;

    3. Reimport the module with -force, to ensure the current installed verison is loaded:

        import-Module -name verb-text -force -verbose ;

#-=-=-Stacked list for the above: CURRENTUSER=-=-=-=-=-=
$whatif=$false ;  $tScop = 'CurrentUser' ; $tMod = 'verb-text' ; $tVer = '6.3.0' ;
TRY {
    switch($tScop){
        'CurrentUser'{$ModPath = "$(split-path $profile)\Modules\$($tmod)" }
        'AllUsers' {$ModPath = "$($env:ProgramFiles)\WindowsPowerShell\Modules)\$($tmod)"} ; 
    } ;
    if($Repository = (Get-PSRepository -Name $localPSRepo -ea 'STOP').name){
        rmo -Name $tmod -ea 0 ;
        Uninstall-Module -Name $tmod -AllVersion -ea 0 -whatif:$($whatif);
        gi -path $ModPath -ea 0 |ri -Recurse -force -verbose  -whatif:$($whatif) ;
        install-Module -name $tmod -Repository $Repository -MinimumVersion $tVer -scope $tScop -AllowClobber -ea 'STOP' -whatif:$($whatif) ;
        ipmo -name $tmod -force -verbose -ea 'STOP'  ;
        gmo -name $tmod | ? version -ne $tVer | rmo -Force -Verbose ; 
        gmo -name $tmod -list ;
    } else {
        throw "Unable to resolve `lyncRepo to a configured local PSRepository" ;
    } ;
} CATCH {
    $ErrTrapd=$Error[0] ;
    $smsg = "
$(($ErrTrapd | fl * -Force|out-string).trim())" ;
    write-warning "$((get-date).ToString('HH:mm:ss')):$($smsg)" ;
} ;
#-=-=-=-=-=-=-=-=
#-=-=-Stacked list for the above: ALLUSERS=-=-=-=-=-=
$whatif=$false ; $tScop = 'AllUsers' ; $tMod = 'verb-text' ; $tVer = '6.3.0' ;  
TRY {
    switch($tScop){
        'CurrentUser'{$ModPath = "$(split-path $profile)\Modules\$($tmod)" }
        'AllUsers' {$ModPath = "$($env:ProgramFiles)\WindowsPowerShell\Modules)\$($tmod)"} ; 
    } ;
    if($Repository = (Get-PSRepository -Name $localPSRepo -ea 'STOP').name){
        rmo -Name $tmod -ea 0 ;
        Uninstall-Module -Name $tmod -AllVersion -ea 0 -whatif:$($whatif);
        gi -path $ModPath -ea 0 |ri -Recurse -force -verbose  -whatif:$($whatif) ;
        install-Module -name $tmod -Repository $Repository -MinimumVersion $tVer -scope $tScop -AllowClobber -ea 'STOP' -whatif:$($whatif) ;
        ipmo -name $tmod -force -verbose -ea 'STOP'  ;
        gmo -name $tmod | ? version -ne $tVer | rmo -Force -Verbose ; 
        gmo -name $tmod -list ;
    } else {
        throw "Unable to resolve `lyncRepo to a configured local PSRepository" ;
    } ;
} CATCH {
    $ErrTrapd=$Error[0] ;
    $smsg = "
$(($ErrTrapd | fl * -Force|out-string).trim())" ;
    write-warning "$((get-date).ToString('HH:mm:ss')):$($smsg)" ;
} ;
#-=-=-=-=-=-=-=-=

- You may also want to run the configured Pester Tests of the new script:

        . c:\sc\verb-text\Tests\verb-text.tests.ps1

Full Processing Details can be found in:

C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-text-LOG-BATCH-EXEC-20240917-1309PM-log.txt

---------------------------------------------------------------------------------
13:10:20: INFO:  
(Most recent processing log can be found at:c:\sc\verb-text\VERB-dev-verb-text-LOG-BATCH-EXEC-20240917-1309PM-log.txt)
(perm copy stored at:C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-text-LOG-BATCH-EXEC-20240917-1309PM-log.txt
13:10:20: INFO:  remove-UnneededFileVariants w
Name                           Value                                                         
----                           -----                                                         
Path                           c:\sc\verb-text                                               
Include                        VERB-dev-verb-text-LOG-BATCH-*-log.txt                        
Pattern                                                                                      
FilterOn                       CreationTime                                                  
Keep                           2                                                             
KeepToday                      True                                                          
verbose                        True                                                          
whatif                         False
13:10:20:gci w
Name                           Value                                                         
----                           -----                                                         
path                           c:\sc\verb-text\*                                             
include                        VERB-dev-verb-text-LOG-BATCH-*-log.txt                        
ErrorAction                    Stop
VERBOSE: $cuttime:09/17/2024 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/17/2024 00:00:00 AM, on CreationTime property
(2 in set *before* filtering)
(1 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(1 in set *before* filtering)
(0 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
13:10:20:Reducing matched population from 2 to 0 files via:
filtered files on CreationTime prior to 09/17/2024 00:00:00 AM
13:10:20:There are *no* files to be removed, as per the specified inputs. ($population:0)
13:10:20: INFO:  #*======^ VERB-dev.psm1:verb-text ^======
13:10:20:
#*------^ (1/1):PROC:verb-text: ^------
13:10:20:
#*======^ RUNNING processbulk-NewModule.ps1 ^======

▒
▒
▒
░
░

LYN-9C5CTV3
 ▓▒▓
TORO\kadritss
 ▓▒▓
Tue 09/17/2024 13:10
 [00:01:00]

▒
▒
▒
▒
▒

[PS]
:
C:\u\w\p\scripts

$



PS>gc C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-text-LOG-BATCH-EXEC-20240917-1309PM-log.txt
2024-09-17 13:09:32 INFO:  : #*======v VERB-dev.psm1:verb-text v======
2024-09-17 13:09:32 VERBOSE:  : $modRoot is blank, assigning from mandetory param:$ModDirPath
2024-09-17 13:09:32 INFO:  : Run: reset-ModulePublishingDirectory -ModuleName verb-text
2024-09-17 13:09:32 ##  :
#*------v PROCESSING : verb-text v------
2024-09-17 13:09:32 INFO:  : Pre-purge (CHANGELOG|README)\.md$ Root dir matches from :
2024-09-17 13:09:32 INFO:  : verb-text resolved $ModPubPath:C:\sc\verb-text\verb-text\
$ModResPath:C:\sc\verb-text\Resource\
2024-09-17 13:09:32 VERBOSE:  : Reset module Resource files (purge from C:\sc\verb-text\verb-text\)
2024-09-17 13:09:32 INFO:  : verb-text resolved $ModPubPath:C:\sc\verb-text\verb-text\
$ModResPath:C:\sc\verb-text\Licenses\
2024-09-17 13:09:32 VERBOSE:  : Reset module Licenses files (purge from C:\sc\verb-text\verb-text\)
2024-09-17 13:09:32 INFO:  : verb-text resolved $ModPubPath:C:\sc\verb-text\verb-text\
$ModResPath:C:\sc\verb-text\Docs\
2024-09-17 13:09:32 VERBOSE:  : Reset module Docs files (purge from C:\sc\verb-text\verb-text\)
2024-09-17 13:09:32 INFO:  : ==C:\sc\verb-text\CHANGELOG.md:
2024-09-17 13:09:32 INFO:  : ==C:\sc\verb-text\README.md:
2024-09-17 13:09:32 INFO:  : ==C:\sc\verb-text\Licenses\LICENSE:
2024-09-17 13:09:32 INFO:  : ==C:\sc\verb-text\Docs\Quick-Start-Installation-and-Example.md:
2024-09-17 13:09:32 ##  :
#*------^ PROCESSING : verb-text ^------
2024-09-17 13:09:32 INFO:  : Run: populate-ModulePublishingDirectory -ModuleName verb-text
2024-09-17 13:09:32 ##  :
#*------v PROCESSING : verb-text v------
2024-09-17 13:09:32 INFO:  : Locating (CHANGELOG|README)\.md$ Root dir matches from :
2024-09-17 13:09:32 INFO:  : verb-text resolved $ModPubPath:C:\sc\verb-text\verb-text\
$ModResPath:C:\sc\verb-text\Resource\
2024-09-17 13:09:32 VERBOSE:  : Recopy module Resource files (copy from C:\sc\verb-text\verb-text\)
2024-09-17 13:09:32 INFO:  : verb-text resolved $ModPubPath:C:\sc\verb-text\verb-text\
$ModResPath:C:\sc\verb-text\Licenses\
2024-09-17 13:09:32 VERBOSE:  : Recopy module Licenses files (copy from C:\sc\verb-text\verb-text\)
2024-09-17 13:09:32 INFO:  : verb-text resolved $ModPubPath:C:\sc\verb-text\verb-text\
$ModResPath:C:\sc\verb-text\Docs\
2024-09-17 13:09:32 VERBOSE:  : Recopy module Docs files (copy from C:\sc\verb-text\verb-text\)
2024-09-17 13:09:32 INFO:  : copy-item w
Name                           Value
----                           -----
path                           {C:\sc\verb-text\CHANGELOG.md, C:\sc\verb-text\README.md, C...
destination                    C:\sc\verb-text\verb-text\
force                          True
erroraction                    STOP
verbose                        True
whatif                         False
--$pltCI.path:
C:\sc\verb-text\CHANGELOG.md
C:\sc\verb-text\README.md
C:\sc\verb-text\Licenses\LICENSE
C:\sc\verb-text\Docs\Quick-Start-Installation-and-Example.md
2024-09-17 13:09:32 ##  :
#*------^ PROCESSING : verb-text ^------
2024-09-17 13:09:32 INFO:  : Validate updated verb-text\verb-text dir contents against Manifest:
Run: test-modulemanifest -Path C:\sc\verb-text\verb-text\verb-text.psd1
2024-09-17 13:09:32 VERBOSE:  : (no $ttmm_Err: test-ModuleManifest had no errors)
2024-09-17 13:09:32 INFO:  : NON-Republish pass detected:
MERGE parm specified as well:`n-Merge Public|Internal|Classes include subdirs module content into updated .psm1
-Sign updated files.
-Uninstall/Remove existing profile module
-Copy new module to profile
-Confirm: Get-Module -ListAvailable
-Check/Update existing Psd1 Version
-Publish-Module
-Remove existing installed profile module
-Test Install-Module
-Test Import-Module
2024-09-17 13:09:32 INFO:  : -Merge specified...
2024-09-17 13:09:32 INFO:  : ConvertTo-ModuleMergedTDO w
Name                           Value
----                           -----
ModuleName                     verb-text
ModuleSourcePath               {c:\sc\verb-text\Public, c:\sc\verb-text\Internal}
ModuleDestinationPath          c:\sc\verb-text\verb-text
RequiredVersion                6.3.0
LogSpec                        {logging, logfile, transcript}
NoAliasExport
ErrorAction                    Stop
showdebug                      False
whatif                         False
2024-09-17 13:09:32 INFO:  : ConvertTo-ModuleMergedTDO w
Name                           Value
----                           -----
ModuleName                     verb-text
ModuleSourcePath               {c:\sc\verb-text\Public, c:\sc\verb-text\Internal}
ModuleDestinationPath          c:\sc\verb-text\verb-text
RequiredVersion                6.3.0
LogSpec                        {logging, logfile, transcript}
NoAliasExport
ErrorAction                    Stop
showdebug                      False
whatif                         False
2024-09-17 13:09:32 INFO:  : (NON-dyn psm1 detected - purging existing non-CBH content...)
2024-09-17 13:09:33 INFO:  : Initialize-PSModuleDirectories w
Name                           Value
----                           -----
ModuleSourcePath               {c:\sc\verb-text\Public, c:\sc\verb-text\Internal}
ModuleDestinationPath          c:\sc\verb-text\verb-text
ErrorAction                    Stop
whatif                         False
2024-09-17 13:09:33 INFO:  :
#*------v (1/2):C:\sc\verb-text\Public v------
2024-09-17 13:09:33 INFO:  : Processing 37 $ComponentScripts files through Remove-AuthenticodeSignature...
2024-09-17 13:09:33 INFO:  : Remove-AuthenticodeSignature w
Name                           Value
----                           -----
Path                           {C:\sc\verb-text\Public\compare-CodeRevision.ps1, C:\sc\ver...
whatif                         False
verbose                        True
2024-09-17 13:09:33 INFO:  : Processing (1/37):C:\sc\verb-text\Public\compare-CodeRevision.ps1...
2024-09-17 13:09:33 INFO:  : Processing (2/37):C:\sc\verb-text\Public\convert-CaesarCipher.ps1...
2024-09-17 13:09:33 INFO:  : Processing (3/37):C:\sc\verb-text\Public\Convert-CodePointToPSSyntaxTDO.ps1...
2024-09-17 13:09:33 INFO:  : Processing (4/37):C:\sc\verb-text\Public\convertFrom-Base64String.ps1...
2024-09-17 13:09:33 INFO:  : Processing (5/37):C:\sc\verb-text\Public\convert-HtmlCodeToTextTDO.ps1...
2024-09-17 13:09:33 INFO:  : Processing (6/37):C:\sc\verb-text\Public\Convert-invertCase.ps1...
2024-09-17 13:09:33 INFO:  : Processing (7/37):C:\sc\verb-text\Public\convert-Rot13.ps1...
2024-09-17 13:09:33 INFO:  : Processing (8/37):C:\sc\verb-text\Public\convert-Rot47.ps1...
2024-09-17 13:09:33 INFO:  : Processing (9/37):C:\sc\verb-text\Public\convertto-AcronymFromCaps.ps1...
2024-09-17 13:09:33 INFO:  : Processing (10/37):C:\sc\verb-text\Public\convertTo-Base64String.ps1...
2024-09-17 13:09:33 INFO:  : Processing (11/37):C:\sc\verb-text\Public\convertto-Base64StringCommaQuoted.ps1...
2024-09-17 13:09:33 INFO:  : Processing (12/37):C:\sc\verb-text\Public\ConvertTo-CamelCase.ps1...
2024-09-17 13:09:33 INFO:  : Processing (13/37):C:\sc\verb-text\Public\ConvertTo-L33t.ps1...
2024-09-17 13:09:33 INFO:  : Processing (14/37):C:\sc\verb-text\Public\ConvertTo-lowerCamelCase.ps1...
2024-09-17 13:09:33 INFO:  : Processing (15/37):C:\sc\verb-text\Public\convertTo-PSHelpExample.ps1...
2024-09-17 13:09:33 INFO:  : Processing (16/37):C:\sc\verb-text\Public\convertTo-QuotedList.ps1...
2024-09-17 13:09:33 INFO:  : Processing (17/37):C:\sc\verb-text\Public\ConvertTo-SCase.ps1...
2024-09-17 13:09:33 INFO:  : Processing (18/37):C:\sc\verb-text\Public\ConvertTo-SNAKE_CASE.ps1...
2024-09-17 13:09:33 INFO:  : Processing (19/37):C:\sc\verb-text\Public\convertto-StringCommaQuote.ps1...
2024-09-17 13:09:33 INFO:  : Processing (20/37):C:\sc\verb-text\Public\ConvertTo-StringQuoted.ps1...
2024-09-17 13:09:33 INFO:  : Processing (21/37):C:\sc\verb-text\Public\convertTo-StringReverse.ps1...
2024-09-17 13:09:33 INFO:  : Processing (22/37):C:\sc\verb-text\Public\ConvertTo-StudlyCaps.ps1...
2024-09-17 13:09:33 INFO:  : Processing (23/37):C:\sc\verb-text\Public\convertTo-TitleCase.ps1...
2024-09-17 13:09:33 INFO:  : Processing (24/37):C:\sc\verb-text\Public\convertTo-UnWrappedText.ps1...
2024-09-17 13:09:33 INFO:  : Processing (25/37):C:\sc\verb-text\Public\convertTo-WordsReverse.ps1...
2024-09-17 13:09:33 INFO:  : Processing (26/37):C:\sc\verb-text\Public\convertTo-WrappedText.ps1...
2024-09-17 13:09:33 INFO:  : Processing (27/37):C:\sc\verb-text\Public\convert-UnicodeUPlusToCharCode.ps1...
2024-09-17 13:09:33 INFO:  : Processing (28/37):C:\sc\verb-text\Public\Get-CharInfo.ps1...
2024-09-17 13:09:33 INFO:  : Processing (29/37):C:\sc\verb-text\Public\get-StringHash.ps1...
2024-09-17 13:09:33 INFO:  : Processing (30/37):C:\sc\verb-text\Public\new-LoremString.ps1...
2024-09-17 13:09:33 INFO:  : Processing (31/37):C:\sc\verb-text\Public\Remove-StringDiacritic.ps1...
2024-09-17 13:09:33 INFO:  : Processing (32/37):C:\sc\verb-text\Public\Remove-StringLatinCharacters.ps1...
2024-09-17 13:09:33 INFO:  : Processing (33/37):C:\sc\verb-text\Public\test-IsGuid.ps1...
2024-09-17 13:09:33 INFO:  : Processing (34/37):C:\sc\verb-text\Public\test-IsNumeric.ps1...
2024-09-17 13:09:34 INFO:  : Processing (35/37):C:\sc\verb-text\Public\test-IsRegexPattern.ps1...
2024-09-17 13:09:34 INFO:  : Processing (36/37):C:\sc\verb-text\Public\test-IsRegexValid.ps1...
2024-09-17 13:09:34 INFO:  : Processing (37/37):C:\sc\verb-text\Public\test-IsUri.ps1...
2024-09-17 13:09:34 INFO:  :
#*------^ (1/2):C:\sc\verb-text\Public ^------
2024-09-17 13:09:34 INFO:  :
#*------v (2/2):C:\sc\verb-text\Internal v------
2024-09-17 13:09:34 INFO:  : Processing 0 $ComponentScripts files through Remove-AuthenticodeSignature...
2024-09-17 13:09:34 INFO:  : Remove-AuthenticodeSignature w
Name                           Value
----                           -----
Path
whatif                         False
verbose                        True
2024-09-17 13:09:34 INFO:  :
#*------^ (2/2):C:\sc\verb-text\Internal ^------
2024-09-17 13:09:34 INFO:  : (Updating Psm1 Export-ModuleMember -Function to reflect Public modules)
2024-09-17 13:09:34 INFO:  : Adding:FooterBlock...
2024-09-17 13:09:34 INFO:  : Updating the Psd1 FunctionsToExport to match
2024-09-17 13:09:34 INFO:  : confirm-ModuleBuildSync w
Name                           Value
----                           -----
ModPsdPath                     c:\sc\verb-text\verb-text\verb-text.psd1_TMP
RequiredVersion                6.3.0
NoTest                         True
whatif                         False
verbose                        True
2024-09-17 13:09:34 INFO:  : #*======v confirm-ModuleBuildSync:  v======
2024-09-17 13:09:34 INFO:  : (test-path confirms $ModPsm1 & $ModTestPs1)
2024-09-17 13:09:34 INFO:  : Import-PowerShellDataFile w
Name                           Value
----                           -----
Path                           c:\sc\verb-text\verb-text\verb-text.psd1_TMP
ErrorAction                    Stop
verbose                        True
2024-09-17 13:09:34 INFO:  : (resolved Module attributes:
$ModuleName:	verb-text
$ModRoot:	c:\sc\verb-text
$ModPsd1:	c:\sc\verb-text\verb-text\verb-text.psd1_TMP
$ModPsm1:	c:\sc\verb-text\verb-text\verb-text.psm1_TMP
$ModTestPs1:	c:\sc\verb-text\Tests\verb-text.tests.ps1
$psd1Vers:	6.3.0
$psd1guid:	17eb54c0-da66-4673-816a-586ff5e3090b)
2024-09-17 13:09:34 INFO:  : confirm-ModulePsd1Version w
Name                           Value
----                           -----
Path                           c:\sc\verb-text\verb-text\verb-text.psd1_TMP
RequiredVersion                6.3.0
whatif                         False
verbose                        True
2024-09-17 13:09:34 INFO:  : #*======v confirm-ModulePsd1Version: c:\sc\verb-text\verb-text\verb-text.psd1_TMP v======
2024-09-17 13:09:34 INFO:  : (Version already updated to match)
2024-09-17 13:09:34 INFO:  : $objReport
Name                           Value
----                           -----
Version                        6.3.0
Valid                          False
2024-09-17 13:09:34 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-17 13:09:34 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Version                        6.3.0
Valid                          True
2024-09-17 13:09:34 INFO:  : #*======^ confirm-ModulePsd1Version: c:\sc\verb-text\verb-text\verb-text.psd1_TMP ^======
2024-09-17 13:09:34 INFO:  : (confirm-ModulePsd1Version:Success)
2024-09-17 13:09:34 INFO:  : confirm-ModulePsm1Version w
Name                           Value
----                           -----
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP
RequiredVersion                6.3.0
whatif                         False
verbose                        True
2024-09-17 13:09:34 INFO:  : #*======v confirm-ModulePsm1Version: c:\sc\verb-text\verb-text\verb-text.psm1_TMP v======
2024-09-17 13:09:34 WARNING:  : In:c:\sc\verb-text\verb-text\verb-text.psm1_TMP
Version present:(6.2.3)
*does not* properly match:6.3.0
FORCING MATCHING UPDATE!
2024-09-17 13:09:34 INFO:  : $objReport
Name                           Value
----                           -----
Version                        6.3.0
Valid                          False
2024-09-17 13:09:34 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-17 13:09:34 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Version                        6.3.0
Valid                          True
2024-09-17 13:09:34 INFO:  : #*======^ confirm-ModulePsm1Version: c:\sc\verb-text\verb-text\verb-text.psm1_TMP ^======
2024-09-17 13:09:34 INFO:  : (confirm-ModulePsm1Version:Success)
2024-09-17 13:09:34 INFO:  : (-NoTest: skipping confirm-ModuleTestPs1Guid)
2024-09-17 13:09:34 INFO:  : $objReport
Name                           Value
----                           -----
Manifest                       c:\sc\verb-text\verb-text\verb-text.psd1_TMP
Module                         c:\sc\verb-text\verb-text\verb-text.psm1_TMP
Pester                         (SKIPPED)
Guid                           (SKIPPED)
Version                        6.3.0
Valid                          False
2024-09-17 13:09:34 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-17 13:09:34 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Manifest                       c:\sc\verb-text\verb-text\verb-text.psd1_TMP
Module                         c:\sc\verb-text\verb-text\verb-text.psm1_TMP
Pester                         (SKIPPED)
Guid                           (SKIPPED)
Version                        6.3.0
Valid                          True
2024-09-17 13:09:34 INFO:  : #*======^ confirm-ModuleBuildSync:  ^======
2024-09-17 13:09:34 INFO:  : (confirm-ModuleBuildSync:Success)
2024-09-17 13:09:34 INFO:  : Test-ModuleTMPFiles w
Name                           Value
----                           -----
ModuleNamePSM1Path             c:\sc\verb-text\verb-text\verb-text.psm1_TMP
verbose                        True
2024-09-17 13:09:34 INFO:  : #*======v Test-ModuleTMPFiles: c:\sc\verb-text\verb-text\verb-text.psm1_TMP v======
2024-09-17 13:09:34 INFO:  :
Psm1:c:\sc\verb-text\verb-text\verb-text.psm1_TMP
Psd1:c:\sc\verb-text\verb-text\verb-text.psd1_TMP
2024-09-17 13:09:34 INFO:  : Creating Testable c:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a335c6.psd1
 to validate c:\sc\verb-text\verb-text\verb-text.psd1_TMP will Test-ModuleManifest
2024-09-17 13:09:34 INFO:  : Test-ModuleManifest w
Name                           Value
----                           -----
verbose                        True
Path                           c:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a33...
ErrorVariable                  vManiErr
ErrorAction                    STOP
2024-09-17 13:09:34 INFO:  : Test-ModuleManifest:PASSED
2024-09-17 13:09:34 INFO:  : Creating Testable c:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a335c6.psm1
 to validate c:\sc\verb-text\verb-text\verb-text.psm1_TMP will Import-Module
2024-09-17 13:09:34 INFO:  : n import-module w
Name                           Value
----                           -----
Name                           c:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a33...
Force                          True
verbose                        True
ErrorAction                    STOP
ErrorVariable                  vIpMoErr
PassThru                       True
2024-09-17 13:09:34 INFO:  : Ipmo: PASSED
2024-09-17 13:09:34 INFO:  : (remove-module -name c:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a335c6.psm1 -force)
2024-09-17 13:09:34 INFO:  : (remove-item -path c:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a335c6.psm1 -ErrorAction SilentlyContinue ;
2024-09-17 13:09:34 INFO:  : (remove-item -path c:\sc\verb-text\verb-text\e8686a87-a584-4f19-9dec-8e4762a335c6.psd1 -ErrorAction SilentlyContinue ;
2024-09-17 13:09:34 INFO:  : $objReport
Name                           Value
----                           -----
Manifest                       e8686a87-a584-4f19-9dec-8e4762a335c6
Module                         e8686a87-a584-4f19-9dec-8e4762a335c6
Valid                          False
2024-09-17 13:09:34 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-17 13:09:34 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Manifest                       e8686a87-a584-4f19-9dec-8e4762a335c6
Module                         e8686a87-a584-4f19-9dec-8e4762a335c6
Valid                          True
2024-09-17 13:09:34 INFO:  : #*======^ Test-ModuleTMPFiles: c:\sc\verb-text\verb-text\verb-text.psm1_TMP ^======
2024-09-17 13:09:34 INFO:  : Processing error free: Overwriting temp .psm1 with temp copy
copy-item w
Name                           Value
----                           -----
Destination                    c:\sc\verb-text\verb-text\verb-text.psm1
Path                           c:\sc\verb-text\verb-text\verb-text.psm1_TMP
whatif                         False
ErrorAction                    STOP
2024-09-17 13:09:34 INFO:  : Processing error free: Overwriting temp .psd1 with temp copy
copy-item w
Name                           Value
----                           -----
Destination                    c:\sc\verb-text\verb-text\verb-text.psd1
Path                           c:\sc\verb-text\verb-text\verb-text.psd1_TMP
whatif                         False
ErrorAction                    STOP
2024-09-17 13:09:34 INFO:  : #*======^ ConvertTo-ModuleMergedTDO: ^======
2024-09-17 13:09:34 VERBOSE:  : (no $ttmm_Err: test-ModuleManifest had no errors)
2024-09-17 13:09:34 INFO:  : (Test-ModuleManifest:PASSED)
2024-09-17 13:09:34 INFO:  : Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-text\Tests\verb-text.tests.ps1
2024-09-17 13:09:34 INFO:  : confirm-ModuleBuildSync w
Name                           Value
----                           -----
ModPsdPath                     C:\sc\verb-text\verb-text\verb-text.psd1
RequiredVersion                6.3.0
whatif                         False
verbose                        True
2024-09-17 13:09:34 INFO:  : #*======v confirm-ModuleBuildSync:  v======
2024-09-17 13:09:34 INFO:  : (test-path confirms $ModPsm1 & $ModTestPs1)
2024-09-17 13:09:34 INFO:  : Import-PowerShellDataFile w
Name                           Value
----                           -----
Path                           C:\sc\verb-text\verb-text\verb-text.psd1
ErrorAction                    Stop
verbose                        True
2024-09-17 13:09:34 INFO:  : (resolved Module attributes:
$ModuleName:	verb-text
$ModRoot:	c:\sc\verb-text
$ModPsd1:	C:\sc\verb-text\verb-text\verb-text.psd1
$ModPsm1:	C:\sc\verb-text\verb-text\verb-text.psm1
$ModTestPs1:	c:\sc\verb-text\Tests\verb-text.tests.ps1
$psd1Vers:	6.3.0
$psd1guid:	17eb54c0-da66-4673-816a-586ff5e3090b)
2024-09-17 13:09:34 INFO:  : confirm-ModulePsd1Version w
Name                           Value
----                           -----
Path                           C:\sc\verb-text\verb-text\verb-text.psd1
RequiredVersion                6.3.0
whatif                         False
verbose                        True
2024-09-17 13:09:34 INFO:  : #*======v confirm-ModulePsd1Version: C:\sc\verb-text\verb-text\verb-text.psd1 v======
2024-09-17 13:09:34 INFO:  : (Version already updated to match)
2024-09-17 13:09:34 INFO:  : $objReport
Name                           Value
----                           -----
Version                        6.3.0
Valid                          False
2024-09-17 13:09:34 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-17 13:09:34 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Version                        6.3.0
Valid                          True
2024-09-17 13:09:34 INFO:  : #*======^ confirm-ModulePsd1Version: C:\sc\verb-text\verb-text\verb-text.psd1 ^======
2024-09-17 13:09:34 INFO:  : (confirm-ModulePsd1Version:Success)
2024-09-17 13:09:34 INFO:  : confirm-ModulePsm1Version w
Name                           Value
----                           -----
Path                           C:\sc\verb-text\verb-text\verb-text.psm1
RequiredVersion                6.3.0
whatif                         False
verbose                        True
2024-09-17 13:09:34 INFO:  : #*======v confirm-ModulePsm1Version: C:\sc\verb-text\verb-text\verb-text.psm1 v======
2024-09-17 13:09:34 INFO:  : (Version already updated to match)
2024-09-17 13:09:34 INFO:  : $objReport
Name                           Value
----                           -----
Version                        6.3.0
Valid                          False
2024-09-17 13:09:34 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-17 13:09:34 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Version                        6.3.0
Valid                          True
2024-09-17 13:09:34 INFO:  : #*======^ confirm-ModulePsm1Version: C:\sc\verb-text\verb-text\verb-text.psm1 ^======
2024-09-17 13:09:34 INFO:  : (confirm-ModulePsm1Version:Success)
2024-09-17 13:09:34 INFO:  : Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-text\Tests\verb-text.tests.ps1
2024-09-17 13:09:34 INFO:  : confirm-ModuleTestPs1Guid w
Name                           Value
----                           -----
Path                           c:\sc\verb-text\Tests\verb-text.tests.ps1
RequiredGuid                   17eb54c0-da66-4673-816a-586ff5e3090b
whatif                         False
verbose                        True
2024-09-17 13:09:34 INFO:  : #*======v confirm-ModuleTestPs1Guid: c:\sc\verb-text\Tests\verb-text.tests.ps1 v======
2024-09-17 13:09:34 INFO:  : (Guid  already updated to match)
2024-09-17 13:09:34 INFO:  : $objReport
Name                           Value
----                           -----
Guid                           17eb54c0-da66-4673-816a-586ff5e3090b
Valid                          False
2024-09-17 13:09:34 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-17 13:09:34 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Guid                           17eb54c0-da66-4673-816a-586ff5e3090b
Valid                          True
2024-09-17 13:09:34 INFO:  : #*======^ confirm-ModuleTestPs1Guid: c:\sc\verb-text\Tests\verb-text.tests.ps1 ^======
2024-09-17 13:09:34 INFO:  : (confirm-ModuleTestPs1Guid:Success)
2024-09-17 13:09:34 INFO:  : $objReport
Name                           Value
----                           -----
Manifest                       C:\sc\verb-text\verb-text\verb-text.psd1
Module                         C:\sc\verb-text\verb-text\verb-text.psm1
Pester                         c:\sc\verb-text\Tests\verb-text.tests.ps1
Guid                           17eb54c0-da66-4673-816a-586ff5e3090b
Version                        6.3.0
Valid                          False
2024-09-17 13:09:34 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-17 13:09:34 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Manifest                       C:\sc\verb-text\verb-text\verb-text.psd1
Module                         C:\sc\verb-text\verb-text\verb-text.psm1
Pester                         c:\sc\verb-text\Tests\verb-text.tests.ps1
Guid                           17eb54c0-da66-4673-816a-586ff5e3090b
Version                        6.3.0
Valid                          True
2024-09-17 13:09:34 INFO:  : #*======^ confirm-ModuleBuildSync:  ^======
2024-09-17 13:09:34 INFO:  : (confirm-ModuleBuildSync:Success)
2024-09-17 13:09:34 VERBOSE:  : $Psd1filelist populated: export-cliXML:c:\sc\verb-text\Psd1filelist
2024-09-17 13:09:34 INFO:  : Updating the Psd1 FileList to with populated $Psd1filelist...
2024-09-17 13:09:35 INFO:  : Signing appropriate files...
2024-09-17 13:09:35 INFO:  : set-AuthenticodeSignatureTDO w
Name                           Value
----                           -----
file                           {C:\sc\verb-text\rebuild-module.ps1, C:\sc\verb-text\requir...
ErrorAction                    Stop
whatif                         False
2024-09-17 13:09:35 INFO:  : Removing existing profile verb-text content...
2024-09-17 13:09:35 INFO:  : Uninstall-ModuleForce w
Name                           Value
----                           -----
ModuleName                     verb-text
Verbose                        True
whatif                         False
2024-09-17 13:09:37 INFO:  :
#*------v Uninstall PSGet Mod:verb-Text:v6.2.3 v------
2024-09-17 13:09:37 INFO:  : Uninstall-Script w
Name                           Value
----                           -----
Force                          True
Whatif                         False
Verbose                        True
2024-09-17 13:09:51 INFO:  :
#*------^ Uninstall PSGet Mod:verb-Text:v6.2.3 ^------
2024-09-17 13:09:51 INFO:  : (Processing $env:PSModulePath paths, for surviving locked copies of verb-text to *manually* purge...)
2024-09-17 13:09:51 INFO:  : Checking: verb-text below: C:\Users\kadritss\Documents\WindowsPowerShell\Modules...
2024-09-17 13:09:51 INFO:  : Checking: verb-text below: C:\ProgramData\Boxstarter...
2024-09-17 13:09:51 INFO:  : Checking: verb-text below: C:\Program Files\WindowsPowerShell\Modules...
2024-09-17 13:09:51 INFO:  : Checking: verb-text below: C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules...
2024-09-17 13:09:51 INFO:  : Checking: verb-text below: C:\Program Files (x86)\AutoIt3\AutoItX...
2024-09-17 13:09:51 INFO:  : (no $sRet returned on call)
2024-09-17 13:09:51 INFO:  : Copying module to profile (net of .git & .vscode dirs, and backed up content)...
2024-09-17 13:09:51 INFO:  : $srcFiles:post-filter out:
\\(Package|Tests|logs)\\|(\.ps[dm]1_(\d+-\d+[AP]M|TMP)|-LOG-BATCH-EXEC-\d+-\d+[AP]M-log\.txt|\\(fingerprint|Psd1filelist))$
2024-09-17 13:09:51 INFO:  : Discovered mod-copy files ($srcFiles.fullname):w
C:\sc\verb-text\verb-Text\CHANGELOG.md
C:\sc\verb-text\verb-Text\LICENSE
C:\sc\verb-text\verb-Text\LICENSE.txt
C:\sc\verb-text\verb-Text\Quick-Start-Installation-and-Example.md
C:\sc\verb-text\verb-Text\README.md
C:\sc\verb-text\verb-Text\verb-Text.psd1
C:\sc\verb-text\verb-Text\verb-Text.psm1
2024-09-17 13:09:51 INFO:  : Non-Pre-existing:$to:C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text
Pre-creating before copy...
2024-09-17 13:09:51 INFO:  : Mode   LastWriteTime        Length Name
----   -------------        ------ ----
d----- 9/17/2024 1:09:51 PM        verb-text
2024-09-17 13:09:51 INFO:  : -Merge:exclude $MergeBuildExcl \\(Public|Internal|External|Private)\\.*.ps1$ files from temp build copy
2024-09-17 13:09:51 INFO:  : Recursively remove empty subdirs below C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text...
2024-09-17 13:09:51 INFO:  : Move/Flatten Resource etc files into root of temp Build dir...
2024-09-17 13:09:51 INFO:  : Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text COPY of Quick-Start-Installation-and-Example.md
2024-09-17 13:09:51 INFO:  : Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text COPY of LICENSE
2024-09-17 13:09:51 INFO:  : Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text COPY of CHANGELOG.md
2024-09-17 13:09:51 INFO:  : Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text COPY of LICENSE.txt
2024-09-17 13:09:51 INFO:  : Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\verb-text COPY of README.md
2024-09-17 13:09:51 INFO:  : copy/Flatten Resource etc files into source root c:\sc\verb-text\verb-text dir...
2024-09-17 13:09:51 INFO:  : Resolved $ModPsdPath:
C:\sc\verb-text\verb-text\verb-text.psd1
2024-09-17 13:09:51 VERBOSE:  : resolve-path the CUMods verb-text.psd1 location
2024-09-17 13:09:51 INFO:  :
==Verifying CU:Mods\verb-text\verb-text\Quick-Start-Installation-and-Example.md:
2024-09-17 13:09:51 INFO:  :
==Verifying CU:Mods\verb-text\verb-text\LICENSE:
2024-09-17 13:09:51 INFO:  :
==Verifying CU:Mods\verb-text\verb-text\CHANGELOG.md:
2024-09-17 13:09:51 INFO:  :
==Verifying CU:Mods\verb-text\verb-text\LICENSE.txt:
2024-09-17 13:09:51 INFO:  :
==Verifying CU:Mods\verb-text\verb-text\README.md:
2024-09-17 13:09:51 INFO:  : Running pre-Publish-Module .psd1 test:
Test-ModuleManifest -path C:\sc\verb-text\verb-text\verb-text.psd1
2024-09-17 13:09:51 VERBOSE:  : (no $ttmm_Err: test-ModuleManifest had no errors)
2024-09-17 13:09:51 INFO:  : (Test-ModuleManifest:PASSED)
2024-09-17 13:09:51 INFO:  : (Profiling Repo: get-PSRepository -name lyncRepo...)
2024-09-17 13:09:51 VERBOSE:  : (confirmed:$tRepo.PublishLocation accessible)
2024-09-17 13:09:51 INFO:  :
Publish-Module w
Name                           Value
----                           -----
Name                           verb-text
Repository                     lyncRepo
RequiredVersion                6.3.0
Verbose                        True
ErrorAction                    Stop
errorVariable                  pbmo_Err
whatif                         False
2024-09-17 13:10:00 WARNING:  :  FOUND $pbmo_Err: import-module HAD ERRORS! (no action, could be non-impacting)
2024-09-17 13:10:00 WARNING:  :  Publish-Module PBMO UNDEFINED ERROR! System.Management.Automation.StopUpstreamCommandsException: System error.     at Microsoft.PowerShell.Commands.SelectObjectCommand.ProcessRecord()     at System.Management.Automation.CommandProcessor.ProcessRecord() (But PublishModule doesn't bother to return a functional Error object with an Exception, so we can't trust/parse or act on it. Just echo)
2024-09-17 13:10:00 INFO:  : Waiting for:find-module -name verb-text -Repository lyncRepo ...
2024-09-17 13:10:01 INFO:  : Install-Module w
Name                           Value
----                           -----
Name                           verb-text
Repository                     lyncRepo
RequiredVersion                6.3.0
scope                          CurrentUser
force                          True
AllowClobber                   True
errorVariable                  ismo_Err
ErrorAction                    Stop
whatif                         False
2024-09-17 13:10:04 VERBOSE:  : (no $ismo_Err: Install-Module had no errors)
2024-09-17 13:10:04 INFO:  : Testing Module:Import-Module w
Name                           Value
----                           -----
Name                           verb-text
ErrorAction                    Stop
errorVariable                  ipmo_Err
force                          True
verbose                        True
2024-09-17 13:10:04 VERBOSE:  : (no $ipmo_Err: test-ModuleManifest had no errors)
2024-09-17 13:10:04 INFO:  : Retrieving matching Repo .nupkg file:
gci \\lynmsv10\lync_fs\scripts\sc\verb-text.6.3.0.nupkgl..
2024-09-17 13:10:04 INFO:  : Proper updated .nupkg file found:verb-text.6.3.0.nupkg, copying to local Pkg directory.
2024-09-17 13:10:04 INFO:  : remove-UnneededFileVariants w
Name                           Value
----                           -----
Path                           c:\sc\verb-text\Package
Include                        verb-text*.nupkg
Pattern
FilterOn                       CreationTime
Keep                           2
KeepToday                      True
verbose                        True
whatif                         False
2024-09-17 13:10:04 INFO:  : remove-UnneededFileVariants w
Name                           Value
----                           -----
Path                           c:\sc\verb-text\Tests
Include                        ScriptAnalyzer-Results-*.xml
Pattern
FilterOn                       CreationTime
Keep                           4
KeepToday                      True
verbose                        True
whatif                         False
2024-09-17 13:10:04 INFO:  : -RunTest specified: Running Pester Test script:
c:\sc\verb-text\Tests\verb-text.tests.ps1

2024-09-17 13:10:20 INFO:  :
---------------------------------------------------------------------------------
Processing completed: verb-text :: c:\sc\verb-text
- Script is currently installed (from PsRep: with scope:CurrentUser, under TORO\kadritss profile

- To update other scopes/accounts on same machine, or install on other machines:
    1. Uninstall current module copies:

        Uninstall-Module -Name verb-text) -AllVersion -whatif ;

    2. Install the current version (or higher) from the Repo:lyncRepo:

        install-Module -name verb-text -Repository lyncRepo -MinimumVersion 6.3.0 -scope currentuser -whatif ;

    3. Reimport the module with -force, to ensure the current installed verison is loaded:

        import-Module -name verb-text -force -verbose ;

#-=-=-Stacked list for the above: CURRENTUSER=-=-=-=-=-=
$whatif=$false ;  $tScop = 'CurrentUser' ; $tMod = 'verb-text' ; $tVer = '6.3.0' ;
TRY {
    switch($tScop){
        'CurrentUser'{$ModPath = "$(split-path $profile)\Modules\$($tmod)" }
        'AllUsers' {$ModPath = "$($env:ProgramFiles)\WindowsPowerShell\Modules)\$($tmod)"} ;
    } ;
    if($Repository = (Get-PSRepository -Name $localPSRepo -ea 'STOP').name){
        rmo -Name $tmod -ea 0 ;
        Uninstall-Module -Name $tmod -AllVersion -ea 0 -whatif:$($whatif);
        gi -path $ModPath -ea 0 |ri -Recurse -force -verbose  -whatif:$($whatif) ;
        install-Module -name $tmod -Repository $Repository -MinimumVersion $tVer -scope $tScop -AllowClobber -ea 'STOP' -whatif:$($whatif) ;
        ipmo -name $tmod -force -verbose -ea 'STOP'  ;
        gmo -name $tmod | ? version -ne $tVer | rmo -Force -Verbose ;
        gmo -name $tmod -list ;
    } else {
        throw "Unable to resolve `lyncRepo to a configured local PSRepository" ;
    } ;
} CATCH {
    $ErrTrapd=$Error[0] ;
    $smsg = "
$(($ErrTrapd | fl * -Force|out-string).trim())" ;
    write-warning "$((get-date).ToString('HH:mm:ss')):$($smsg)" ;
} ;
#-=-=-=-=-=-=-=-=
#-=-=-Stacked list for the above: ALLUSERS=-=-=-=-=-=
$whatif=$false ; $tScop = 'AllUsers' ; $tMod = 'verb-text' ; $tVer = '6.3.0' ;
TRY {
    switch($tScop){
        'CurrentUser'{$ModPath = "$(split-path $profile)\Modules\$($tmod)" }
        'AllUsers' {$ModPath = "$($env:ProgramFiles)\WindowsPowerShell\Modules)\$($tmod)"} ;
    } ;
    if($Repository = (Get-PSRepository -Name $localPSRepo -ea 'STOP').name){
        rmo -Name $tmod -ea 0 ;
        Uninstall-Module -Name $tmod -AllVersion -ea 0 -whatif:$($whatif);
        gi -path $ModPath -ea 0 |ri -Recurse -force -verbose  -whatif:$($whatif) ;
        install-Module -name $tmod -Repository $Repository -MinimumVersion $tVer -scope $tScop -AllowClobber -ea 'STOP' -whatif:$($whatif) ;
        ipmo -name $tmod -force -verbose -ea 'STOP'  ;
        gmo -name $tmod | ? version -ne $tVer | rmo -Force -Verbose ;
        gmo -name $tmod -list ;
    } else {
        throw "Unable to resolve `lyncRepo to a configured local PSRepository" ;
    } ;
} CATCH {
    $ErrTrapd=$Error[0] ;
    $smsg = "
$(($ErrTrapd | fl * -Force|out-string).trim())" ;
    write-warning "$((get-date).ToString('HH:mm:ss')):$($smsg)" ;
} ;
#-=-=-=-=-=-=-=-=

- You may also want to run the configured Pester Tests of the new script:

        . c:\sc\verb-text\Tests\verb-text.tests.ps1

Full Processing Details can be found in:

C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-text-LOG-BATCH-EXEC-20240917-1309PM-log.txt

---------------------------------------------------------------------------------

2024-09-17 13:10:20 INFO:  :
(Most recent processing log can be found at:c:\sc\verb-text\VERB-dev-verb-text-LOG-BATCH-EXEC-20240917-1309PM-log.txt)
(perm copy stored at:C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-text-LOG-BATCH-EXEC-20240917-1309PM-log.txt
2024-09-17 13:10:20 INFO:  : remove-UnneededFileVariants w
Name                           Value
----                           -----
Path                           c:\sc\verb-text
Include                        VERB-dev-verb-text-LOG-BATCH-*-log.txt
Pattern
FilterOn                       CreationTime
Keep                           2
KeepToday                      True
verbose                        True
whatif                         False
2024-09-17 13:10:20 INFO:  : #*======^ VERB-dev.psm1:verb-text ^======

▒
▒
▒
░
░

LYN-9C5CTV3
 ▓▒▓
TORO\kadritss
 ▓▒▓
Tue 09/17/2024 13:11
 [102ms]

▒
▒
▒
▒
▒

[PS]
:
C:\u\w\p\scripts

$




▒
▒
▒
░
░

LYN-9C5CTV3
 ▓▒▓
TORO\kadritss
 ▓▒▓
Tue 09/17/2024 13:15
 [102ms]

▒
▒
▒
▒
▒

[PS]
:
C:\u\w\p\scripts

$



PS>'verb-text','verb-io','verb-dev','verb-auth' | gmo | rmo -force ; 
'verb-text','verb-io','verb-dev','verb-auth' | ipmo -fo -verb ; 
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\6.3.0\verb-text.psd1'.
VERBOSE: Populating RepositorySourceLocation property for module verb-text.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-text\6.3.0\verb-Text.psm1'.
VERBOSE: Importing function 'compare-CodeRevision'.
VERBOSE: Importing function 'convert-CaesarCipher'.
VERBOSE: Importing function 'Convert-CodePointToPSSyntaxTDO'.
VERBOSE: Importing function 'convert-HtmlCodeToTextTDO'.
VERBOSE: Importing function 'Convert-invertCase'.
VERBOSE: Importing function 'convert-Rot13'.
VERBOSE: Importing function 'convert-Rot47'.
VERBOSE: Importing function 'convert-UnicodeUPlusToCharCode'.
VERBOSE: Importing function 'convertFrom-Base64String'.
VERBOSE: Importing function 'convertto-AcronymFromCaps'.
VERBOSE: Importing function 'convertTo-Base64String'.
VERBOSE: Importing function 'convertto-Base64StringCommaQuoted'.
VERBOSE: Importing function 'ConvertTo-CamelCase'.
VERBOSE: Importing function 'ConvertTo-L33t'.
VERBOSE: Importing function 'ConvertTo-lowerCamelCase'.
VERBOSE: Importing function 'convertTo-PSHelpExample'.
VERBOSE: Importing function 'convertTo-QuotedList'.
VERBOSE: Importing function 'ConvertTo-SCase'.
VERBOSE: Importing function 'ConvertTo-SNAKE_CASE'.
VERBOSE: Importing function 'convertto-StringCommaQuote'.
VERBOSE: Importing function 'ConvertTo-StringQuoted'.
VERBOSE: Importing function 'convertTo-StringReverse'.
VERBOSE: Importing function 'convertTo-StUdlycaPs'.
VERBOSE: Importing function 'convertTo-TitleCase'.
VERBOSE: Importing function 'convertTo-UnWrappedText'.
VERBOSE: Importing function 'convertTo-WordsReverse'.
VERBOSE: Importing function 'convertTo-WrappedText'.
VERBOSE: Importing function 'Get-CharInfo'.
VERBOSE: Importing function 'get-StringHash'.
VERBOSE: Importing function 'new-LoremString'.
VERBOSE: Importing function 'Remove-StringDiacritic'.
VERBOSE: Importing function 'Remove-StringLatinCharacters'.
VERBOSE: Importing function 'Test-IsGuid'.
VERBOSE: Importing function 'test-IsNumeric'.
VERBOSE: Importing function 'test-IsRegexPattern'.
VERBOSE: Importing function 'test-IsRegexValid'.
VERBOSE: Importing function 'test-IsUri'.
VERBOSE: Importing alias 'cfB64'.
VERBOSE: Importing alias 'chr'.
VERBOSE: Importing alias 'convertFrom-HtmlTDO'.
VERBOSE: Importing alias 'convertTo-CrAzYCaPS'.
VERBOSE: Importing alias 'convertTo-PascalCase'.
VERBOSE: Importing alias 'convertTo-ProperCase'.
VERBOSE: Importing alias 'convertTo-SentanceCase'.
VERBOSE: Importing alias 'convertto-StringHash'.
VERBOSE: Importing alias 'convertTo-StUdlycaSe'.
VERBOSE: Importing alias 'convertTo-UpperCamelCase'.
VERBOSE: Importing alias 'create-AcronymFromCaps'.
VERBOSE: Importing alias 'CtB64'.
VERBOSE: Importing alias 'IsNumeric'.
VERBOSE: Importing alias 'quote-list'.
VERBOSE: Importing alias 'quote-string'.
VERBOSE: Importing alias 'test-URI'.
VERBOSE: Importing alias 'unwrap-text'.
VERBOSE: Importing alias 'Unwrap-TextN'.
VERBOSE: Importing alias 'wrap-text'.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\15.0.0\verb-io.psd1'.
VERBOSE: Populating RepositorySourceLocation property for module verb-io.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-io\15.0.0\verb-IO.psm1'.
VERBOSE: Importing function 'Add-ContentFixEncoding'.
VERBOSE: Importing function 'Add-DirectoryWatch'.
VERBOSE: Importing function 'Add-PSTitleBar'.
WARNING: The names of some imported commands from the module 'verb-io' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'Authenticate-File' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Authenticate-File'.
VERBOSE: Importing function 'backup-FileTDO'.
VERBOSE: Importing function 'clear-HostIndent'.
VERBOSE: Importing function 'Close-IfAlreadyRunning'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide3'.
VERBOSE: Importing function 'Compare-ObjectsSideBySide4'.
VERBOSE: Importing function 'Compress-ArchiveFile'.
VERBOSE: Importing function 'convert-BinaryToDecimalStorageUnits'.
VERBOSE: Importing function 'convert-ColorHexCodeToWindowsMediaColorsName'.
VERBOSE: Importing function 'convert-DehydratedBytesToGB'.
VERBOSE: Importing function 'convert-DehydratedBytesToMB'.
VERBOSE: Importing function 'Convert-FileEncoding'.
VERBOSE: Importing function 'convert-HelpToMarkdown'.
VERBOSE: Importing function 'Convert-NumbertoWords'.
VERBOSE: Importing function 'convert-VideoToMp3'.
VERBOSE: Importing function 'ConvertFrom-CanonicalOU'.
VERBOSE: Importing function 'ConvertFrom-CanonicalUser'.
VERBOSE: Importing function 'ConvertFrom-CmdList'.
VERBOSE: Importing function 'ConvertFrom-DN'.
VERBOSE: Importing function 'ConvertFrom-IniFile'.
VERBOSE: Importing function 'convertFrom-MarkdownTable'.
VERBOSE: Importing function 'ConvertFrom-SourceTable'.
VERBOSE: Importing function 'ConvertFrom-UncPath'.
VERBOSE: Importing function 'ConvertTo-HashIndexed'.
VERBOSE: Importing function 'convertTo-MarkdownTable'.
VERBOSE: Importing function 'convertTo-Object'.
VERBOSE: Importing function 'ConvertTo-SRT'.
VERBOSE: Importing function 'ConvertTo-UncPath'.
VERBOSE: Importing function 'copy-Profile'.
VERBOSE: Importing function 'copy-ProfileTDO'.
VERBOSE: The 'Count-Object' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Count-Object'.
VERBOSE: The 'Create-ScheduledTaskLegacy' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "New".
VERBOSE: Importing function 'Create-ScheduledTaskLegacy'.
VERBOSE: The 'dump-Shortcuts' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Get".
VERBOSE: Importing function 'dump-Shortcuts'.
VERBOSE: The 'Echo-Finish' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-Finish'.
VERBOSE: The 'Echo-ScriptEnd' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-ScriptEnd'.
VERBOSE: The 'Echo-Start' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Echo-Start'.
VERBOSE: Importing function 'Expand-ArchiveFile'.
VERBOSE: Importing function 'Expand-ISOFileTDO'.
VERBOSE: The 'extract-Icon' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Export".
VERBOSE: Importing function 'extract-Icon'.
VERBOSE: Importing function 'Find-LockedFileProcess'.
VERBOSE: Importing function 'Format-Json'.
VERBOSE: Importing function 'get-AliasDefinition'.
VERBOSE: Importing function 'Get-AverageItems'.
VERBOSE: Importing function 'get-colorcombo'.
VERBOSE: Importing function 'get-ColorNames'.
VERBOSE: Importing function 'Get-CombinationTDO'.
VERBOSE: Importing function 'get-ConsoleText'.
VERBOSE: Importing function 'Get-CountItems'.
VERBOSE: Importing function 'Get-FileEncoding'.
VERBOSE: Importing function 'Get-FileEncodingExtended'.
VERBOSE: Importing function 'get-filesignature'.
VERBOSE: Importing function 'Get-FileType'.
VERBOSE: Importing function 'get-FolderEmpty'.
VERBOSE: Importing function 'Get-FolderSize'.
VERBOSE: Importing function 'Get-FolderSize2'.
VERBOSE: Importing function 'Get-FsoShortName'.
VERBOSE: Importing function 'Get-FsoShortPath'.
VERBOSE: Importing function 'Get-FsoTypeObj'.
VERBOSE: Importing function 'get-HostIndent'.
VERBOSE: Importing function 'Get-KnownFolderTDO'.
VERBOSE: Importing function 'get-LoremName'.
VERBOSE: Importing function 'Get-PermutationTDO'.
VERBOSE: Importing function 'Get-ProductItems'.
VERBOSE: Importing function 'get-ProfileFilesTDO'.
VERBOSE: Importing function 'get-RegistryValue'.
VERBOSE: Importing function 'Get-ScheduledTaskLegacy'.
VERBOSE: Importing function 'Get-Shortcut'.
VERBOSE: Importing function 'Get-SumItems'.
VERBOSE: Importing function 'get-TaskReport'.
VERBOSE: Importing function 'Get-Time'.
VERBOSE: Importing function 'Get-TimeStamp'.
VERBOSE: Importing function 'get-TimeStampNow'.
VERBOSE: Importing function 'get-Uptime'.
VERBOSE: Importing function 'Invoke-Flasher'.
VERBOSE: Importing function 'Invoke-Pause'.
VERBOSE: Importing function 'Invoke-Pause2'.
VERBOSE: Importing function 'invoke-SoundCue'.
VERBOSE: Importing function 'Invoke-TakeownFileTDO'.
VERBOSE: Importing function 'Invoke-TakeownFolderTDO'.
VERBOSE: Importing function 'Invoke-TakeownRegistryTDO'.
VERBOSE: Importing function 'mount-UnavailableMappedDrives'.
VERBOSE: Importing function 'move-FileOnReboot'.
VERBOSE: Importing function 'New-RandomFilename'.
VERBOSE: Importing function 'new-Shortcut'.
VERBOSE: Importing function 'out-Clipboard'.
VERBOSE: Importing function 'Out-Excel'.
WARNING: Some imported command names contain one or more of the following restricted characters: # , ( ) {{ }} [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: The command name 'Out-Excel-Events' from the module 'verb-io' contains one or more of the following restricted characters: # , ( ) { } [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: Importing function 'Out-Excel-Events'.
VERBOSE: The 'parse-PSTitleBar' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'parse-PSTitleBar'.
VERBOSE: The 'play-beep' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'play-beep'.
VERBOSE: Importing function 'pop-HostIndent'.
VERBOSE: Importing function 'Pop-LocationFirst'.
VERBOSE: The 'prompt-Continue' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Read".
VERBOSE: Importing function 'prompt-Continue'.
VERBOSE: Importing function 'push-HostIndent'.
VERBOSE: Importing function 'Read-FolderBrowserDialog'.
VERBOSE: Importing function 'Read-Host2'.
VERBOSE: Importing function 'Read-InputBoxChoice'.
VERBOSE: Importing function 'Read-InputBoxChoiceHostUI'.
VERBOSE: Importing function 'Read-InputBoxDialog'.
VERBOSE: Importing function 'Read-MessageBoxDialog'.
VERBOSE: Importing function 'read-MultiLineInputDialogAdvanced'.
VERBOSE: Importing function 'Read-OpenFileDialog'.
VERBOSE: Importing function 'Read-PasswordInputBoxDialog'.
VERBOSE: The 'rebuild-PSTitleBar' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Initialize".
VERBOSE: Importing function 'rebuild-PSTitleBar'.
VERBOSE: Importing function 'Remove-AuthenticodeSignature'.
VERBOSE: Importing function 'Remove-DirectoryWatch'.
VERBOSE: Importing function 'Remove-InvalidFileNameChars'.
VERBOSE: Importing function 'Remove-InvalidVariableNameChars'.
VERBOSE: Importing function 'remove-ItemRetry'.
VERBOSE: Importing function 'Remove-JsonComments'.
VERBOSE: Importing function 'Remove-PSTitleBar'.
VERBOSE: Importing function 'Remove-ScheduledTaskLegacy'.
VERBOSE: Importing function 'remove-UnneededFileVariants'.
VERBOSE: Importing function 'repair-FileEncoding'.
VERBOSE: The 'replace-PSTitleBarText' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'replace-PSTitleBarText'.
VERBOSE: Importing function 'reset-ConsoleColors'.
VERBOSE: Importing function 'reset-HostIndent'.
VERBOSE: Importing function 'restore-FileTDO'.
VERBOSE: The 'Run-ScheduledTaskLegacy' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. The suggested alternative verbs are "Invoke,Start".
VERBOSE: Importing function 'Run-ScheduledTaskLegacy'.
VERBOSE: Importing function 'Save-ConsoleOutputToClipBoard'.
VERBOSE: Importing function 'search-Excel'.
VERBOSE: Importing function 'select-first'.
VERBOSE: Importing function 'Select-last'.
VERBOSE: Importing function 'Select-StringAll'.
VERBOSE: Importing function 'set-AuthenticodeSignatureTDO'.
VERBOSE: Importing function 'set-ConsoleColors'.
VERBOSE: Importing function 'Set-ContentFixEncoding'.
VERBOSE: Importing function 'set-FileAssociation'.
VERBOSE: Importing function 'set-HostIndent'.
VERBOSE: Importing function 'set-ItemReadOnlyTDO'.
VERBOSE: Importing function 'set-PSTitleBar'.
VERBOSE: Importing function 'Set-RegistryValue'.
VERBOSE: Importing function 'Set-Shortcut'.
VERBOSE: The 'Shorten-Path' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Shorten-Path'.
VERBOSE: Importing function 'Show-MsgBox'.
VERBOSE: Importing function 'Start-SleepCountdown'.
VERBOSE: Importing function 'stop-driveburn'.
VERBOSE: Importing function 'test-FileLock'.
VERBOSE: Importing function 'test-FileSysAutomaticVariables'.
VERBOSE: Importing function 'test-IsLink'.
VERBOSE: Importing function 'test-IsUncPath'.
VERBOSE: Importing function 'test-LineEndings'.
VERBOSE: Importing function 'test-MediaFile'.
VERBOSE: Importing function 'test-MissingMediaSummary'.
VERBOSE: Importing function 'Test-PendingReboot'.
VERBOSE: Importing function 'test-PSTitleBar'.
VERBOSE: Importing function 'Test-RegistryKey'.
VERBOSE: Importing function 'Test-RegistryValue'.
VERBOSE: Importing function 'Test-RegistryValueNotNull'.
VERBOSE: The 'Touch-File' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Touch-File'.
VERBOSE: The 'trim-FileList' command in the verb-io' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'trim-FileList'.
VERBOSE: Importing function 'unless'.
VERBOSE: Importing function 'write-hostCallOutTDO'.
VERBOSE: Importing function 'write-hostColorMatch'.
VERBOSE: Importing function 'write-HostIndent'.
VERBOSE: Importing function 'Write-ProgressHelper'.
VERBOSE: Importing alias 'add-PSTitle'.
VERBOSE: Importing alias 'backup-File'.
VERBOSE: Importing alias 'c-hi'.
VERBOSE: Importing alias 'cfst'.
VERBOSE: Importing alias 'check-FileLock'.
VERBOSE: Importing alias 'ColorMatch'.
VERBOSE: Importing alias 'Compress-ZipFile'.
VERBOSE: Importing alias 'convert-ToMp3'.
VERBOSE: Importing alias 'convertfrom-mdt'.
VERBOSE: Importing alias 'ConvertTo-CanonicalName'.
VERBOSE: Importing alias 'ConvertTo-DNOU'.
VERBOSE: Importing alias 'ConvertTo-DNUser'.
VERBOSE: Importing alias 'convertTo-Mp3'.
VERBOSE: Importing alias 'copy-Profile'.
VERBOSE: Importing alias 'expand-ISOFile'.
VERBOSE: Importing alias 'Expand-ZipFile'.
VERBOSE: Importing alias 'fix-encoding'.
VERBOSE: Importing alias 'gald'.
VERBOSE: Importing alias 'gclr'.
VERBOSE: Importing alias 'Get-ProfileFiles'.
VERBOSE: Importing alias 'get-RegistryProperty'.
VERBOSE: Importing alias 'get-ScheduledTaskReport'.
VERBOSE: Importing alias 'in-markdowntable'.
VERBOSE: Importing alias 'in-mdt'.
VERBOSE: Importing alias 'invoke-audio'.
VERBOSE: Importing alias 'invoke-sound'.
VERBOSE: Importing alias 'out-markdowntable'.
VERBOSE: Importing alias 'out-mdt'.
VERBOSE: Importing alias 'pop-hi'.
VERBOSE: Importing alias 'popd1'.
VERBOSE: Importing alias 'push-hi'.
VERBOSE: Importing alias 'r-hi'.
VERBOSE: Importing alias 'Remove-IllegalFileNameChars'.
VERBOSE: Importing alias 'restore-file'.
VERBOSE: Importing alias 'revert-File'.
VERBOSE: Importing alias 's-hi'.
VERBOSE: Importing alias 'sdb'.
VERBOSE: Importing alias 'set-ConsColor'.
VERBOSE: Importing alias 'Set-FileContent'.
VERBOSE: Importing alias 'set-PSTitle'.
VERBOSE: Importing alias 'set-RegistryProperty'.
VERBOSE: Importing alias 'sign-file'.
VERBOSE: Importing alias 'test-IsHardLink'.
VERBOSE: Importing alias 'test-IsJunction'.
VERBOSE: Importing alias 'test-IsSymlink'.
VERBOSE: Importing alias 'tmf'.
VERBOSE: Importing alias 'touch'.
VERBOSE: Importing alias 'Unwatch-Directory'.
VERBOSE: Importing alias 'update-RegistryProperty'.
VERBOSE: Importing alias 'vmf'.
VERBOSE: Importing alias 'w-hCO'.
VERBOSE: Importing alias 'w-hi'.
VERBOSE: Importing alias 'Watch-Directory'.
VERBOSE: Importing alias 'write-hostAlert'.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-dev\1.5.53\verb-dev.psd1'.
VERBOSE: Populating RepositorySourceLocation property for module verb-dev.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-dev\1.5.53\VERB-dev.psm1'.
VERBOSE: Importing function 'backup-ModuleBuild'.
WARNING: The names of some imported commands from the module 'verb-dev' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'check-PsLocalRepoRegistration' command in the verb-dev' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'check-PsLocalRepoRegistration'.
VERBOSE: Importing function 'confirm-ModuleBuildSync'.
VERBOSE: Importing function 'confirm-ModulePsd1Version'.
VERBOSE: Importing function 'confirm-ModulePsm1Version'.
VERBOSE: Importing function 'confirm-ModuleTestPs1Guid'.
VERBOSE: Importing function 'convert-CommandLine2VSCDebugJson'.
VERBOSE: Importing function 'Convert-HelpToHtmlFile'.
VERBOSE: Importing function 'convert-ISEOpenSession'.
VERBOSE: Importing function 'convertFrom-EscapedPSText'.
VERBOSE: The 'converto-VSCConfig' command in the verb-dev' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'converto-VSCConfig'.
VERBOSE: Importing function 'ConvertTo-Breakpoint'.
VERBOSE: Importing function 'convertTo-EscapedPSText'.
VERBOSE: Importing function 'ConvertTo-ModuleDynamicTDO'.
VERBOSE: Importing function 'ConvertTo-ModuleMergedTDO'.
VERBOSE: Importing function 'convertTo-UnwrappedPS'.
VERBOSE: Importing function 'convertTo-WrappedPS'.
VERBOSE: Importing function 'copy-ISETabFileToLocal'.
VERBOSE: Importing function 'export-ISEBreakPoints'.
VERBOSE: Importing function 'export-ISEBreakPointsALL'.
VERBOSE: Importing function 'export-ISEOpenFiles'.
VERBOSE: Importing function 'find-NounAliasesTDO'.
VERBOSE: Importing function 'get-AliasAssignsAST'.
VERBOSE: Importing function 'get-CodeProfileAST'.
VERBOSE: Importing function 'get-CodeRiskProfileAST'.
VERBOSE: Importing function 'Get-CommentBlocks'.
VERBOSE: Importing function 'get-FunctionBlock'.
VERBOSE: Importing function 'get-FunctionBlocks'.
VERBOSE: Importing function 'get-HelpParsed'.
VERBOSE: Importing function 'get-ISEBreakPoints'.
VERBOSE: Importing function 'get-ISEOpenFilesExported'.
VERBOSE: Importing function 'get-ModuleRevisedCommands'.
VERBOSE: Importing function 'get-NounAliasTDO'.
VERBOSE: Importing function 'get-ProjectNameTDO'.
VERBOSE: Importing function 'Get-PSBreakpointSorted'.
VERBOSE: Importing function 'Get-PSModuleFile'.
VERBOSE: Importing function 'get-StrictMode'.
VERBOSE: Importing function 'get-VariableAssignsAST'.
VERBOSE: Importing function 'get-VerbAliasTDO'.
VERBOSE: Importing function 'get-VersionInfo'.
VERBOSE: Importing function 'import-ISEBreakPoints'.
VERBOSE: Importing function 'import-ISEBreakPointsALL'.
VERBOSE: Importing function 'import-ISEConsoleColors'.
VERBOSE: Importing function 'import-ISEOpenFiles'.
VERBOSE: Importing function 'Initialize-ModuleFingerprint'.
VERBOSE: Importing function 'Initialize-PSModuleDirectories'.
VERBOSE: Importing function 'move-ISEBreakPoints'.
VERBOSE: Importing function 'new-CBH'.
VERBOSE: Importing function 'New-GitHubGist'.
VERBOSE: Importing function 'pop-FunctionDev'.
VERBOSE: Importing function 'push-FunctionDev'.
VERBOSE: Importing function 'restore-ISEConsoleColors'.
VERBOSE: Importing function 'restore-ModuleBuild'.
VERBOSE: Importing function 'save-ISEConsoleColors'.
VERBOSE: Importing function 'show-ISEOpenTab'.
VERBOSE: Importing function 'show-Verbs'.
VERBOSE: Importing function 'Split-CommandLine'.
VERBOSE: Importing function 'Step-ModuleVersionCalculated'.
VERBOSE: Importing function 'Test-ModuleTMPFiles'.
VERBOSE: Importing function 'test-VerbStandard'.
VERBOSE: Importing function 'Uninstall-ModuleForce'.
VERBOSE: Importing function 'update-NewModule'.
VERBOSE: Importing alias 'build-VSCConfig'.
VERBOSE: Importing alias 'convert-cmdline2json'.
VERBOSE: Importing alias 'cpIseFileLocal'.
VERBOSE: Importing alias 'epBP'.
VERBOSE: Importing alias 'epBpAll'.
VERBOSE: Importing alias 'epIseBp'.
VERBOSE: Importing alias 'epIseBpAll'.
VERBOSE: Importing alias 'epIseOpen'.
VERBOSE: Importing alias 'gbps'.
VERBOSE: Importing alias 'get-NounAlias'.
VERBOSE: Importing alias 'get-ScriptProfileAST'.
VERBOSE: Importing alias 'get-VerbAlias'.
VERBOSE: Importing alias 'gIseBp'.
VERBOSE: Importing alias 'gIseOpen'.
VERBOSE: Importing alias 'gmorc'.
VERBOSE: Importing alias 'Invoke-CreateModuleHelpFile'.
VERBOSE: Importing alias 'ipbp'.
VERBOSE: Importing alias 'ipbpAll'.
VERBOSE: Importing alias 'ipIseBp'.
VERBOSE: Importing alias 'ipIseBpAll'.
VERBOSE: Importing alias 'ipIseOpen'.
VERBOSE: Importing alias 'Merge-Module'.
VERBOSE: Importing alias 'mIseBp'.
VERBOSE: Importing alias 'parse-Help'.
VERBOSE: Importing alias 'parseHelp'.
VERBOSE: Importing alias 'process-NewModule'.
VERBOSE: Importing alias 'shift-ISEBreakPoints'.
VERBOSE: Importing alias 'shIseTab'.
VERBOSE: Importing alias 'sIseBp'.
VERBOSE: Importing alias 'test-verb'.
VERBOSE: Importing alias 'Unmerge-Module'.
VERBOSE: Importing alias 'unwrap-PS'.
VERBOSE: Importing alias 'wrap-PS'.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-auth\2.3.1\verb-auth.psd1'.
VERBOSE: Populating RepositorySourceLocation property for module verb-auth.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-auth\2.3.1\verb-Auth.psm1'.
WARNING: The names of some imported commands from the module 'verb-auth' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'Check-GroupMembership' command in the verb-auth' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Check-GroupMembership'.
VERBOSE: Importing function 'convert-TenantIdToDomainName'.
VERBOSE: Importing function 'convert-TenantIdToTag'.
VERBOSE: Importing function 'Get-AdminCred'.
VERBOSE: Importing function 'get-CredFile'.
VERBOSE: Importing function 'get-HybridOPCredentials'.
VERBOSE: Importing function 'get-IntegrityLevel'.
VERBOSE: Importing function 'Get-LocalMachineSID'.
VERBOSE: Importing function 'Get-LoggedOnUserSID'.
VERBOSE: Importing function 'Get-O365AdminCred'.
VERBOSE: Importing function 'get-password'.
VERBOSE: Importing function 'get-TenantCredentials'.
VERBOSE: Importing function 'get-TenantID'.
VERBOSE: Importing function 'get-TenantMFARequirement'.
VERBOSE: Importing function 'get-TenantTag'.
VERBOSE: Importing function 'get-TenOrgNames'.
VERBOSE: Importing function 'resolve-AppIDToCBAFriendlyName'.
VERBOSE: Importing function 'resolve-UserNameToUserRole'.
VERBOSE: Importing function 'Start-Elevated'.
VERBOSE: Importing function 'Test-AdminAcct'.
VERBOSE: Importing function 'Test-IsDomainAdmin'.
VERBOSE: Importing function 'test-IsElevated'.
VERBOSE: Importing function 'Test-IsEnterpriseAdmin'.
VERBOSE: Importing function 'Test-IsLocalAdmin'.
VERBOSE: The 'Validate-Credential' command in the verb-auth' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Validate-Credential'.
VERBOSE: Importing alias 'FunctionAliasName'.
VERBOSE: Importing alias 'get-TenOrgs'.
VERBOSE: Importing alias 'Test-RunAsElevated'.

▒
▒
▒
░
░

LYN-9C5CTV3
 ▓▒▓
TORO\kadritss
 ▓▒▓
Tue 09/17/2024 13:15
 [292ms]

▒
▒
▒
▒
▒

[PS]
:
C:\u\w\p\scripts

$



PS>pushd ; cd c:\usr\work\exch\scripts\ ; .\publish-profile2servers.ps1 ;
Calculated $runSource:ExternalScript
13:28:51:detected dot-sourced invocation: Skipping $PSCmdlet.MyInvocation.InvocationName-tied cmds...
$targetServers reflects 20 destinations
write-verbose$((get-date).ToString('HH:mm:ss')):$targetServers:
$(($targetServers|out-string).trim()) : The term 'write-verbose$((get-date).ToString('HH:mm:ss')):$targetServers:
$(($targetServers|out-string).trim())' is not recognized as the name of a cmdlet, function, script file, or operable 
program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\usr\work\exch\scripts\publish-profile2servers.ps1:255 char:5
+     write-verbose"$((get-date).ToString('HH:mm:ss')):`$targetServers: ...
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (write-verbose$(...string).trim()):String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
write-verbose$((get-date).ToString('HH:mm:ss')):$targetServers:
$(($targetServers|out-string).trim()) : The term 'write-verbose$((get-date).ToString('HH:mm:ss')):$targetServers:
$(($targetServers|out-string).trim())' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\usr\work\exch\scripts\publish-profile2servers.ps1:255 char:5
+     write-verbose"$((get-date).ToString('HH:mm:ss')):`$targetServers: ...
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (write-verbose$(...string).trim()):String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

---------------------------------------------------------------------------------
START ==== publish-profile2servers.ps1 ====
13:28:51:

## === 1): Collect profilefiles attributes
13:28:51:get-ProfileFilesTDO w
Name                           Value                                                                                                                                                                                                                                          
----                           -----                                                                                                                                                                                                                                          
SourceProfileMachine           LYN-9C5CTV3                                                                                                                                                                                                                                    
targetProfileName              kadritss                                                                                                                                                                                                                                       
MinProfile                                                                                                                                                                                                                                                                    
inclBackFill                   True                                                                                                                                                                                                                                           
Verbose                        False
-targetProfileName: kadritss
13:28:53:Elapsed Time:  00d 00h 00m 00s 034ms
Resolved base Profile Files: 9 files
Types:
Count Name
----- ----
    9 .ps1 files
13:28:53:_get-BackFileFiles w
Name                           Value                                                                                                                                                                                                                                          
----                           -----                                                                                                                                                                                                                                          
SourceProfileMachine           LYN-9C5CTV3                                                                                                                                                                                                                                    
backFillDir                    c:\usr\work\exch\scripts\                                                                                                                                                                                                                      
Verbose                        False                                                                                                                                                                                                                                          
backFillFileFilter             verb-*.ps1...                                                                                                                                                                                                                                  
backFillFileExclude            -pub\.ps1$...
PS>TerminatingError(_get-BackFileFiles): "You cannot call a method on a null-valued expression."
WARNING: 13:28:53:

▒
▒
▒
░
░

LYN-9C5CTV3
 ▓▒▓
TORO\kadritss
 ▓▒▓
Tue 09/17/2024 13:28
 [2s]

▒
▒
▒
▒
▒

[PS]
:
C:\u\w\e\scripts

$




PS>pushd ; cd c:\usr\work\exch\scripts\ ; .\publish-profile2servers.ps1 ;
Calculated $runSource:ExternalScript
13:30:39:detected dot-sourced invocation: Skipping $PSCmdlet.MyInvocation.InvocationName-tied cmds...
$targetServers reflects 20 destinations
write-verbose $((get-date).ToString('HH:mm:ss')):$targetServers:
$(($targetServers|out-string).trim()) : The term 'write-verbose $((get-date).ToString('HH:mm:ss')):$targetServers:
$(($targetServers|out-string).trim())' is not recognized as the name of a cmdlet, function, script file, or operable 
program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\usr\work\exch\scripts\publish-profile2servers.ps1:255 char:5
+     write-verbose" $((get-date).ToString('HH:mm:ss')):`$targetServers ...
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (write-verbose $...string).trim()):String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException
write-verbose $((get-date).ToString('HH:mm:ss')):$targetServers:
$(($targetServers|out-string).trim()) : The term 'write-verbose $((get-date).ToString('HH:mm:ss')):$targetServers:
$(($targetServers|out-string).trim())' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
At C:\usr\work\exch\scripts\publish-profile2servers.ps1:255 char:5
+     write-verbose" $((get-date).ToString('HH:mm:ss')):`$targetServers ...
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (write-verbose $...string).trim()):String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

---------------------------------------------------------------------------------
START ==== publish-profile2servers.ps1 ====
13:30:39:

## === 1): Collect profilefiles attributes
13:30:39:get-ProfileFilesTDO w
Name                           Value                                                                                                                                                                                                                                          
----                           -----                                                                                                                                                                                                                                          
SourceProfileMachine           LYN-9C5CTV3                                                                                                                                                                                                                                    
targetProfileName              kadritss                                                                                                                                                                                                                                       
MinProfile                                                                                                                                                                                                                                                                    
inclBackFill                   True                                                                                                                                                                                                                                           
Verbose                        False
-targetProfileName: kadritss
13:30:40:Elapsed Time:  00d 00h 00m 00s 017ms
Resolved base Profile Files: 9 files
Types:
Count Name
----- ----
    9 .ps1 files
13:30:40:_get-BackFileFiles w
Name                           Value                                                                                                                                                                                                                                          
----                           -----                                                                                                                                                                                                                                          
SourceProfileMachine           LYN-9C5CTV3                                                                                                                                                                                                                                    
backFillDir                    c:\usr\work\exch\scripts\                                                                                                                                                                                                                      
Verbose                        False                                                                                                                                                                                                                                          
backFillFileFilter             verb-*.ps1...                                                                                                                                                                                                                                  
backFillFileExclude            -pub\.ps1$...
PS>TerminatingError(_get-BackFileFiles): "You cannot call a method on a null-valued expression."
WARNING: 13:30:40:

▒
▒
▒
░
░

LYN-9C5CTV3
 ▓▒▓
TORO\kadritss
 ▓▒▓
Tue 09/17/2024 13:30
 [1s]

▒
▒
▒
▒
▒

[PS]
:
C:\u\w\e\scripts

$





▒
▒
▒
░
░

LYN-9C5CTV3
 ▓▒▓
TORO\kadritss
 ▓▒▓
Tue 09/17/2024 13:30
 [1s]

▒
▒
▒
▒
▒

[PS]
:
C:\u\w\e\scripts

$




