**********************
Windows PowerShell transcript start
Start time: 20240923161712
Username: TORO\kadritss
RunAs User: TORO\kadritss
Configuration Name: 
Machine: LYN-9C5CTV3 (Microsoft Windows NT 10.0.19045.0)
Host Application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
Process ID: 10896
PSVersion: 5.1.19041.4894
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.19041.4894
Platform: Win32NT
BuildVersion: 10.0.19041.4894
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
OS: Microsoft Windows NT 10.0.19045.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-Exo-Transcript-BATCH-EXEC-20240923-1617PM-trans-log.txt
16:17:12: INFO:  #*======v VERB-dev.psm1:verb-Exo v======
16:17:12: VERBOSE:  ($modRoot is blank, assigning from mandetory param:$ModDirPath)
16:17:12:(executing:Get-BuildEnvironment -Path c:\sc\verb-Exo 
(use -NoBuildInfo if hangs))
16:17:12: INFO:  Run: reset-ModulePublishingDirectory -ModuleName verb-Exo
VERBOSE: $PSBoundParameters:
Key        Value   
---        -----   
ModuleName verb-Exo
whatIf     False   
Verbose    True
16:17:12: ##  
#*------v PROCESSING : verb-Exo v------
16:17:12: INFO:  Pre-purge (CHANGELOG|README)\.md$ Root dir matches from :
processing:Resource...
16:17:12: INFO:  verb-Exo resolved $ModPubPath:C:\sc\verb-Exo\verb-Exo\
$ModResPath:C:\sc\verb-Exo\Resource\
16:17:12: VERBOSE:  (Reset module Resource files (purge from C:\sc\verb-Exo\verb-Exo\))
processing:Licenses...
16:17:12: INFO:  verb-Exo resolved $ModPubPath:C:\sc\verb-Exo\verb-Exo\
$ModResPath:C:\sc\verb-Exo\Licenses\
16:17:12: VERBOSE:  (Reset module Licenses files (purge from C:\sc\verb-Exo\verb-Exo\))
processing:Docs...
16:17:12: INFO:  verb-Exo resolved $ModPubPath:C:\sc\verb-Exo\verb-Exo\
$ModResPath:C:\sc\verb-Exo\Docs\
16:17:12: VERBOSE:  (Reset module Docs files (purge from C:\sc\verb-Exo\verb-Exo\))
16:17:12: INFO:  ==C:\sc\verb-Exo\CHANGELOG.md:
WARNING: removing matched C:\sc\verb-Exo\verb-Exo\CHANGELOG.md...
VERBOSE: Performing the operation "Remove File" on target "C:\sc\verb-Exo\verb-Exo\CHANGELOG.md".
16:17:12: INFO:  ==C:\sc\verb-Exo\README.md:
WARNING: removing matched C:\sc\verb-Exo\verb-Exo\README.md...
VERBOSE: Performing the operation "Remove File" on target "C:\sc\verb-Exo\verb-Exo\README.md".
16:17:12: INFO:  ==C:\sc\verb-Exo\Docs\Quick-Start-Installation-and-Example.md:
WARNING: removing matched C:\sc\verb-Exo\verb-Exo\Quick-Start-Installation-and-Example.md...
VERBOSE: Performing the operation "Remove File" on target "C:\sc\verb-Exo\verb-Exo\Quick-Start-Installation-and-Example.md".
16:17:12: ##  
#*------^ PROCESSING : verb-Exo ^------
16:17:12: INFO:  Run: populate-ModulePublishingDirectory -ModuleName verb-Exo
VERBOSE: $PSBoundParameters:
Key        Value   
---        -----   
ModuleName verb-Exo
whatIf     False   
Verbose    True
16:17:12: ##  
#*------v PROCESSING : verb-Exo v------
16:17:12: INFO:  Locating (CHANGELOG|README)\.md$ Root dir matches from :
processing:Resource...
16:17:12: INFO:  verb-Exo resolved $ModPubPath:C:\sc\verb-Exo\verb-Exo\
$ModResPath:C:\sc\verb-Exo\Resource\
16:17:12: VERBOSE:  (Recopy module Resource files (copy from C:\sc\verb-Exo\verb-Exo\))
processing:Licenses...
16:17:12: INFO:  verb-Exo resolved $ModPubPath:C:\sc\verb-Exo\verb-Exo\
$ModResPath:C:\sc\verb-Exo\Licenses\
16:17:12: VERBOSE:  (Recopy module Licenses files (copy from C:\sc\verb-Exo\verb-Exo\))
processing:Docs...
16:17:12: INFO:  verb-Exo resolved $ModPubPath:C:\sc\verb-Exo\verb-Exo\
$ModResPath:C:\sc\verb-Exo\Docs\
16:17:12: VERBOSE:  (Recopy module Docs files (copy from C:\sc\verb-Exo\verb-Exo\))
16:17:12: INFO:  copy-item w
Name                           Value                                                                                        
----                           -----                                                                                        
path                           {C:\sc\verb-Exo\CHANGELOG.md, C:\sc\verb-Exo\README.md, C:\sc\verb-Exo\Docs\Quick-Start-In...
destination                    C:\sc\verb-Exo\verb-Exo\                                                                     
force                          True                                                                                         
erroraction                    STOP                                                                                         
verbose                        True                                                                                         
whatif                         False
--$pltCI.path:
C:\sc\verb-Exo\CHANGELOG.md
C:\sc\verb-Exo\README.md
C:\sc\verb-Exo\Docs\Quick-Start-Installation-and-Example.md
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-Exo\CHANGELOG.md Destination: C:\sc\verb-Exo\verb-Exo\CHANGELOG.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-Exo\README.md Destination: C:\sc\verb-Exo\verb-Exo\README.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-Exo\Docs\Quick-Start-Installation-and-Example.md Destination: C:\sc\verb-Exo\verb-Exo\Quick-Start-Installation-and-Example.md".
16:17:12: ##  
#*------^ PROCESSING : verb-Exo ^------
16:17:12: INFO:  Validate updated verb-Exo\verb-Exo dir contents against Manifest:
Run: test-modulemanifest -Path C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\verb-Exo\verb-EXO.psm1'.
16:17:12: VERBOSE:  ((no $ttmm_Err: test-ModuleManifest had no errors))
16:17:12: INFO:  NON-Republish pass detected:
MERGE parm specified as well:`n-Merge Public|Internal|Classes include subdirs module content into updated .psm1
-Sign updated files.
-Uninstall/Remove existing profile module
-Copy new module to profile
-Confirm: Get-Module -ListAvailable
-Check/Update existing Psd1 Version
-Publish-Module
-Remove existing installed profile module
-Test Install-Module
-Test Import-Module
16:17:12: INFO:  -Merge specified...
16:17:12: INFO:  ConvertTo-ModuleMergedTDO w
Name                           Value                                                                                        
----                           -----                                                                                        
ModuleName                     verb-Exo                                                                                     
ModuleSourcePath               {c:\sc\verb-Exo\Public, c:\sc\verb-Exo\Internal}                                             
ModuleDestinationPath          c:\sc\verb-Exo\verb-Exo                                                                      
RequiredVersion                8.1.1                                                                                        
LogSpec                        {logging, logfile, transcript}                                                               
NoAliasExport                                                                                                               
ErrorAction                    Stop                                                                                         
showdebug                      False                                                                                        
whatif                         False
VERBOSE: $PSBoundParameters:
Key                   Value                                           
---                   -----                                           
ModuleName            verb-Exo                                        
ModuleSourcePath      {c:\sc\verb-Exo\Public, c:\sc\verb-Exo\Internal}
ModuleDestinationPath c:\sc\verb-Exo\verb-Exo                         
RequiredVersion       8.1.1                                           
LogSpec               {logging, logfile, transcript}                  
NoAliasExport         False                                           
ErrorAction           Stop                                            
showDebug             False                                           
whatIf                False
16:17:12: INFO:  ConvertTo-ModuleMergedTDO w
Name                           Value                                                                                        
----                           -----                                                                                        
ModuleName                     verb-Exo                                                                                     
ModuleSourcePath               {c:\sc\verb-Exo\Public, c:\sc\verb-Exo\Internal}                                             
ModuleDestinationPath          c:\sc\verb-Exo\verb-Exo                                                                      
RequiredVersion                8.1.1                                                                                        
LogSpec                        {logging, logfile, transcript}                                                               
NoAliasExport                                                                                                               
ErrorAction                    Stop                                                                                         
showdebug                      False                                                                                        
whatif                         False
VERBOSE: (backup-FileTDO -path c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1)
VERBOSE: (backup-FileTDO -path c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1)
DEADWOOD REMOVAL:remove-UnneededFileVariants w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-Exo\verb-Exo                                                                      
Include                        verb-Exo.psm1_*                                                                              
Pattern                        \.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$                                                              
FilterOn                       CreationTime                                                                                 
Keep                           2                                                                                            
KeepToday                      True                                                                                         
verbose                        True                                                                                         
whatif                         False
16:17:13:gci w
Name                           Value                                                                                        
----                           -----                                                                                        
path                           c:\sc\verb-Exo\verb-Exo\*                                                                    
include                        verb-Exo.psm1_*                                                                              
ErrorAction                    Stop
VERBOSE: $cuttime:09/23/2024 00:00:00
VERBOSE: post-filtering on pattern:\.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$
(5 in set *before* filtering)
(4 in set *after* filtering)
VERBOSE: filtering on files prior to $cuttime:09/23/2024 00:00:00 AM, on CreationTime property
(4 in set *before* filtering)
(3 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(3 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
16:17:13:Reducing matched population from 5 to 1 files via:
post-filtered files with regex pattern:\.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$
filtered files on CreationTime prior to 09/23/2024 00:00:00 AM
16:17:13:Remove-Item w 
Name                           Value                                                                                        
----                           -----                                                                                        
path                           C:\sc\verb-Exo\verb-Exo\verb-exo.psm1_20240301-1518PM                                        
ErrorAction                    STOP                                                                                         
whatif                         False
16:17:13: INFO:  (NON-dyn psm1 detected - purging existing non-CBH content...)
VERBOSE: L16:17:14:(doesn't appear to be an inter meta-CBH block)
VERBOSE: adding $PostCBHBlock
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Value    {# verb-Exo.psm1...                                                                                                
Path     c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                                          
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False
VERBOSE: 16:17:14:(Set-ContentFixEncoding:c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP)
VERBOSE: 16:17:14:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
PassThru                       True                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
encoding                       UTF8                                                                                         
ErrorAction                    STOP
-Value[0,2]:
# verb-Exo.psm1
  <#
16:17:14: INFO:  Initialize-PSModuleDirectories w
Name                           Value                                                                                        
----                           -----                                                                                        
ModuleSourcePath               {c:\sc\verb-Exo\Public, c:\sc\verb-Exo\Internal}                                             
ModuleDestinationPath          c:\sc\verb-Exo\verb-Exo                                                                      
ErrorAction                    Stop                                                                                         
whatif                         False
VERBOSE: $PSBoundParameters:
Key                   Value                                           
---                   -----                                           
ModuleSourcePath      {c:\sc\verb-Exo\Public, c:\sc\verb-Exo\Internal}
ModuleDestinationPath c:\sc\verb-Exo\verb-Exo                         
ErrorAction           Stop                                            
whatIf                False
VERBOSE: (non-pipeline - param - input)
16:17:14: INFO:  
#*------v (1/2):C:\sc\verb-Exo\Public v------
16:17:14: INFO:  Processing 43 $ComponentScripts files through Remove-AuthenticodeSignature...
16:17:14: INFO:  Remove-AuthenticodeSignature w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           {C:\sc\verb-Exo\Public\add-EXOLicense.ps1, C:\sc\verb-Exo\Public\check-EXOLegalHold.ps1, C...
whatif                         False                                                                                        
verbose                        True
VERBOSE: 16:17:14:((1/43):C:\sc\verb-Exo\Public\add-EXOLicense.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((2/43):C:\sc\verb-Exo\Public\check-EXOLegalHold.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((3/43):C:\sc\verb-Exo\Public\Connect-EXO.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((4/43):C:\sc\verb-Exo\Public\convert-ADUserRecipientTypeRemoteSharedMailbox.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((5/43):C:\sc\verb-Exo\Public\convert-ADUserRecipientTypeRemoteUserMailbox.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((6/43):C:\sc\verb-Exo\Public\convert-exoMailboxTypeSharedMailbox.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((7/43):C:\sc\verb-Exo\Public\convert-exoMailboxTypeUserMailbox.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((8/43):C:\sc\verb-Exo\Public\convert-HistoricalSearchCSV.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((9/43):C:\sc\verb-Exo\Public\copy-XPermissionGroupToCloudOnly.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((10/43):C:\sc\verb-Exo\Public\cxotol.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((11/43):C:\sc\verb-Exo\Public\cxotor.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((12/43):C:\sc\verb-Exo\Public\Disconnect-EXO.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((13/43):C:\sc\verb-Exo\Public\get-AADlicensePlanList.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((14/43):C:\sc\verb-Exo\Public\get-ADUsersWithSoftDeletedxoMailboxes.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((15/43):C:\sc\verb-Exo\Public\get-ExoGxMTEventType.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((16/43):C:\sc\verb-Exo\Public\get-ExoMailboxLicenses.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((17/43):C:\sc\verb-Exo\Public\get-ExoMessageTraceEventType.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((18/43):C:\sc\verb-Exo\Public\get-ExoMessageTraceSourceType.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((19/43):C:\sc\verb-Exo\Public\get-EXOMsgTraceDetailed.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((20/43):C:\sc\verb-Exo\Public\get-MailboxFolderStats.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((21/43):C:\sc\verb-Exo\Public\get-MsgTrace.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((22/43):C:\sc\verb-Exo\Public\Get-OrgNameFromUPN.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((23/43):C:\sc\verb-Exo\Public\get-xoHistSearch.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((24/43):C:\sc\verb-Exo\Public\get-XOMailboxFolderList.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((25/43):C:\sc\verb-Exo\Public\Get-xoMailboxFolderPermissionsRecursive.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((26/43):C:\sc\verb-Exo\Public\get-XOMailboxFolderPermissionsSummary.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((27/43):C:\sc\verb-Exo\Public\move-MailboxToXo.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((28/43):C:\sc\verb-Exo\Public\new-DgTor.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((29/43):C:\sc\verb-Exo\Public\new-xoDGFromProperty.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((30/43):C:\sc\verb-Exo\Public\Reconnect-EXO.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((31/43):C:\sc\verb-Exo\Public\remove-EXOLicense.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((32/43):C:\sc\verb-Exo\Public\Reset-xoMailboxFolderPermissionsRecursive.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((33/43):C:\sc\verb-Exo\Public\resolve-AppIDToCBAFriendlyName.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((34/43):C:\sc\verb-Exo\Public\resolve-Name.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((35/43):C:\sc\verb-Exo\Public\resolve-user.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((36/43):C:\sc\verb-Exo\Public\resolve-xoRcps.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((37/43):C:\sc\verb-Exo\Public\rxotol.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((38/43):C:\sc\verb-Exo\Public\rxotor.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((39/43):C:\sc\verb-Exo\Public\test-EXOConnectionTDO.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((40/43):C:\sc\verb-Exo\Public\test-ExoDnsRecordTDO.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((41/43):C:\sc\verb-Exo\Public\test-EXOIsLicensed.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((42/43):C:\sc\verb-Exo\Public\test-EXOv2Connection.ps1:has no existing Authenticode signature)
VERBOSE: 16:17:14:((43/43):C:\sc\verb-Exo\Public\test-xoMailbox.ps1:has no existing Authenticode signature)
16:17:14: INFO:  Processing (1/43):C:\sc\verb-Exo\Public\add-EXOLicense.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:14:(Add-ContentFixEncoding:)
VERBOSE: 16:17:14:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v add-EXOLicense.ps1 v------
function add-EXOLicense {
16:17:14: INFO:  Processing (2/43):C:\sc\verb-Exo\Public\check-EXOLegalHold.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:14:(Add-ContentFixEncoding:)
VERBOSE: 16:17:14:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v check-EXOLegalHold.ps1 v------
Function check-EXOLegalHold {
16:17:14: INFO:  Processing (3/43):C:\sc\verb-Exo\Public\Connect-EXO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:14:(Add-ContentFixEncoding:)
VERBOSE: 16:17:14:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Connect-EXO.ps1 v------
Function Connect-EXO {
16:17:14: INFO:  Processing (4/43):C:\sc\verb-Exo\Public\convert-ADUserRecipientTypeRemoteSharedMailbox.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:14:(Add-ContentFixEncoding:)
VERBOSE: 16:17:14:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-ADUserRecipientTypeRemoteSharedMailbox.ps1 v------
function convert-ADUserRecipientTypeRemoteSharedMailbox{
16:17:14: INFO:  Processing (5/43):C:\sc\verb-Exo\Public\convert-ADUserRecipientTypeRemoteUserMailbox.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:14:(Add-ContentFixEncoding:)
VERBOSE: 16:17:14:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-ADUserRecipientTypeRemoteUserMailbox.ps1 v------
function convert-ADUserRecipientTypeRemoteUserMailbox{
16:17:14: INFO:  Processing (6/43):C:\sc\verb-Exo\Public\convert-exoMailboxTypeSharedMailbox.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:14:(Add-ContentFixEncoding:)
VERBOSE: 16:17:14:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-exoMailboxTypeSharedMailbox.ps1 v------
function convert-exoMailboxTypeSharedMailbox{
16:17:14: INFO:  Processing (7/43):C:\sc\verb-Exo\Public\convert-exoMailboxTypeUserMailbox.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:14:(Add-ContentFixEncoding:)
VERBOSE: 16:17:14:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-exoMailboxTypeUserMailbox.ps1 v------
function convert-exoMailboxTypeUserMailbox{
16:17:14: INFO:  Processing (8/43):C:\sc\verb-Exo\Public\convert-HistoricalSearchCSV.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:14:(Add-ContentFixEncoding:)
VERBOSE: 16:17:14:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-HistoricalSearchCSV.ps1 v------
function convert-HistoricalSearchCSV {
16:17:15: INFO:  Processing (9/43):C:\sc\verb-Exo\Public\copy-XPermissionGroupToCloudOnly.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v copy-XPermissionGroupToCloudOnly.ps1 v------
function copy-XPermissionGroupToCloudOnly {
16:17:15: INFO:  Processing (10/43):C:\sc\verb-Exo\Public\cxotol.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v cxotol.ps1 v------
function cxoTOL {
16:17:15: INFO:  Processing (11/43):C:\sc\verb-Exo\Public\cxotor.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v cxotor.ps1 v------
function cxoTOR {
16:17:15: INFO:  Processing (12/43):C:\sc\verb-Exo\Public\Disconnect-EXO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Disconnect-EXO.ps1 v------
Function Disconnect-EXO {
16:17:15: INFO:  Processing (13/43):C:\sc\verb-Exo\Public\get-AADlicensePlanList.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-AADlicensePlanList.ps1 v------
function get-AADlicensePlanList {
16:17:15: INFO:  Processing (14/43):C:\sc\verb-Exo\Public\get-ADUsersWithSoftDeletedxoMailboxes.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-ADUsersWithSoftDeletedxoMailboxes.ps1 v------
function get-ADUsersWithSoftDeletedxoMailboxes {
16:17:15: INFO:  Processing (15/43):C:\sc\verb-Exo\Public\get-ExoGxMTEventType.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-ExoGxMTEventType.ps1 v------
function get-ExoGxMTEventType {
16:17:15: INFO:  Processing (16/43):C:\sc\verb-Exo\Public\get-ExoMailboxLicenses.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-ExoMailboxLicenses.ps1 v------
function get-ExoMailboxLicenses {
16:17:15: INFO:  Processing (17/43):C:\sc\verb-Exo\Public\get-ExoMessageTraceEventType.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-ExoMessageTraceEventType.ps1 v------
function get-ExoMessageTraceEventType {
16:17:15: INFO:  Processing (18/43):C:\sc\verb-Exo\Public\get-ExoMessageTraceSourceType.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-ExoMessageTraceSourceType.ps1 v------
function get-ExoMessageTraceSourceType {
16:17:15: INFO:  Processing (19/43):C:\sc\verb-Exo\Public\get-EXOMsgTraceDetailed.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-EXOMsgTraceDetailed.ps1 v------
function get-EXOMsgTraceDetailed {
16:17:15: INFO:  Processing (20/43):C:\sc\verb-Exo\Public\get-MailboxFolderStats.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-MailboxFolderStats.ps1 v------
function get-MailboxFolderStats {
16:17:15: INFO:  Processing (21/43):C:\sc\verb-Exo\Public\get-MsgTrace.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-MsgTrace.ps1 v------
function get-MsgTrace {
16:17:15: INFO:  Processing (22/43):C:\sc\verb-Exo\Public\Get-OrgNameFromUPN.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-OrgNameFromUPN.ps1 v------
function Get-OrgNameFromUPN{
16:17:15: INFO:  Processing (23/43):C:\sc\verb-Exo\Public\get-xoHistSearch.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:15:(Add-ContentFixEncoding:)
VERBOSE: 16:17:15:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-xoHistSearch.ps1 v------
function get-xoHistSearch {
16:17:16: INFO:  Processing (24/43):C:\sc\verb-Exo\Public\get-XOMailboxFolderList.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:16:(Add-ContentFixEncoding:)
VERBOSE: 16:17:16:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-XOMailboxFolderList.ps1 v------
function get-XOMailboxFolderList {
16:17:16: INFO:  Processing (25/43):C:\sc\verb-Exo\Public\Get-xoMailboxFolderPermissionsRecursive.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:16:(Add-ContentFixEncoding:)
VERBOSE: 16:17:16:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-xoMailboxFolderPermissionsRecursive.ps1 v------
function Get-xoMailboxFolderPermissionsRecursive {
16:17:16: INFO:  Processing (26/43):C:\sc\verb-Exo\Public\get-XOMailboxFolderPermissionsSummary.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:16:(Add-ContentFixEncoding:)
VERBOSE: 16:17:16:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-XOMailboxFolderPermissionsSummary.ps1 v------
function get-XOMailboxFolderPermissionsSummary {
16:17:16: INFO:  Processing (27/43):C:\sc\verb-Exo\Public\move-MailboxToXo.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:16:(Add-ContentFixEncoding:)
VERBOSE: 16:17:16:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v move-MailboxToXo.ps1 v------
function move-MailboxToXo{
16:17:16: INFO:  Processing (28/43):C:\sc\verb-Exo\Public\new-DgTor.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:16:(Add-ContentFixEncoding:)
VERBOSE: 16:17:16:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v new-DgTor.ps1 v------
function new-DgTor {
16:17:16: INFO:  Processing (29/43):C:\sc\verb-Exo\Public\new-xoDGFromProperty.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:16:(Add-ContentFixEncoding:)
VERBOSE: 16:17:16:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v new-xoDGFromProperty.ps1 v------
function new-xoDGFromProperty{
16:17:16: INFO:  Processing (30/43):C:\sc\verb-Exo\Public\Reconnect-EXO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:16:(Add-ContentFixEncoding:)
VERBOSE: 16:17:16:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Reconnect-EXO.ps1 v------
Function Reconnect-EXO {
16:17:16: INFO:  Processing (31/43):C:\sc\verb-Exo\Public\remove-EXOLicense.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:16:(Add-ContentFixEncoding:)
VERBOSE: 16:17:16:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v remove-EXOLicense.ps1 v------
function remove-EXOLicense {
16:17:16: INFO:  Processing (32/43):C:\sc\verb-Exo\Public\Reset-xoMailboxFolderPermissionsRecursive.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:16:(Add-ContentFixEncoding:)
VERBOSE: 16:17:16:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Reset-xoMailboxFolderPermissionsRecursive.ps1 v------
function Reset-xoMailboxFolderPermissionsRecursive {
16:17:16: INFO:  Processing (33/43):C:\sc\verb-Exo\Public\resolve-AppIDToCBAFriendlyName.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:16:(Add-ContentFixEncoding:)
VERBOSE: 16:17:16:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v resolve-AppIDToCBAFriendlyName.ps1 v------
function resolve-AppIDToCBAFriendlyName {
16:17:17: INFO:  Processing (34/43):C:\sc\verb-Exo\Public\resolve-Name.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:17:(Add-ContentFixEncoding:)
VERBOSE: 16:17:17:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v resolve-Name.ps1 v------
Function resolve-Name {
16:17:17: INFO:  Processing (35/43):C:\sc\verb-Exo\Public\resolve-user.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:17:(Add-ContentFixEncoding:)
VERBOSE: 16:17:17:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v resolve-user.ps1 v------
function resolve-user {
16:17:17: INFO:  Processing (36/43):C:\sc\verb-Exo\Public\resolve-xoRcps.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:17:(Add-ContentFixEncoding:)
VERBOSE: 16:17:17:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v resolve-xoRcps.ps1 v------
function Resolve-xoRcps {
16:17:17: INFO:  Processing (37/43):C:\sc\verb-Exo\Public\rxotol.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:17:(Add-ContentFixEncoding:)
VERBOSE: 16:17:17:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v rxotol.ps1 v------
function rxoTOL {
16:17:17: INFO:  Processing (38/43):C:\sc\verb-Exo\Public\rxotor.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:17:(Add-ContentFixEncoding:)
VERBOSE: 16:17:17:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v rxotor.ps1 v------
function rxoTOR {
16:17:17: INFO:  Processing (39/43):C:\sc\verb-Exo\Public\test-EXOConnectionTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:17:(Add-ContentFixEncoding:)
VERBOSE: 16:17:17:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v test-EXOConnectionTDO.ps1 v------
function test-EXOConnectionTDO{
16:17:17: INFO:  Processing (40/43):C:\sc\verb-Exo\Public\test-ExoDnsRecordTDO.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:17:(Add-ContentFixEncoding:)
VERBOSE: 16:17:17:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v test-ExoDnsRecordTDO.ps1 v------
if(-not (get-command test-ExoDnsRecordTDO -ea 0)){
16:17:17: INFO:  Processing (41/43):C:\sc\verb-Exo\Public\test-EXOIsLicensed.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:17:(Add-ContentFixEncoding:)
VERBOSE: 16:17:17:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v test-EXOIsLicensed.ps1 v------
function test-EXOIsLicensed {
16:17:17: INFO:  Processing (42/43):C:\sc\verb-Exo\Public\test-EXOv2Connection.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:17:(Add-ContentFixEncoding:)
VERBOSE: 16:17:17:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v test-EXOv2Connection.ps1 v------
function test-EXOv2Connection {
16:17:17: INFO:  Processing (43/43):C:\sc\verb-Exo\Public\test-xoMailbox.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:17:(Add-ContentFixEncoding:)
VERBOSE: 16:17:17:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v test-xoMailbox.ps1 v------
Function test-xoMailbox {
16:17:18: INFO:  
#*------^ (1/2):C:\sc\verb-Exo\Public ^------
16:17:18: INFO:  
#*------v (2/2):C:\sc\verb-Exo\Internal v------
16:17:18: INFO:  Processing 0 $ComponentScripts files through Remove-AuthenticodeSignature...
16:17:18: INFO:  Remove-AuthenticodeSignature w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                                                                                                                        
whatif                         False                                                                                        
verbose                        True
16:17:18: INFO:  
#*------^ (2/2):C:\sc\verb-Exo\Internal ^------
VERBOSE: (no Public\_CommonCode.ps1)
16:17:18: INFO:  (Updating Psm1 Export-ModuleMember -Function to reflect Public modules)
16:17:18: INFO:  Adding:FooterBlock...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:17:18:(Add-ContentFixEncoding:)
VERBOSE: 16:17:18:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*======^ END FUNCTIONS ^======
Export-ModuleMember -Function add-EXOLicense,check-EXOLegalHold,Connect-EXO,Test-Uri,convert-ADUserRecipientTypeRemoteSharedMailbox,convert-ADUserRecipientTypeRemoteUserMailbox,convert-exoMailboxTypeSharedMailbox,convert-exoMailboxTypeUserMailbox,convert-HistoricalSearchCSV,copy-XPermissionGroupToCloudOnly,cxoTOL,cxoTOR,Disconnect-EXO,get-AADlicensePlanList,get-ADUsersWithSoftDeletedxoMailboxes,get-ExoGxMTEventType,get-ExoMailboxLicenses,get-ExoMessageTraceEventType,get-ExoMessageTraceSourceType,get-EXOMsgTraceDetailed,get-MailboxFolderStats,get-MsgTrace,Get-OrgNameFromUPN,get-xoHistSearch,_cleanup,get-XOMailboxFolderList,Get-xoMailboxFolderPermissionsRecursive,get-XOMailboxFolderPermissionsSummary,move-MailboxToXo,check-ReqMods,new-DgTor,_cleanup,new-xoDGFromProperty,Reconnect-EXO,remove-EXOLicense,Reset-xoMailboxFolderPermissionsRecursive,resolve-AppIDToCBAFriendlyName,resolve-Name,resolve-user,Resolve-xoRcps,rxoTOL,rxoTOR,test-EXOConnectionTDO,test-ExoDnsRecordTDO,test-EXOIsLicensed,test-EXOv2Connection,test-xoMailbox,_cleanup -Alias *
16:17:18: INFO:  Updating the Psd1 FunctionsToExport to match
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP                                                                          
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    {#...
VERBOSE: 16:17:18:(Set-ContentFixEncoding:c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP)
VERBOSE: 16:17:18:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
PassThru                       True                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP                                                    
whatif                         False                                                                                        
encoding                       UTF8                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#
# Module manifest for module 'verb-EXO'
16:17:18: INFO:  confirm-ModuleBuildSync w
Name                           Value                                                                                        
----                           -----                                                                                        
ModPsdPath                     c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP                                                    
RequiredVersion                8.1.1                                                                                        
NoTest                         True                                                                                         
whatif                         False                                                                                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                      
---             -----                                      
ModPsdPath      {c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP}
RequiredVersion 8.1.1                                      
NoTest          True                                       
whatIf          False                                      
Verbose         True
16:17:18: INFO:  #*======v confirm-ModuleBuildSync:  v======
VERBOSE: (non-pipeline - param - input)
16:17:18: INFO:  (test-path confirms $ModPsm1 & $ModTestPs1)
16:17:18: INFO:  Import-PowerShellDataFile w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP                                                    
ErrorAction                    Stop                                                                                         
verbose                        True
16:17:18: INFO:  (resolved Module attributes:
$ModuleName:	verb-Exo
$ModRoot:	c:\sc\verb-Exo
$ModPsd1:	c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP
$ModPsm1:	c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP
$ModTestPs1:	c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1
$psd1Vers:	8.1.1
$psd1guid:	b9637e55-12be-4916-8000-a949f9426fa3)
16:17:18: INFO:  confirm-ModulePsd1Version w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP                                                    
RequiredVersion                8.1.1                                                                                        
whatif                         False                                                                                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                      
---             -----                                      
Path            {c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP}
RequiredVersion 8.1.1                                      
whatIf          False                                      
Verbose         True
16:17:18: INFO:  #*======v confirm-ModulePsd1Version: c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP v======
VERBOSE: (non-pipeline - param - input)
16:17:18: INFO:  (Version already updated to match)
16:17:18: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        8.1.1                                                                                        
Valid                          False
16:17:18: INFO:  (SET:$objReport.Valid = $true ;)
16:17:18: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        8.1.1                                                                                        
Valid                          True
16:17:18: INFO:  #*======^ confirm-ModulePsd1Version: c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP ^======
16:17:18: INFO:  (confirm-ModulePsd1Version:Success)
16:17:18: INFO:  confirm-ModulePsm1Version w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
RequiredVersion                8.1.1                                                                                        
whatif                         False                                                                                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                      
---             -----                                      
Path            {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}
RequiredVersion 8.1.1                                      
whatIf          False                                      
Verbose         True
16:17:18: INFO:  #*======v confirm-ModulePsm1Version: c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP v======
VERBOSE: (non-pipeline - param - input)
16:17:18: WARNING:  In:c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP
Version present:(8.1.0)
*does not* properly match:8.1.1
FORCING MATCHING UPDATE!
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                                          
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    {# verb-Exo.psm1...
VERBOSE: 16:17:19:(Set-ContentFixEncoding:c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP)
VERBOSE: 16:17:19:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
PassThru                       True                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
encoding                       UTF8                                                                                         
ErrorAction                    STOP
-Value[0,2]:
# verb-Exo.psm1
  <#
16:17:19: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        8.1.1                                                                                        
Valid                          False
16:17:19: INFO:  (SET:$objReport.Valid = $true ;)
16:17:19: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        8.1.1                                                                                        
Valid                          True
16:17:19: INFO:  #*======^ confirm-ModulePsm1Version: c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP ^======
16:17:19: INFO:  (confirm-ModulePsm1Version:Success)
16:17:19: INFO:  (-NoTest: skipping confirm-ModuleTestPs1Guid)
16:17:19: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Manifest                       c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP                                                    
Module                         c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
Pester                         (SKIPPED)                                                                                    
Guid                           (SKIPPED)                                                                                    
Version                        8.1.1                                                                                        
Valid                          False
16:17:19: INFO:  (SET:$objReport.Valid = $true ;)
16:17:19: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Manifest                       c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP                                                    
Module                         c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
Pester                         (SKIPPED)                                                                                    
Guid                           (SKIPPED)                                                                                    
Version                        8.1.1                                                                                        
Valid                          True
16:17:19: INFO:  #*======^ confirm-ModuleBuildSync:  ^======
16:17:19: INFO:  (confirm-ModuleBuildSync:Success)
16:17:19: INFO:  Test-ModuleTMPFiles w
Name                           Value                                                                                        
----                           -----                                                                                        
ModuleNamePSM1Path             c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
verbose                        True
VERBOSE: $PSBoundParameters:
Key                Value                                      
---                -----                                      
ModuleNamePSM1Path {c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP}
Verbose            True
16:17:19: INFO:  #*======v Test-ModuleTMPFiles: c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP v======
VERBOSE: (non-pipeline - param - input)
16:17:19: INFO:  
Psm1:c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP
Psd1:c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP
16:17:19: INFO:  Creating Testable c:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psd1
 to validate c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP will Test-ModuleManifest
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP Destination: C:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psd1".
16:17:19: INFO:  Test-ModuleManifest w
Name                           Value                                                                                        
----                           -----                                                                                        
verbose                        True                                                                                         
Path                           c:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psd1                            
ErrorVariable                  vManiErr                                                                                     
ErrorAction                    STOP
VERBOSE: Loading module from path 'C:\sc\verb-Exo\verb-Exo\verb-EXO.psm1'.
16:17:19: INFO:  Test-ModuleManifest:PASSED
16:17:19: INFO:  Creating Testable c:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psm1
 to validate c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP will Import-Module
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP Destination: C:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psm1".
16:17:19: INFO:  n import-module w
Name                           Value                                                                                        
----                           -----                                                                                        
Name                           c:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psm1                            
Force                          True                                                                                         
verbose                        True                                                                                         
ErrorAction                    STOP                                                                                         
ErrorVariable                  vIpMoErr                                                                                     
PassThru                       True
VERBOSE: Loading module from path 'C:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psm1'.
VERBOSE: Importing function 'add-EXOLicense'.
WARNING: The names of some imported commands from the module '89b22b44-5f32-4a70-ac3a-7e3c912f4bb7' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'check-EXOLegalHold' command in the 89b22b44-5f32-4a70-ac3a-7e3c912f4bb7' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'check-EXOLegalHold'.
VERBOSE: Importing function 'Connect-EXO'.
VERBOSE: Importing function 'convert-ADUserRecipientTypeRemoteSharedMailbox'.
VERBOSE: Importing function 'convert-ADUserRecipientTypeRemoteUserMailbox'.
VERBOSE: Importing function 'convert-exoMailboxTypeSharedMailbox'.
VERBOSE: Importing function 'convert-exoMailboxTypeUserMailbox'.
VERBOSE: Importing function 'convert-HistoricalSearchCSV'.
VERBOSE: Importing function 'copy-XPermissionGroupToCloudOnly'.
VERBOSE: Importing function 'cxoTOL'.
VERBOSE: Importing function 'cxoTOR'.
VERBOSE: Importing function 'Disconnect-EXO'.
VERBOSE: Importing function 'get-AADlicensePlanList'.
VERBOSE: Importing function 'get-ADUsersWithSoftDeletedxoMailboxes'.
VERBOSE: Importing function 'get-ExoGxMTEventType'.
VERBOSE: Importing function 'get-ExoMailboxLicenses'.
VERBOSE: Importing function 'get-ExoMessageTraceEventType'.
VERBOSE: Importing function 'get-ExoMessageTraceSourceType'.
VERBOSE: Importing function 'get-EXOMsgTraceDetailed'.
VERBOSE: Importing function 'get-MailboxFolderStats'.
VERBOSE: Importing function 'get-MsgTrace'.
VERBOSE: Importing function 'Get-OrgNameFromUPN'.
VERBOSE: Importing function 'get-xoHistSearch'.
VERBOSE: Importing function 'get-XOMailboxFolderList'.
VERBOSE: Importing function 'Get-xoMailboxFolderPermissionsRecursive'.
VERBOSE: Importing function 'get-XOMailboxFolderPermissionsSummary'.
VERBOSE: Importing function 'move-MailboxToXo'.
VERBOSE: Importing function 'new-DgTor'.
VERBOSE: Importing function 'new-xoDGFromProperty'.
VERBOSE: The 'Reconnect-EXO' command in the 89b22b44-5f32-4a70-ac3a-7e3c912f4bb7' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Reconnect-EXO'.
VERBOSE: Importing function 'remove-EXOLicense'.
VERBOSE: Importing function 'Reset-xoMailboxFolderPermissionsRecursive'.
VERBOSE: Importing function 'resolve-AppIDToCBAFriendlyName'.
VERBOSE: Importing function 'resolve-Name'.
VERBOSE: Importing function 'resolve-user'.
VERBOSE: Importing function 'Resolve-xoRcps'.
VERBOSE: Importing function 'rxoTOL'.
VERBOSE: Importing function 'rxoTOR'.
VERBOSE: Importing function 'test-EXOConnectionTDO'.
VERBOSE: Importing function 'test-EXOIsLicensed'.
VERBOSE: Importing function 'test-EXOv2Connection'.
VERBOSE: Importing function 'test-xoMailbox'.
VERBOSE: Importing alias 'Connect-EXO2'.
VERBOSE: Importing alias 'convert-ADUserRecipientType'.
VERBOSE: Importing alias 'convert-xoShared'.
VERBOSE: Importing alias 'convertfrom-HistoricalSearch'.
VERBOSE: Importing alias 'cxo'.
VERBOSE: Importing alias 'cxo2'.
VERBOSE: Importing alias 'cxo2cmw'.
VERBOSE: Importing alias 'cxo2TOL'.
VERBOSE: Importing alias 'cxo2TOR'.
VERBOSE: Importing alias 'Disconnect-EXO2'.
VERBOSE: Importing alias 'dxo'.
VERBOSE: Importing alias 'dxo2'.
VERBOSE: Importing alias 'Get-MailboxFolderPermissionsRecursive'.
VERBOSE: Importing alias 'GetFolderPermissions'.
VERBOSE: Importing alias 'nlu'.
VERBOSE: Importing alias 'reconnect-exo2'.
VERBOSE: Importing alias 'ReturnFolderList'.
VERBOSE: Importing alias 'revert-ADuserRecipientType'.
VERBOSE: Importing alias 'revert-xoUserMbx'.
VERBOSE: Importing alias 'rxo'.
VERBOSE: Importing alias 'rxo2'.
VERBOSE: Importing alias 'txo'.
VERBOSE: Importing alias 'ulu'.
16:17:20: INFO:  Ipmo: PASSED
16:17:20: INFO:  (remove-module -name c:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psm1 -force)
16:17:20: INFO:  (remove-item -path c:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psm1 -ErrorAction SilentlyContinue ;
16:17:20: INFO:  (remove-item -path c:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psd1 -ErrorAction SilentlyContinue ;
16:17:20: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Manifest                       89b22b44-5f32-4a70-ac3a-7e3c912f4bb7                                                         
Module                         89b22b44-5f32-4a70-ac3a-7e3c912f4bb7                                                         
Valid                          False
16:17:20: INFO:  (SET:$objReport.Valid = $true ;)
16:17:20: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Manifest                       89b22b44-5f32-4a70-ac3a-7e3c912f4bb7                                                         
Module                         89b22b44-5f32-4a70-ac3a-7e3c912f4bb7                                                         
Valid                          True
16:17:20: INFO:  #*======^ Test-ModuleTMPFiles: c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP ^======
16:17:20: INFO:  Processing error free: Overwriting temp .psm1 with temp copy
copy-item w
Name                           Value                                                                                        
----                           -----                                                                                        
Destination                    c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1                                                        
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP                                                    
whatif                         False                                                                                        
ErrorAction                    STOP
16:17:20: INFO:  Processing error free: Overwriting temp .psd1 with temp copy
copy-item w
Name                           Value                                                                                        
----                           -----                                                                                        
Destination                    c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1                                                        
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP                                                    
whatif                         False                                                                                        
ErrorAction                    STOP
16:17:20: INFO:  #*======^ ConvertTo-ModuleMergedTDO: ^======
VERBOSE: Loading module from path 'C:\sc\verb-Exo\verb-Exo\verb-EXO.psm1'.
16:17:20: VERBOSE:  ((no $ttmm_Err: test-ModuleManifest had no errors))
16:17:20: INFO:  (Test-ModuleManifest:PASSED)
16:17:20: INFO:  Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1
16:17:20: INFO:  confirm-ModuleBuildSync w
Name                           Value                                                                                        
----                           -----                                                                                        
ModPsdPath                     C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1                                                        
RequiredVersion                8.1.1                                                                                        
whatif                         False                                                                                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                  
---             -----                                  
ModPsdPath      {C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1}
RequiredVersion 8.1.1                                  
whatIf          False                                  
Verbose         True
16:17:20: INFO:  #*======v confirm-ModuleBuildSync:  v======
VERBOSE: (non-pipeline - param - input)
16:17:20: INFO:  (test-path confirms $ModPsm1 & $ModTestPs1)
16:17:20: INFO:  Import-PowerShellDataFile w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1                                                        
ErrorAction                    Stop                                                                                         
verbose                        True
16:17:20: INFO:  (resolved Module attributes:
$ModuleName:	verb-Exo
$ModRoot:	c:\sc\verb-Exo
$ModPsd1:	C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1
$ModPsm1:	C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1
$ModTestPs1:	c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1
$psd1Vers:	8.1.1
$psd1guid:	b9637e55-12be-4916-8000-a949f9426fa3)
16:17:20: INFO:  confirm-ModulePsd1Version w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1                                                        
RequiredVersion                8.1.1                                                                                        
whatif                         False                                                                                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                  
---             -----                                  
Path            {C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1}
RequiredVersion 8.1.1                                  
whatIf          False                                  
Verbose         True
16:17:20: INFO:  #*======v confirm-ModulePsd1Version: C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1 v======
VERBOSE: (non-pipeline - param - input)
16:17:20: INFO:  (Version already updated to match)
16:17:20: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        8.1.1                                                                                        
Valid                          False
16:17:20: INFO:  (SET:$objReport.Valid = $true ;)
16:17:20: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        8.1.1                                                                                        
Valid                          True
16:17:20: INFO:  #*======^ confirm-ModulePsd1Version: C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1 ^======
16:17:20: INFO:  (confirm-ModulePsd1Version:Success)
16:17:20: INFO:  confirm-ModulePsm1Version w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1                                                        
RequiredVersion                8.1.1                                                                                        
whatif                         False                                                                                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                  
---             -----                                  
Path            {C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1}
RequiredVersion 8.1.1                                  
whatIf          False                                  
Verbose         True
16:17:20: INFO:  #*======v confirm-ModulePsm1Version: C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1 v======
VERBOSE: (non-pipeline - param - input)
16:17:20: INFO:  (Version already updated to match)
16:17:20: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        8.1.1                                                                                        
Valid                          False
16:17:20: INFO:  (SET:$objReport.Valid = $true ;)
16:17:20: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        8.1.1                                                                                        
Valid                          True
16:17:20: INFO:  #*======^ confirm-ModulePsm1Version: C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1 ^======
16:17:20: INFO:  (confirm-ModulePsm1Version:Success)
16:17:20: INFO:  Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1
16:17:20: INFO:  confirm-ModuleTestPs1Guid w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1                                                      
RequiredGuid                   b9637e55-12be-4916-8000-a949f9426fa3                                                         
whatif                         False                                                                                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key          Value                                    
---          -----                                    
Path         {c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1}
RequiredGuid b9637e55-12be-4916-8000-a949f9426fa3     
whatIf       False                                    
Verbose      True
16:17:20: INFO:  #*======v confirm-ModuleTestPs1Guid: c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1 v======
VERBOSE: (non-pipeline - param - input)
16:17:20: INFO:  (Guid  already updated to match)
16:17:20: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Guid                           b9637e55-12be-4916-8000-a949f9426fa3                                                         
Valid                          False
16:17:20: INFO:  (SET:$objReport.Valid = $true ;)
16:17:20: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Guid                           b9637e55-12be-4916-8000-a949f9426fa3                                                         
Valid                          True
16:17:20: INFO:  #*======^ confirm-ModuleTestPs1Guid: c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1 ^======
16:17:20: INFO:  (confirm-ModuleTestPs1Guid:Success)
16:17:20: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Manifest                       C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1                                                        
Module                         C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1                                                        
Pester                         c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1                                                      
Guid                           b9637e55-12be-4916-8000-a949f9426fa3                                                         
Version                        8.1.1                                                                                        
Valid                          False
16:17:20: INFO:  (SET:$objReport.Valid = $true ;)
16:17:20: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Manifest                       C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1                                                        
Module                         C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1                                                        
Pester                         c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1                                                      
Guid                           b9637e55-12be-4916-8000-a949f9426fa3                                                         
Version                        8.1.1                                                                                        
Valid                          True
16:17:20: INFO:  #*======^ confirm-ModuleBuildSync:  ^======
16:17:20: INFO:  (confirm-ModuleBuildSync:Success)
16:17:21: VERBOSE:  ($Psd1filelist populated: export-cliXML:c:\sc\verb-Exo\Psd1filelist)
16:17:21: INFO:  Updating the Psd1 FileList to with populated $Psd1filelist...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1                                                                              
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    {#...
VERBOSE: 16:17:21:(Set-ContentFixEncoding:C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1)
VERBOSE: 16:17:21:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
PassThru                       True                                                                                         
Path                           C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1                                                        
whatif                         False                                                                                        
encoding                       UTF8                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#
# Module manifest for module 'verb-EXO'
VERBOSE: Get-ChildItem c:\sc\verb-Exo\* -recur | where-object {.name -match $rgxGuidModFiles}
16:17:21: INFO:  Signing appropriate files...
VERBOSE: (MONOLITH module:collecting non-include sign files)
16:17:21: INFO:  set-AuthenticodeSignatureTDO w
Name                           Value                                                                                        
----                           -----                                                                                        
file                           {C:\sc\verb-Exo\rebuild-module.ps1, C:\sc\verb-Exo\requirements.psd1, C:\sc\verb-Exo\Tests...
ErrorAction                    Stop                                                                                         
whatif                         False
Current certificate 5AC9D2B4552E48854D47CBA1352944E9 chain and revocation status is valid
(NOTE:-CRLMode:'NoCheck', no Certificate Revocation Check performed)
(C:\sc\verb-Exo\rebuild-module.ps1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-Exo\requirements.psd1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-Exo\Tests\PPoShScriptingStyle.psd1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-Exo\Tests\ToddomationScriptingStyle-medium.psd1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1 has a valid existing AuthenticodeSignature, skipping)

Directory: C:\sc\verb-Exo\verb-EXO


SignerCertificate                        Status Path         
-----------------                        ------ ----         
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5 Valid  verb-EXO.psd1

Directory: C:\sc\verb-Exo\verb-EXO


SignerCertificate                        Status Path         
-----------------                        ------ ----         
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5 Valid  verb-EXO.psm1
16:17:21: INFO:  Removing existing profile verb-Exo content...
16:17:21: INFO:  Uninstall-ModuleForce w
Name                           Value                                                                                        
----                           -----                                                                                        
ModuleName                     verb-Exo                                                                                     
Verbose                        True                                                                                         
whatif                         False
VERBOSE: $PSBoundParameters:
Key        Value     
---        -----     
ModuleName {verb-Exo}
Verbose    True      
whatIf     False
VERBOSE: (non-pipeline - param - input)
16:17:24: INFO:  
#*------v Uninstall PSGet Mod:verb-EXO:v8.1.0 v------
16:17:24: INFO:  Uninstall-Script w
Name                           Value                                                                                        
----                           -----                                                                                        
Force                          True                                                                                         
Whatif                         False                                                                                        
Verbose                        True
VERBOSE: Populating RepositorySourceLocation property for module verb-EXO.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-EXO\8.1.0\verb-EXO.psm1'.
VERBOSE: Performing the operation "Uninstall-Module" on target "Version '8.1.0' of module 'verb-EXO'".
VERBOSE: Successfully uninstalled the module 'verb-EXO' from module base 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-EXO\8.1.0'.
16:17:40: INFO:  
#*------^ Uninstall PSGet Mod:verb-EXO:v8.1.0 ^------
16:17:40: INFO:  (Processing $env:PSModulePath paths, for surviving locked copies of verb-Exo to *manually* purge...)
16:17:40: INFO:  Checking: verb-Exo below: C:\Users\kadritss\Documents\WindowsPowerShell\Modules...
16:17:40:-GracefulFail specified, using EA:'Continue'
16:17:40:No existing Match:test-path -path C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\*.*
16:17:40: INFO:  Checking: verb-Exo below: C:\ProgramData\Boxstarter...
16:17:40:-GracefulFail specified, using EA:'Continue'
16:17:40:No existing Match:test-path -path C:\ProgramData\Boxstarter\verb-Exo\*.*
16:17:40: INFO:  Checking: verb-Exo below: C:\Program Files\WindowsPowerShell\Modules...
16:17:40:-GracefulFail specified, using EA:'Continue'
16:17:40:No existing Match:test-path -path C:\Program Files\WindowsPowerShell\Modules\verb-Exo\*.*
16:17:40: INFO:  Checking: verb-Exo below: C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules...
16:17:40:-GracefulFail specified, using EA:'Continue'
16:17:40:No existing Match:test-path -path C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\verb-Exo\*.*
16:17:40: INFO:  Checking: verb-Exo below: C:\Program Files (x86)\AutoIt3\AutoItX...
16:17:40:-GracefulFail specified, using EA:'Continue'
16:17:40:No existing Match:test-path -path C:\Program Files (x86)\AutoIt3\AutoItX\verb-Exo\*.*
16:17:40: INFO:  (no $sRet returned on call)
16:17:40: INFO:  Copying module to profile (net of .git & .vscode dirs, and backed up content)...
16:17:40: INFO:  $srcFiles:post-filter out:
\\(Package|Tests|logs)\\|(\.ps[dm]1_(\d+-\d+[AP]M|TMP)|-LOG-BATCH-EXEC-\d+-\d+[AP]M-log\.txt|\\(fingerprint|Psd1filelist))$
16:17:40: INFO:  Discovered mod-copy files ($srcFiles.fullname):w
C:\sc\verb-Exo\verb-EXO\CHANGELOG.md
C:\sc\verb-Exo\verb-EXO\Quick-Start-Installation-and-Example.md
C:\sc\verb-Exo\verb-EXO\README.md
C:\sc\verb-Exo\verb-EXO\verb-EXO.psd1
C:\sc\verb-Exo\verb-EXO\verb-EXO.psm1
16:17:40: INFO:  Non-Pre-existing:$to:C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo
Pre-creating before copy...
VERBOSE: Performing the operation "Create Directory" on target "Destination: C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo".
16:17:40: INFO:  Mode   LastWriteTime        Length Name    
----   -------------        ------ ----    
d----- 9/23/2024 4:17:40 PM        verb-Exo
16:17:40: INFO:  -Merge:exclude $MergeBuildExcl \\(Public|Internal|External|Private)\\.*.ps1$ files from temp build copy
16:17:40: INFO:  Recursively remove empty subdirs below C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo...
.
16:17:40: INFO:  Move/Flatten Resource etc files into root of temp Build dir...
16:17:40: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo COPY of Quick-Start-Installation-and-Example.md
16:17:40: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo COPY of CHANGELOG.md
16:17:40: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo COPY of README.md
16:17:40: INFO:  copy/Flatten Resource etc files into source root c:\sc\verb-Exo\verb-Exo dir...
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-Exo\Docs\Quick-Start-Installation-and-Example.md Destination: C:\sc\verb-Exo\verb-Exo\Quick-Start-Installation-and-Example.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-Exo\CHANGELOG.md Destination: C:\sc\verb-Exo\verb-Exo\CHANGELOG.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-Exo\README.md Destination: C:\sc\verb-Exo\verb-Exo\README.md".
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo\verb-EXO.psm1'.
16:17:40: INFO:  Resolved $ModPsdPath:
C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1
16:17:40: VERBOSE:  (resolve-path the CUMods verb-Exo.psd1 location)
16:17:40: INFO:  
==Verifying CU:Mods\verb-Exo\verb-Exo\Quick-Start-Installation-and-Example.md:
validated Quick-Start-Installation-and-Example.md is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo\Quick-Start-Installation-and-Example.md
16:17:40: INFO:  
==Verifying CU:Mods\verb-Exo\verb-Exo\CHANGELOG.md:
validated CHANGELOG.md is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo\CHANGELOG.md
16:17:40: INFO:  
==Verifying CU:Mods\verb-Exo\verb-Exo\README.md:
validated README.md is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo\README.md
16:17:40: INFO:  Running pre-Publish-Module .psd1 test:
Test-ModuleManifest -path C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\verb-Exo\verb-EXO.psm1'.
16:17:40: VERBOSE:  ((no $ttmm_Err: test-ModuleManifest had no errors))
16:17:40: INFO:  (Test-ModuleManifest:PASSED)
16:17:40: INFO:  (Profiling Repo: get-PSRepository -name lyncRepo...)
16:17:41: VERBOSE:  ((confirmed:$tRepo.PublishLocation accessible))
16:17:41: INFO:  
Publish-Module w
Name                           Value                                                                                        
----                           -----                                                                                        
Name                           verb-Exo                                                                                     
Repository                     lyncRepo                                                                                     
RequiredVersion                8.1.1                                                                                        
Verbose                        True                                                                                         
ErrorAction                    Stop                                                                                         
errorVariable                  pbmo_Err                                                                                     
whatif                         False
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Publish Location:'\\lynmsv10\lync_fs\scripts\sc'.
VERBOSE: Module 'verb-Exo' was found in 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo'.
VERBOSE: Loading module from path 'C:\Users\kadritss\AppData\Local\Temp\1563160775\verb-Exo\verb-EXO.psm1'.
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'lyncRepo'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is '\\lynmsv10\lync_fs\scripts\sc' and PackageManagementProvider is 'NuGet'.
VERBOSE: Total package yield:'0' for the specified package 'verb-Exo'.
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'lyncRepo'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is '\\lynmsv10\lync_fs\scripts\sc' and PackageManagementProvider is 'NuGet'.
VERBOSE: Total package yield:'1' for the specified package 'verb-Exo'.
VERBOSE: Performing the operation "Publish-Module" on target "Version '8.1.1' of module 'verb-EXO'".
VERBOSE: Calling Publish-PSArtifactUtility
VERBOSE: Calling New-NuspecFile
VERBOSE: Calling New-NugetPackage
VERBOSE: Calling C:\chocolatey\bin\nuget.exe pack "C:\Users\kadritss\AppData\Local\Temp\1563160775\verb-Exo\verb-EXO.nuspec" -outputdirectory "C:\Users\kadritss\AppData\Local\Temp\1563160775\verb-Exo" -noninteractive
VERBOSE: C:\chocolatey\bin\nuget.exe output:
VERBOSE: 	Attempting to build package from 'verb-EXO.nuspec'.
VERBOSE: 	The package verb-EXO.8.1.1 is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn why package readmes are important.
VERBOSE: 	Successfully created package 'C:\Users\kadritss\AppData\Local\Temp\1563160775\verb-Exo\verb-EXO.8.1.1.nupkg'.
VERBOSE:
VERBOSE: finished running C:\chocolatey\bin\nuget.exe with exit code 0
VERBOSE: Created Nuget Package C:\Users\kadritss\AppData\Local\Temp\1563160775\verb-Exo\verb-EXO.8.1.1.nupkg
VERBOSE: Successfully created nuget package at C:\Users\kadritss\AppData\Local\Temp\1563160775\verb-Exo\verb-EXO.8.1.1.nupkg
VERBOSE: Calling Publish-NugetPackage -NupkgPath C:\Users\kadritss\AppData\Local\Temp\1563160775\verb-Exo\verb-EXO.8.1.1.nupkg -Destination \\lynmsv10\lync_fs\scripts\sc -NugetExePath C:\chocolatey\bin\nuget.exe -UseDotnetCli:False
VERBOSE: Pushing verb-EXO.8.1.1.nupkg to '\\lynmsv10\lync_fs\scripts\sc'...
Your package was pushed.
VERBOSE: Successfully published module 'verb-EXO' to the module publish location '\\lynmsv10\lync_fs\scripts\sc'. Please allow few minutes for 'verb-EXO' to show up in the search results.

16:17:47: WARNING:

16:17:47: WARNING:  FOUND $pbmo_Err: import-module HAD ERRORS! (no action, could be non-impacting)
WARNING: ===:System.Management.Automation.StopUpstreamCommandsException: System error.
   at Microsoft.PowerShell.Commands.SelectObjectCommand.ProcessRecord()
   at System.Management.Automation.CommandProcessor.ProcessRecord()

16:17:47: WARNING:

16:17:47: WARNING:  Publish-Module PBMO UNDEFINED ERROR!

16:17:47: WARNING:  System.Management.Automation.StopUpstreamCommandsException: System error.

16:17:47: WARNING:

16:17:47: WARNING:     at Microsoft.PowerShell.Commands.SelectObjectCommand.ProcessRecord()

16:17:47: WARNING:

16:17:47: WARNING:     at System.Management.Automation.CommandProcessor.ProcessRecord()

16:17:47: WARNING:  (But PublishModule doesn't bother to return a functional Error object with an Exception, so we can't trust/parse or act on it. Just echo)
16:17:47: INFO:  Waiting for:find-module -name verb-Exo -Repository lyncRepo ...
.
16:17:48:-GracefulFail specified, using EA:'Continue'
16:17:48:remove-item w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           {C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo\CHANGELOG.md, C:\...
Recurse                        True                                                                                         
ErrorAction                    Continue                                                                                     
whatif                         False
16:17:48: INFO:  Install-Module w
Name                           Value                                                                                        
----                           -----                                                                                        
Name                           verb-Exo                                                                                     
Repository                     lyncRepo                                                                                     
RequiredVersion                8.1.1                                                                                        
scope                          CurrentUser                                                                                  
force                          True                                                                                         
AllowClobber                   True                                                                                         
errorVariable                  ismo_Err                                                                                     
ErrorAction                    Stop                                                                                         
whatif                         False
16:17:53: VERBOSE:  ((no $ismo_Err: Install-Module had no errors))
16:17:53: INFO:  Testing Module:Import-Module w
Name                           Value                                                                                        
----                           -----                                                                                        
Name                           verb-Exo                                                                                     
ErrorAction                    Stop                                                                                         
errorVariable                  ipmo_Err                                                                                     
force                          True                                                                                         
verbose                        True
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\8.1.1\verb-Exo.psd1'.
VERBOSE: Populating RepositorySourceLocation property for module verb-Exo.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\8.1.1\verb-EXO.psm1'.
VERBOSE: Importing function 'add-EXOLicense'.
WARNING: The names of some imported commands from the module 'verb-Exo' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'check-EXOLegalHold' command in the verb-Exo' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'check-EXOLegalHold'.
VERBOSE: Importing function 'Connect-EXO'.
VERBOSE: Importing function 'convert-ADUserRecipientTypeRemoteSharedMailbox'.
VERBOSE: Importing function 'convert-ADUserRecipientTypeRemoteUserMailbox'.
VERBOSE: Importing function 'convert-exoMailboxTypeSharedMailbox'.
VERBOSE: Importing function 'convert-exoMailboxTypeUserMailbox'.
VERBOSE: Importing function 'convert-HistoricalSearchCSV'.
VERBOSE: Importing function 'copy-XPermissionGroupToCloudOnly'.
VERBOSE: Importing function 'cxoTOL'.
VERBOSE: Importing function 'cxoTOR'.
VERBOSE: Importing function 'Disconnect-EXO'.
VERBOSE: Importing function 'get-AADlicensePlanList'.
VERBOSE: Importing function 'get-ADUsersWithSoftDeletedxoMailboxes'.
VERBOSE: Importing function 'get-ExoGxMTEventType'.
VERBOSE: Importing function 'get-ExoMailboxLicenses'.
VERBOSE: Importing function 'get-ExoMessageTraceEventType'.
VERBOSE: Importing function 'get-ExoMessageTraceSourceType'.
VERBOSE: Importing function 'get-EXOMsgTraceDetailed'.
VERBOSE: Importing function 'get-MailboxFolderStats'.
VERBOSE: Importing function 'get-MsgTrace'.
VERBOSE: Importing function 'Get-OrgNameFromUPN'.
VERBOSE: Importing function 'get-xoHistSearch'.
VERBOSE: Importing function 'get-XOMailboxFolderList'.
VERBOSE: Importing function 'Get-xoMailboxFolderPermissionsRecursive'.
VERBOSE: Importing function 'get-XOMailboxFolderPermissionsSummary'.
VERBOSE: Importing function 'move-MailboxToXo'.
VERBOSE: Importing function 'new-DgTor'.
VERBOSE: Importing function 'new-xoDGFromProperty'.
VERBOSE: The 'Reconnect-EXO' command in the verb-Exo' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Reconnect-EXO'.
VERBOSE: Importing function 'remove-EXOLicense'.
VERBOSE: Importing function 'Reset-xoMailboxFolderPermissionsRecursive'.
VERBOSE: Importing function 'resolve-AppIDToCBAFriendlyName'.
VERBOSE: Importing function 'resolve-Name'.
VERBOSE: Importing function 'resolve-user'.
VERBOSE: Importing function 'Resolve-xoRcps'.
VERBOSE: Importing function 'rxoTOL'.
VERBOSE: Importing function 'rxoTOR'.
VERBOSE: Importing function 'test-EXOConnectionTDO'.
VERBOSE: Importing function 'test-EXOIsLicensed'.
VERBOSE: Importing function 'test-EXOv2Connection'.
VERBOSE: Importing function 'test-xoMailbox'.
VERBOSE: Importing alias 'Connect-EXO2'.
VERBOSE: Importing alias 'convert-ADUserRecipientType'.
VERBOSE: Importing alias 'convert-xoShared'.
VERBOSE: Importing alias 'convertfrom-HistoricalSearch'.
VERBOSE: Importing alias 'cxo'.
VERBOSE: Importing alias 'cxo2'.
VERBOSE: Importing alias 'cxo2cmw'.
VERBOSE: Importing alias 'cxo2TOL'.
VERBOSE: Importing alias 'cxo2TOR'.
VERBOSE: Importing alias 'Disconnect-EXO2'.
VERBOSE: Importing alias 'dxo'.
VERBOSE: Importing alias 'dxo2'.
VERBOSE: Importing alias 'Get-MailboxFolderPermissionsRecursive'.
VERBOSE: Importing alias 'GetFolderPermissions'.
VERBOSE: Importing alias 'nlu'.
VERBOSE: Importing alias 'reconnect-exo2'.
VERBOSE: Importing alias 'ReturnFolderList'.
VERBOSE: Importing alias 'revert-ADuserRecipientType'.
VERBOSE: Importing alias 'revert-xoUserMbx'.
VERBOSE: Importing alias 'rxo'.
VERBOSE: Importing alias 'rxo2'.
VERBOSE: Importing alias 'txo'.
VERBOSE: Importing alias 'ulu'.
16:17:54: VERBOSE:  ((no $ipmo_Err: test-ModuleManifest had no errors))
16:17:54: INFO:  Retrieving matching Repo .nupkg file:
gci \\lynmsv10\lync_fs\scripts\sc\verb-Exo.8.1.1.nupkgl..
16:17:54: INFO:  Proper updated .nupkg file found:verb-Exo.8.1.1.nupkg, copying to local Pkg directory.
16:17:54:Copy-Item w
Name                           Value                                                                                        
----                           -----                                                                                        
path                           \\lynmsv10\lync_fs\scripts\sc\verb-Exo.8.1.1.nupkg                                           
destination                    c:\sc\verb-Exo\Package                                                                       
whatif                         False
16:17:54: INFO:  remove-UnneededFileVariants w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-Exo\Package                                                                       
Include                        verb-Exo*.nupkg                                                                              
Pattern                                                                                                                     
FilterOn                       CreationTime                                                                                 
Keep                           2                                                                                            
KeepToday                      True                                                                                         
verbose                        True                                                                                         
whatif                         False
16:17:54:gci w
Name                           Value                                                                                        
----                           -----                                                                                        
path                           c:\sc\verb-Exo\Package\*                                                                     
include                        verb-Exo*.nupkg                                                                              
ErrorAction                    Stop
VERBOSE: $cuttime:09/23/2024 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/23/2024 00:00:00 AM, on CreationTime property
(4 in set *before* filtering)
(3 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(3 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
16:17:54:Reducing matched population from 4 to 1 files via:
filtered files on CreationTime prior to 09/23/2024 00:00:00 AM
16:17:54:Remove-Item w 
Name                           Value                                                                                        
----                           -----                                                                                        
path                           C:\sc\verb-Exo\Package\verb-EXO.7.0.1.nupkg                                                  
ErrorAction                    STOP                                                                                         
whatif                         False
True
16:17:54: INFO:  remove-UnneededFileVariants w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-Exo\Tests                                                                         
Include                        ScriptAnalyzer-Results-*.xml                                                                 
Pattern                                                                                                                     
FilterOn                       CreationTime                                                                                 
Keep                           4                                                                                            
KeepToday                      True                                                                                         
verbose                        True                                                                                         
whatif                         False
16:17:54:gci w
Name                           Value                                                                                        
----                           -----                                                                                        
path                           c:\sc\verb-Exo\Tests\*                                                                       
include                        ScriptAnalyzer-Results-*.xml                                                                 
ErrorAction                    Stop
VERBOSE: $cuttime:09/23/2024 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/23/2024 00:00:00 AM, on CreationTime property
(5 in set *before* filtering)
(5 in set *after* filtering)
VERBOSE: attempting to retain remaining 4 generations net of prior filtering
(5 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:4 spec - insufficient older files available)
16:17:54:Reducing matched population from 5 to 1 files via:
filtered files on CreationTime prior to 09/23/2024 00:00:00 AM
16:17:54:Remove-Item w 
Name                           Value                                                                                        
----                           -----                                                                                        
path                           C:\sc\verb-Exo\Tests\ScriptAnalyzer-Results-20240301-1530PM.xml                              
ErrorAction                    STOP                                                                                         
whatif                         False
True
16:17:54: INFO:  -RunTest specified: Running Pester Test script:
c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1
16:17:54:
#*------v RUNNING c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1: v------
WARNING: The names of some imported commands from the module 'verb-Exo' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
Describing Module Information
   Context Manifest Testing
    [+] Valid Module Manifest 58ms
PS>TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
    [-] Valid Manifest Name 121ms
      RuntimeException: '-Be' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 138
PS>TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
    [-] Generic Version Check 129ms
      RuntimeException: '-Not' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 141
    [+] Valid Author 34ms
    [+] Valid Company Name 16ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Valid License 25ms
      Expected: value to not be empty
      155:             $ModuleInformation.LicenseURI | Should not BeNullOrEmpty
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 155
PS>TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
    [-] Valid Manifest Description 134ms
      RuntimeException: '-Not' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 163
PS>TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
    [-] Valid Manifest Root Module 134ms
      RuntimeException: '-Be' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 171
PS>TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
    [-] Valid Manifest GUID 101ms
      RuntimeException: '-Be' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 174
    [+] Required Modules 29ms
   Context Exported Functions
PS>TerminatingError(): "Expected: {43}
But was:  {115}"
>> TerminatingError(): "Expected: {43}
But was:  {115}"
    [-] Proper Number of Functions Exported 115ms
      Expected: {43}
      But was:  {115}
      215:             $ExportedCount | Should be $FileCount
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 215
    [+] Exports All Public Functions 97ms
    [+] Compare Missing Functions 19ms
Describing Help
   Context Function - add-PSTitle
    [+] Synopsis 266ms
    [+] Description 184ms
    [+] Examples 233ms
Describing Help
   Context Function - backup-File
    [+] Synopsis 165ms
    [+] Description 210ms
    [+] Examples 321ms
Describing Help
   Context Function - check-FileLock
    [+] Synopsis 192ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1:252 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1:252 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentExce
   ption
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 353ms
      Expected: value to not be empty
      252:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 252
    [+] Examples 262ms
Describing Help
   Context Function - c-hi
    [+] Synopsis 154ms
    [+] Description 348ms
    [+] Examples 186ms
Describing Help
   Context Function - Compress-ZipFile
    [+] Synopsis 191ms
    [+] Description 257ms
    [+] Examples 169ms
Describing Help
   Context Function - Connect-EXO2
    [+] Synopsis 585ms
    [+] Description 395ms
    [+] Examples 470ms
Describing Help
   Context Function - convert-ADUserRecipientType
    [+] Synopsis 528ms
    [+] Description 388ms
    [+] Examples 418ms
Describing Help
   Context Function - convertfrom-HistoricalSearch
    [+] Synopsis 395ms
    [+] Description 584ms
    [+] Examples 390ms
Describing Help
   Context Function - convertFrom-HtmlTDO
    [+] Synopsis 55ms
    [+] Description 44ms
    [+] Examples 57ms
Describing Help
   Context Function - convertfrom-mdt
    [+] Synopsis 203ms
    [+] Description 298ms
    [+] Examples 159ms
Describing Help
   Context Function - ConvertTo-CanonicalName
    [+] Synopsis 216ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1:252 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1:252 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...leName=verb-IO}:PSObject) [Select-Object], PSArgumentExce
   ption
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 329ms
      Expected: value to not be empty
      252:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 252
    [+] Examples 259ms
Describing Help
   Context Function - convertTo-CrAzYCaPS
    [+] Synopsis 60ms
    [+] Description 51ms
    [+] Examples 43ms
Describing Help
   Context Function - ConvertTo-DNOU
    [+] Synopsis 225ms
    [+] Description 261ms
    [+] Examples 169ms
Describing Help
   Context Function - ConvertTo-DNUser
    [+] Synopsis 157ms
    [+] Description 232ms
    [+] Examples 165ms
Describing Help
   Context Function - convertTo-Mp3
    [+] Synopsis 150ms
    [+] Description 293ms
    [+] Examples 147ms
Describing Help
   Context Function - convert-ToMp3
    [+] Synopsis 212ms
    [+] Description 228ms
    [+] Examples 161ms
Describing Help
   Context Function - convertTo-PascalCase
    [+] Synopsis 112ms
    [+] Description 60ms
    [+] Examples 56ms
Describing Help
   Context Function - convertTo-ProperCase
    [+] Synopsis 63ms
    [+] Description 59ms
    [+] Examples 51ms
Describing Help
   Context Function - convertTo-SentanceCase
    [+] Synopsis 60ms
    [+] Description 52ms
    [+] Examples 41ms
Describing Help
   Context Function - convertto-StringHash
    [+] Synopsis 83ms
    [+] Description 115ms
    [+] Examples 65ms
Describing Help
   Context Function - convertTo-StUdlycaSe
    [+] Synopsis 57ms
    [+] Description 59ms
    [+] Examples 60ms
Describing Help
   Context Function - convertTo-UpperCamelCase
    [+] Synopsis 66ms
    [+] Description 785ms
    [+] Examples 53ms
Describing Help
   Context Function - convert-xoShared
    [+] Synopsis 426ms
    [+] Description 433ms
    [+] Examples 537ms
Describing Help
   Context Function - copy-Profile
    [+] Synopsis 156ms
    [+] Description 263ms
    [+] Examples 215ms
Describing Help
   Context Function - create-AcronymFromCaps
    [+] Synopsis 67ms
    [+] Description 49ms
    [+] Examples 55ms
Describing Help
   Context Function - Disconnect-EXO2
    [+] Synopsis 468ms
    [+] Description 765ms
    [+] Examples 580ms
Describing Help
   Context Function - expand-ISOFile
PS>TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
>> TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
    [-] Synopsis 247ms
      MetadataException: The alias "PsPath" is declared multiple times.
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 249
PS>TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
>> TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
    [-] Description 151ms
      MetadataException: The alias "PsPath" is declared multiple times.
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 252
PS>TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
>> TerminatingError(Get-Help): "The alias "PsPath" is declared multiple times."
    [-] Examples 251ms
      MetadataException: The alias "PsPath" is declared multiple times.
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 255
Describing Help
   Context Function - Expand-ZipFile
    [+] Synopsis 149ms
    [+] Description 278ms
    [+] Examples 196ms
Describing Help
   Context Function - fix-encoding
    [+] Synopsis 370ms
    [+] Description 265ms
    [+] Examples 139ms
Describing Help
   Context Function - Get-MailboxFolderPermissionsRecursive
    [+] Synopsis 491ms
    [+] Description 569ms
    [+] Examples 393ms
Describing Help
   Context Function - Get-ProfileFiles
    [+] Synopsis 233ms
    [+] Description 329ms
    [+] Examples 173ms
Describing Help
   Context Function - get-RegistryProperty
    [+] Synopsis 332ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 266ms
      Expected: value to not be empty
      252:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 252
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 321ms
      Expected: {True}
      But was:  {False}
      256:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 256
Describing Help
   Context Function - get-ScheduledTaskReport
    [+] Synopsis 446ms
    [+] Description 209ms
    [+] Examples 283ms
Describing Help
   Context Function - in-markdowntable
    [+] Synopsis 321ms
    [+] Description 200ms
    [+] Examples 438ms
Describing Help
   Context Function - in-mdt
    [+] Synopsis 173ms
    [+] Description 225ms
    [+] Examples 204ms
Describing Help
   Context Function - invoke-audio
    [+] Synopsis 176ms
    [+] Description 358ms
    [+] Examples 164ms
Describing Help
   Context Function - invoke-sound
    [+] Synopsis 271ms
    [+] Description 255ms
    [+] Examples 153ms
Describing Help
   Context Function - out-markdowntable
    [+] Synopsis 221ms
    [+] Description 246ms
    [+] Examples 248ms
Describing Help
   Context Function - out-mdt
    [+] Synopsis 213ms
    [+] Description 246ms
    [+] Examples 199ms
Describing Help
   Context Function - pop-hi
    [+] Synopsis 152ms
    [+] Description 308ms
    [+] Examples 163ms
Describing Help
   Context Function - push-hi
    [+] Synopsis 210ms
    [+] Description 264ms
    [+] Examples 170ms
Describing Help
   Context Function - quote-list
    [+] Synopsis 70ms
    [+] Description 638ms
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1:255 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{alertSet=@{al...Name=verb-Text}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Examples" cannot be found.
At C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1:255 char:43
+ ... amples = Get-Help $_ | Select-Object -ExpandProperty Examples | Measu ...
+                            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{alertSet=@{al...Name=verb-Text}:PSObject) [Select-Object], PSArgumentExce
   ption
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 178ms
      Expected: {True}
      But was:  {False}
      256:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 256
Describing Help
   Context Function - quote-string
    [+] Synopsis 59ms
    [+] Description 115ms
    [+] Examples 53ms
Describing Help
   Context Function - reconnect-exo2
    [+] Synopsis 473ms
    [+] Description 476ms
    [+] Examples 513ms
Describing Help
   Context Function - Remove-IllegalFileNameChars
    [+] Synopsis 172ms
    [+] Description 225ms
    [+] Examples 218ms
Describing Help
   Context Function - restore-file
    [+] Synopsis 192ms
    [+] Description 443ms
    [+] Examples 174ms
Describing Help
   Context Function - revert-ADuserRecipientType
    [+] Synopsis 636ms
    [+] Description 422ms
    [+] Examples 355ms
Describing Help
   Context Function - revert-File
    [+] Synopsis 339ms
    [+] Description 193ms
    [+] Examples 242ms
Describing Help
   Context Function - revert-xoUserMbx
    [+] Synopsis 365ms
    [+] Description 453ms
    [+] Examples 555ms
Describing Help
   Context Function - r-hi
    [+] Synopsis 146ms
    [+] Description 256ms
    [+] Examples 264ms
Describing Help
   Context Function - set-ConsColor
    [+] Synopsis 157ms
    [+] Description 265ms
    [+] Examples 145ms
Describing Help
   Context Function - Set-FileContent
    [+] Synopsis 246ms
    [+] Description 352ms
    [+] Examples 152ms
Describing Help
   Context Function - set-PSTitle
    [+] Synopsis 213ms
    [+] Description 140ms
    [+] Examples 178ms
Describing Help
   Context Function - set-RegistryProperty
    [+] Synopsis 329ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 184ms
      Expected: value to not be empty
      252:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 252
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 288ms
      Expected: {True}
      But was:  {False}
      256:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 256
Describing Help
   Context Function - s-hi
    [+] Synopsis 458ms
    [+] Description 205ms
    [+] Examples 239ms
Describing Help
   Context Function - sign-file
    [+] Synopsis 237ms
    [+] Description 230ms
    [+] Examples 254ms
Describing Help
   Context Function - test-IsHardLink
    [+] Synopsis 251ms
    [+] Description 143ms
    [+] Examples 255ms
Describing Help
   Context Function - test-IsJunction
    [+] Synopsis 263ms
    [+] Description 246ms
    [+] Examples 154ms
Describing Help
   Context Function - test-IsSymlink
    [+] Synopsis 245ms
    [+] Description 140ms
    [+] Examples 214ms
Describing Help
   Context Function - test-ModuleBuild
    [+] Synopsis 75ms
    [+] Description 195ms
    [+] Examples 62ms
Describing Help
   Context Function - test-UnReleasedModuleContent
    [+] Synopsis 94ms
    [+] Description 74ms
    [+] Examples 85ms
Describing Help
   Context Function - test-URI
    [+] Synopsis 54ms
    [+] Description 54ms
    [+] Examples 50ms
Describing Help
   Context Function - Unwatch-Directory
    [+] Synopsis 206ms
    [+] Description 168ms
    [+] Examples 218ms
Describing Help
   Context Function - unwrap-text
    [+] Synopsis 64ms
    [+] Description 55ms
    [+] Examples 120ms
Describing Help
   Context Function - Unwrap-TextN
    [+] Synopsis 52ms
    [+] Description 45ms
    [+] Examples 44ms
Describing Help
   Context Function - update-RegistryProperty
    [+] Synopsis 907ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 147ms
      Expected: value to not be empty
      252:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 252
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 314ms
      Expected: {True}
      But was:  {False}
      256:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 256
Describing Help
   Context Function - Watch-Directory
    [+] Synopsis 233ms
    [+] Description 179ms
    [+] Examples 371ms
Describing Help
   Context Function - w-hCO
    [+] Synopsis 181ms
    [+] Description 245ms
    [+] Examples 257ms
Describing Help
   Context Function - w-hi
    [+] Synopsis 184ms
    [+] Description 372ms
    [+] Examples 173ms
Describing Help
   Context Function - wrap-text
    [+] Synopsis 144ms
    [+] Description 44ms
    [+] Examples 43ms
Describing Help
   Context Function - write-hostAlert
    [+] Synopsis 248ms
    [+] Description 207ms
    [+] Examples 336ms
Describing Help
   Context Function - add-EXOLicense
    [+] Synopsis 405ms
    [+] Description 654ms
    [+] Examples 526ms
Describing Help
   Context Function - check-EXOLegalHold
    [+] Synopsis 541ms
    [+] Description 629ms
    [+] Examples 458ms
Describing Help
   Context Function - check-ReqMods
    [+] Synopsis 104ms
    [+] Description 104ms
    [+] Examples 90ms
Describing Help
   Context Function - Connect-EXO
    [+] Synopsis 503ms
    [+] Description 448ms
    [+] Examples 376ms
Describing Help
   Context Function - convert-ADUserRecipientTypeRemoteSharedMailbox
    [+] Synopsis 601ms
    [+] Description 375ms
    [+] Examples 463ms
Describing Help
   Context Function - convert-ADUserRecipientTypeRemoteUserMailbox
    [+] Synopsis 549ms
    [+] Description 512ms
    [+] Examples 382ms
Describing Help
   Context Function - convert-exoMailboxTypeSharedMailbox
    [+] Synopsis 565ms
    [+] Description 493ms
    [+] Examples 429ms
Describing Help
   Context Function - convert-exoMailboxTypeUserMailbox
    [+] Synopsis 378ms
    [+] Description 587ms
    [+] Examples 434ms
Describing Help
   Context Function - convert-HistoricalSearchCSV
    [+] Synopsis 1.19s
    [+] Description 474ms
    [+] Examples 437ms
Describing Help
   Context Function - copy-XPermissionGroupToCloudOnly
    [+] Synopsis 518ms
    [+] Description 354ms
    [+] Examples 485ms
Describing Help
   Context Function - cxoTOL
    [+] Synopsis 420ms
    [+] Description 394ms
    [+] Examples 418ms
Describing Help
   Context Function - cxoTOR
    [+] Synopsis 641ms
    [+] Description 396ms
    [+] Examples 415ms
Describing Help
   Context Function - Disconnect-EXO
    [+] Synopsis 582ms
    [+] Description 441ms
    [+] Examples 597ms
Describing Help
   Context Function - get-AADlicensePlanList
    [+] Synopsis 412ms
    [+] Description 406ms
    [+] Examples 352ms
Describing Help
   Context Function - get-ADUsersWithSoftDeletedxoMailboxes
    [+] Synopsis 593ms
    [+] Description 411ms
    [+] Examples 415ms
Describing Help
   Context Function - get-ExoGxMTEventType
    [+] Synopsis 531ms
    [+] Description 421ms
    [+] Examples 484ms
Describing Help
   Context Function - get-ExoMailboxLicenses
    [+] Synopsis 535ms
    [+] Description 493ms
    [+] Examples 425ms
Describing Help
   Context Function - get-ExoMessageTraceEventType
    [+] Synopsis 367ms
    [+] Description 433ms
    [+] Examples 626ms
Describing Help
   Context Function - get-ExoMessageTraceSourceType
    [+] Synopsis 410ms
    [+] Description 422ms
    [+] Examples 1.12s
Describing Help
   Context Function - get-EXOMsgTraceDetailed
    [+] Synopsis 541ms
    [+] Description 553ms
    [+] Examples 560ms
Describing Help
   Context Function - get-MailboxFolderStats
    [+] Synopsis 408ms
    [+] Description 418ms
    [+] Examples 467ms
Describing Help
   Context Function - get-MsgTrace
    [+] Synopsis 423ms
    [+] Description 518ms
    [+] Examples 412ms
Describing Help
   Context Function - Get-OrgNameFromUPN
    [+] Synopsis 569ms
    [+] Description 389ms
    [+] Examples 454ms
Describing Help
   Context Function - get-xoHistSearch
    [+] Synopsis 563ms
    [+] Description 408ms
    [+] Examples 430ms
Describing Help
   Context Function - get-XOMailboxFolderList
    [+] Synopsis 694ms
    [+] Description 451ms
    [+] Examples 365ms
Describing Help
   Context Function - Get-xoMailboxFolderPermissionsRecursive
    [+] Synopsis 476ms
    [+] Description 535ms
    [+] Examples 417ms
Describing Help
   Context Function - get-XOMailboxFolderPermissionsSummary
    [+] Synopsis 483ms
    [+] Description 463ms
    [+] Examples 383ms
Describing Help
   Context Function - move-MailboxToXo
    [+] Synopsis 428ms
    [+] Description 616ms
    [+] Examples 431ms
Describing Help
   Context Function - new-DgTor
    [+] Synopsis 436ms
    [+] Description 985ms
    [+] Examples 555ms
Describing Help
   Context Function - new-xoDGFromProperty
    [+] Synopsis 484ms
    [+] Description 626ms
    [+] Examples 409ms
Describing Help
   Context Function - Reconnect-EXO
    [+] Synopsis 523ms
    [+] Description 468ms
    [+] Examples 670ms
Describing Help
   Context Function - remove-EXOLicense
    [+] Synopsis 440ms
    [+] Description 356ms
    [+] Examples 353ms
Describing Help
   Context Function - Reset-xoMailboxFolderPermissionsRecursive
    [+] Synopsis 574ms
    [+] Description 414ms
    [+] Examples 394ms
Describing Help
   Context Function - resolve-AppIDToCBAFriendlyName
    [+] Synopsis 533ms
    [+] Description 519ms
    [+] Examples 411ms
Describing Help
   Context Function - resolve-Name
    [+] Synopsis 460ms
    [+] Description 512ms
    [+] Examples 370ms
Describing Help
   Context Function - resolve-user
    [+] Synopsis 554ms
    [+] Description 561ms
    [+] Examples 528ms
Describing Help
   Context Function - Resolve-xoRcps
    [+] Synopsis 518ms
    [+] Description 388ms
    [+] Examples 383ms
Describing Help
   Context Function - rxoTOL
    [+] Synopsis 473ms
    [+] Description 415ms
    [+] Examples 1.08s
Describing Help
   Context Function - rxoTOR
    [+] Synopsis 515ms
    [+] Description 415ms
    [+] Examples 569ms
Describing Help
   Context Function - test-EXOConnectionTDO
    [+] Synopsis 438ms
    [+] Description 444ms
    [+] Examples 538ms
Describing Help
   Context Function - test-ExoDnsRecordTDO
    [+] Synopsis 372ms
    [+] Description 359ms
    [+] Examples 522ms
Describing Help
   Context Function - test-EXOIsLicensed
    [+] Synopsis 411ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 389ms
      Expected: value to not be empty
      252:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 252
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 535ms
      Expected: {True}
      But was:  {False}
      256:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 256
Describing Help
   Context Function - test-EXOv2Connection
    [+] Synopsis 487ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 561ms
      Expected: value to not be empty
      252:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 252
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 400ms
      Expected: {True}
      But was:  {False}
      256:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 256
Describing Help
   Context Function - test-xoMailbox
    [+] Synopsis 390ms
    [+] Description 567ms
    [+] Examples 389ms
Describing General - Testing all scripts and modules against the Script Analyzer Rules
   Context Checking files to test exist and Invoke-ScriptAnalyzer cmdLet is available
    [+] Checking files exist to test. 38ms
    [+] Checking Invoke-ScriptAnalyzer exists. 23ms
Describing Testing against PSScriptAnalyzer rules
   Context PSSA Standard Rules
    [+] Should pass PSAlignAssignmentStatement 14.86s
    [!] Should pass PSAvoidUsingCmdletAliases 12ms
    [+] Should pass PSAvoidAssignmentToAutomaticVariable 26ms
PS>TerminatingError(): "Expected: {0}
But was:  {30}"
>> TerminatingError(): "Expected: {0}
But was:  {30}"
    [-] Should pass PSAvoidDefaultValueSwitchParameter 27ms
      Expected: {0}
      But was:  {30}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 319
    [+] Should pass PSAvoidDefaultValueForMandatoryParameter 35ms
PS>TerminatingError(): "Expected: {0}
But was:  {24}"
>> TerminatingError(): "Expected: {0}
But was:  {24}"
    [-] Should pass PSAvoidUsingEmptyCatchBlock 23ms
      Expected: {0}
      But was:  {24}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 319
    [+] Should pass PSAvoidExclaimOperator 47ms
    [+] Should pass PSAvoidGlobalAliases 26ms
    [+] Should pass PSAvoidGlobalFunctions 24ms
    [!] Should pass PSAvoidGlobalVars 9ms
    [+] Should pass PSAvoidInvokingEmptyMembers 17ms
    [+] Should pass PSAvoidLongLines 24ms
    [+] Should pass PSAvoidMultipleTypeAttributes 33ms
    [+] Should pass PSAvoidNullOrEmptyHelpMessageAttribute 44ms
    [+] Should pass PSAvoidOverwritingBuiltInCmdlets 107ms
    [+] Should pass PSAvoidUsingPositionalParameters 47ms
    [+] Should pass PSReservedCmdletChar 59ms
    [+] Should pass PSReservedParams 48ms
    [+] Should pass PSAvoidSemicolonsAsLineTerminators 42ms
    [+] Should pass PSAvoidShouldContinueWithoutForce 34ms
    [+] Should pass PSAvoidTrailingWhitespace 51ms
    [+] Should pass PSAvoidUsingUsernameAndPasswordParams 56ms
    [+] Should pass PSAvoidUsingAllowUnencryptedAuthentication 39ms
    [+] Should pass PSAvoidUsingBrokenHashAlgorithms 35ms
    [+] Should pass PSAvoidUsingComputerNameHardcoded 42ms
    [+] Should pass PSAvoidUsingConvertToSecureStringWithPlainText 30ms
    [+] Should pass PSAvoidUsingDeprecatedManifestFields 35ms
    [+] Should pass PSAvoidUsingDoubleQuotesForConstantString 33ms
PS>TerminatingError(): "Expected: {0}
But was:  {17}"
>> TerminatingError(): "Expected: {0}
But was:  {17}"
    [-] Should pass PSAvoidUsingInvokeExpression 38ms
      Expected: {0}
      But was:  {17}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 319
    [+] Should pass PSAvoidUsingPlainTextForPassword 107ms
    [+] Should pass PSAvoidUsingWMICmdlet 46ms
    [!] Should pass PSAvoidUsingWriteHost 13ms
    [+] Should pass PSUseCompatibleCommands 27ms
    [+] Should pass PSUseCompatibleSyntax 36ms
    [+] Should pass PSUseCompatibleTypes 35ms
    [+] Should pass PSMisleadingBacktick 34ms
    [+] Should pass PSMissingModuleManifestField 24ms
PS>TerminatingError(): "Expected: {0}
But was:  {630}"
>> TerminatingError(): "Expected: {0}
But was:  {630}"
    [-] Should pass PSPlaceCloseBrace 31ms
      Expected: {0}
      But was:  {630}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 319
PS>TerminatingError(): "Expected: {0}
But was:  {1}"
>> TerminatingError(): "Expected: {0}
But was:  {1}"
    [-] Should pass PSPlaceOpenBrace 37ms
      Expected: {0}
      But was:  {1}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 319
PS>TerminatingError(): "Expected: {0}
But was:  {29}"
>> TerminatingError(): "Expected: {0}
But was:  {29}"
    [-] Should pass PSPossibleIncorrectComparisonWithNull 30ms
      Expected: {0}
      But was:  {29}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 319
    [+] Should pass PSPossibleIncorrectUsageOfAssignmentOperator 36ms
    [+] Should pass PSPossibleIncorrectUsageOfRedirectionOperator 34ms
    [!] Should pass PSProvideCommentHelp 6ms
    [+] Should pass PSReviewUnusedParameter 21ms
    [!] Should pass PSUseApprovedVerbs 6ms
    [+] Should pass PSUseBOMForUnicodeEncodedFile 17ms
    [!] Should pass PSUseCmdletCorrectly 7ms
    [+] Should pass PSUseCompatibleCmdlets 20ms
    [+] Should pass PSUseConsistentIndentation 30ms
    [!] Should pass PSUseConsistentWhitespace 6ms
    [+] Should pass PSUseCorrectCasing 23ms
    [!] Should pass PSUseDeclaredVarsMoreThanAssignments 6ms
    [+] Should pass PSUseLiteralInitializerForHashtable 20ms
PS>TerminatingError(): "Expected: {0}
But was:  {28}"
>> TerminatingError(): "Expected: {0}
But was:  {28}"
    [-] Should pass PSUseOutputTypeCorrectly 37ms
      Expected: {0}
      But was:  {28}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 319
    [+] Should pass PSUseProcessBlockForPipelineCommand 47ms
    [+] Should pass PSUsePSCredentialType 30ms
    [+] Should pass PSShouldProcess 34ms
PS>TerminatingError(): "Expected: {0}
But was:  {6}"
>> TerminatingError(): "Expected: {0}
But was:  {6}"
    [-] Should pass PSUseShouldProcessForStateChangingFunctions 33ms
      Expected: {0}
      But was:  {6}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 319
PS>TerminatingError(): "Expected: {0}
But was:  {10}"
>> TerminatingError(): "Expected: {0}
But was:  {10}"
    [-] Should pass PSUseSingularNouns 46ms
      Expected: {0}
      But was:  {10}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 319
PS>TerminatingError(): "Expected: {0}
But was:  {26}"
>> TerminatingError(): "Expected: {0}
But was:  {26}"
    [-] Should pass PSUseSupportsShouldProcess 47ms
      Expected: {0}
      But was:  {26}
      319:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-Exo\Tests\verb-EXO.tests.ps1: line 319
    [+] Should pass PSUseToExportFieldsInManifest 55ms
    [+] Should pass PSUseUsingScopeModifierInNewRunspaces 30ms
    [+] Should pass PSUseUTF8EncodingForHelpFile 43ms
    [+] Should pass PSDSCDscExamplesPresent 47ms
    [+] Should pass PSDSCDscTestsPresent 34ms
    [+] Should pass PSDSCReturnCorrectTypesForDSCFunctions 40ms
    [+] Should pass PSDSCUseIdenticalMandatoryParametersForDSC 45ms
    [+] Should pass PSDSCUseIdenticalParametersForDSC 41ms
    [+] Should pass PSDSCStandardDSCFunctionsInResource 37ms
    [+] Should pass PSDSCUseVerboseMessageInDSCResource 33ms
16:20:11:
#*------^ RUNNING c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1: ^------
16:20:11: INFO:  
---------------------------------------------------------------------------------
Processing completed: verb-Exo :: c:\sc\verb-Exo
- Script is currently installed (from PsRep: with scope:CurrentUser, under TORO\kadritss profile

- To update other scopes/accounts on same machine, or install on other machines:
    1. Uninstall current module copies:

        Uninstall-Module -Name verb-Exo) -AllVersion -whatif ;

    2. Install the current version (or higher) from the Repo:lyncRepo:

        install-Module -name verb-Exo -Repository lyncRepo -RequiredVersion 8.1.1 -scope currentuser -whatif ;

    3. Reimport the module with -force, to ensure the current installed verison is loaded:

        import-Module -name verb-Exo -force -verbose ;

#-=-=-Stacked list for the above: CURRENTUSER=-=-=-=-=-=
$whatif=$false ;  $tScop = 'CurrentUser' ; $tMod = 'verb-Exo' ; $tVer = '8.1.1' ;
if($env:WT_SESSION){
    write-warning "WARNING YOU'RE INSTALLING INTO POWERSHELL7!
THE MODULE WILL GO INTO \DOCS\POWERSHELL\MODULES
(vs \DOCS\WINDOWSPOWERSHELL\MODULES)!" ; 
    $bRet=Read-Host "Enter YYY to continue. Anything else will exit"  ; 
    if ($bRet.ToUpper() -eq "YYY") {} else {WRITE-WARNING "HALTING!" ; BREAK} ; 
} ; 
TRY {
    switch($tScop){
        'CurrentUser'{$ModPath = "$(split-path $profile)\Modules\$($tmod)" }
        'AllUsers' {$ModPath = "$($env:ProgramFiles)\WindowsPowerShell\Modules)\$($tmod)"} ; 
    } ;
    if($Repository = (Get-PSRepository -Name $localPSRepo -ea 'STOP').name){
        rmo -Name $tmod -ea 0 ;
        Uninstall-Module -Name $tmod -AllVersion -force -ea 0 -whatif:$($whatif);
        gi -path $ModPath -ea 0 |ri -Recurse -force -verbose  -whatif:$($whatif) ;
        if($thisVers = find-module -name $tmod -Repository $Repository -RequiredVersion $tVer){
            $thisvers  | ft -a Name,Version,Repository ; 
            $thisVers | install-Module -scope $tScop -Force -AllowClobber -ea 'STOP' -whatif:$($whatif) ;
        }else {
            throw "Unable to:find-module -name $($tmod) -Repository $($Repository) -RequiredVersion $($tVer)"
            break ; 
        } ; 
        rmo -Name $tmod -force -ea 0 ;
        ipmo -name $tmod -force -verbose -ea 'STOP'  ;
        gmo -name $tmod | ? version -ne $tVer | rmo -Force -Verbose ; 
        gmo -name $tmod -list ;
    } else {
        throw "Unable to resolve `lyncRepo to a configured local PSRepository" ;
    } ;
} CATCH {
    $ErrTrapd=$Error[0] ;
    $smsg = "
$(($ErrTrapd | fl * -Force|out-string).trim())" ;
    write-warning "$((get-date).ToString('HH:mm:ss')):$($smsg)" ;
} ;
#-=-=-=-=-=-=-=-=
#-=-=-Stacked list for the above: ALLUSERS=-=-=-=-=-=
$whatif=$false ; $tScop = 'AllUsers' ; $tMod = 'verb-Exo' ; $tVer = '8.1.1' ;  
if($env:WT_SESSION){
    write-warning "WARNING YOU'RE INSTALLING INTO POWERSHELL7!
THE MODULE WILL GO INTO \DOCS\POWERSHELL\MODULES
(vs \DOCS\WINDOWSPOWERSHELL\MODULES)!" ; 
    $bRet=Read-Host "Enter YYY to continue. Anything else will exit"  ; 
    if ($bRet.ToUpper() -eq "YYY") {} else {WRITE-WARNING "HALTING!" ; BREAK} ; 
} ; 
TRY {
    switch($tScop){
        'CurrentUser'{$ModPath = "$(split-path $profile)\Modules\$($tmod)" }
        'AllUsers' {$ModPath = "$($env:ProgramFiles)\WindowsPowerShell\Modules)\$($tmod)"} ; 
    } ;
    if($Repository = (Get-PSRepository -Name $localPSRepo -ea 'STOP').name){
        rmo -Name $tmod -ea 0 ;
        Uninstall-Module -Name $tmod -AllVersion -force -ea 0 -whatif:$($whatif);
        gi -path $ModPath -ea 0 |ri -Recurse -force -verbose  -whatif:$($whatif) ;
        if($thisVers = find-module -name $tmod -Repository $Repository -RequiredVersion $tVer){
            $thisvers  | ft -a Name,Version,Repository ; 
            $thisVers | install-Module -scope $tScop -Force -AllowClobber -ea 'STOP' -whatif:$($whatif) ;
        }else {
            throw "Unable to:find-module -name $($tmod) -Repository $($Repository) -RequiredVersion $($tVer)"
            break ; 
        } ; 
        rmo -Name $tmod -force -ea 0 ;
        ipmo -name $tmod -force -verbose -ea 'STOP'  ;
        gmo -name $tmod | ? version -ne $tVer | rmo -Force -Verbose ; 
        gmo -name $tmod -list ;
    } else {
        throw "Unable to resolve `lyncRepo to a configured local PSRepository" ;
    } ;
} CATCH {
    $ErrTrapd=$Error[0] ;
    $smsg = "
$(($ErrTrapd | fl * -Force|out-string).trim())" ;
    write-warning "$((get-date).ToString('HH:mm:ss')):$($smsg)" ;
} ;
#-=-=-=-=-=-=-=-=

- You may also want to run the configured Pester Tests of the new script:

        . c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1

Full Processing Details can be found in:

C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-Exo-LOG-BATCH-EXEC-20240923-1617PM-log.txt

---------------------------------------------------------------------------------
16:20:11: INFO:  
(Most recent processing log can be found at:c:\sc\verb-Exo\VERB-dev-verb-Exo-LOG-BATCH-EXEC-20240923-1617PM-log.txt)
(perm copy stored at:C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-Exo-LOG-BATCH-EXEC-20240923-1617PM-log.txt
16:20:11: INFO:  remove-UnneededFileVariants w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-Exo                                                                               
Include                        VERB-dev-verb-Exo-LOG-BATCH-*-log.txt                                                        
Pattern                                                                                                                     
FilterOn                       CreationTime                                                                                 
Keep                           2                                                                                            
KeepToday                      True                                                                                         
verbose                        True                                                                                         
whatif                         False
16:20:11:gci w
Name                           Value                                                                                        
----                           -----                                                                                        
path                           c:\sc\verb-Exo\*                                                                             
include                        VERB-dev-verb-Exo-LOG-BATCH-*-log.txt                                                        
ErrorAction                    Stop
VERBOSE: $cuttime:09/23/2024 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/23/2024 00:00:00 AM, on CreationTime property
(1 in set *before* filtering)
(0 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(0 in set *before* filtering)
(0 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
16:20:11:Reducing matched population from 1 to 0 files via:
filtered files on CreationTime prior to 09/23/2024 00:00:00 AM
16:20:11:There are *no* files to be removed, as per the specified inputs. ($population:0)
16:20:11: INFO:  #*======^ VERB-dev.psm1:verb-Exo ^======
16:20:11:
#*------^ (1/1):PROC:verb-Exo: ^------
16:20:11:
#*======^ RUNNING processbulk-NewModule.ps1 ^======

▒
▒
▒
░
░

LYN-9C5CTV3
 ▓▒▓
TORO\kadritss
 ▓▒▓
Mon 09/23/2024 16:20
 [00:03:37]

▒
▒
▒
▒
▒

[PS]
:
C:\u\w\p\scripts

$




PS>gc C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-Exo-LOG-BATCH-EXEC-20240923-1617PM-log.txt
2024-09-23 16:17:12 INFO:  : #*======v VERB-dev.psm1:verb-Exo v======
2024-09-23 16:17:12 VERBOSE:  : $modRoot is blank, assigning from mandetory param:$ModDirPath
2024-09-23 16:17:12 INFO:  : Run: reset-ModulePublishingDirectory -ModuleName verb-Exo
2024-09-23 16:17:12 ##  :
#*------v PROCESSING : verb-Exo v------
2024-09-23 16:17:12 INFO:  : Pre-purge (CHANGELOG|README)\.md$ Root dir matches from :
2024-09-23 16:17:12 INFO:  : verb-Exo resolved $ModPubPath:C:\sc\verb-Exo\verb-Exo\
$ModResPath:C:\sc\verb-Exo\Resource\
2024-09-23 16:17:12 VERBOSE:  : Reset module Resource files (purge from C:\sc\verb-Exo\verb-Exo\)
2024-09-23 16:17:12 INFO:  : verb-Exo resolved $ModPubPath:C:\sc\verb-Exo\verb-Exo\
$ModResPath:C:\sc\verb-Exo\Licenses\
2024-09-23 16:17:12 VERBOSE:  : Reset module Licenses files (purge from C:\sc\verb-Exo\verb-Exo\)
2024-09-23 16:17:12 INFO:  : verb-Exo resolved $ModPubPath:C:\sc\verb-Exo\verb-Exo\
$ModResPath:C:\sc\verb-Exo\Docs\
2024-09-23 16:17:12 VERBOSE:  : Reset module Docs files (purge from C:\sc\verb-Exo\verb-Exo\)
2024-09-23 16:17:12 INFO:  : ==C:\sc\verb-Exo\CHANGELOG.md:
2024-09-23 16:17:12 INFO:  : ==C:\sc\verb-Exo\README.md:
2024-09-23 16:17:12 INFO:  : ==C:\sc\verb-Exo\Docs\Quick-Start-Installation-and-Example.md:
2024-09-23 16:17:12 ##  :
#*------^ PROCESSING : verb-Exo ^------
2024-09-23 16:17:12 INFO:  : Run: populate-ModulePublishingDirectory -ModuleName verb-Exo
2024-09-23 16:17:12 ##  :
#*------v PROCESSING : verb-Exo v------
2024-09-23 16:17:12 INFO:  : Locating (CHANGELOG|README)\.md$ Root dir matches from :
2024-09-23 16:17:12 INFO:  : verb-Exo resolved $ModPubPath:C:\sc\verb-Exo\verb-Exo\
$ModResPath:C:\sc\verb-Exo\Resource\
2024-09-23 16:17:12 VERBOSE:  : Recopy module Resource files (copy from C:\sc\verb-Exo\verb-Exo\)
2024-09-23 16:17:12 INFO:  : verb-Exo resolved $ModPubPath:C:\sc\verb-Exo\verb-Exo\
$ModResPath:C:\sc\verb-Exo\Licenses\
2024-09-23 16:17:12 VERBOSE:  : Recopy module Licenses files (copy from C:\sc\verb-Exo\verb-Exo\)
2024-09-23 16:17:12 INFO:  : verb-Exo resolved $ModPubPath:C:\sc\verb-Exo\verb-Exo\
$ModResPath:C:\sc\verb-Exo\Docs\
2024-09-23 16:17:12 VERBOSE:  : Recopy module Docs files (copy from C:\sc\verb-Exo\verb-Exo\)
2024-09-23 16:17:12 INFO:  : copy-item w
Name                           Value
----                           -----
path                           {C:\sc\verb-Exo\CHANGELOG.md, C:\sc\verb-Exo\README.md, C:\sc\verb-Exo\Docs\Quick-Start-In...
destination                    C:\sc\verb-Exo\verb-Exo\
force                          True
erroraction                    STOP
verbose                        True
whatif                         False
--$pltCI.path:
C:\sc\verb-Exo\CHANGELOG.md
C:\sc\verb-Exo\README.md
C:\sc\verb-Exo\Docs\Quick-Start-Installation-and-Example.md
2024-09-23 16:17:12 ##  :
#*------^ PROCESSING : verb-Exo ^------
2024-09-23 16:17:12 INFO:  : Validate updated verb-Exo\verb-Exo dir contents against Manifest:
Run: test-modulemanifest -Path C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1
2024-09-23 16:17:12 VERBOSE:  : (no $ttmm_Err: test-ModuleManifest had no errors)
2024-09-23 16:17:12 INFO:  : NON-Republish pass detected:
MERGE parm specified as well:`n-Merge Public|Internal|Classes include subdirs module content into updated .psm1
-Sign updated files.
-Uninstall/Remove existing profile module
-Copy new module to profile
-Confirm: Get-Module -ListAvailable
-Check/Update existing Psd1 Version
-Publish-Module
-Remove existing installed profile module
-Test Install-Module
-Test Import-Module
2024-09-23 16:17:12 INFO:  : -Merge specified...
2024-09-23 16:17:12 INFO:  : ConvertTo-ModuleMergedTDO w
Name                           Value
----                           -----
ModuleName                     verb-Exo
ModuleSourcePath               {c:\sc\verb-Exo\Public, c:\sc\verb-Exo\Internal}
ModuleDestinationPath          c:\sc\verb-Exo\verb-Exo
RequiredVersion                8.1.1
LogSpec                        {logging, logfile, transcript}
NoAliasExport
ErrorAction                    Stop
showdebug                      False
whatif                         False
2024-09-23 16:17:12 INFO:  : ConvertTo-ModuleMergedTDO w
Name                           Value
----                           -----
ModuleName                     verb-Exo
ModuleSourcePath               {c:\sc\verb-Exo\Public, c:\sc\verb-Exo\Internal}
ModuleDestinationPath          c:\sc\verb-Exo\verb-Exo
RequiredVersion                8.1.1
LogSpec                        {logging, logfile, transcript}
NoAliasExport
ErrorAction                    Stop
showdebug                      False
whatif                         False
2024-09-23 16:17:13 INFO:  : (NON-dyn psm1 detected - purging existing non-CBH content...)
2024-09-23 16:17:14 INFO:  : Initialize-PSModuleDirectories w
Name                           Value
----                           -----
ModuleSourcePath               {c:\sc\verb-Exo\Public, c:\sc\verb-Exo\Internal}
ModuleDestinationPath          c:\sc\verb-Exo\verb-Exo
ErrorAction                    Stop
whatif                         False
2024-09-23 16:17:14 INFO:  :
#*------v (1/2):C:\sc\verb-Exo\Public v------
2024-09-23 16:17:14 INFO:  : Processing 43 $ComponentScripts files through Remove-AuthenticodeSignature...
2024-09-23 16:17:14 INFO:  : Remove-AuthenticodeSignature w
Name                           Value
----                           -----
Path                           {C:\sc\verb-Exo\Public\add-EXOLicense.ps1, C:\sc\verb-Exo\Public\check-EXOLegalHold.ps1, C...
whatif                         False
verbose                        True
2024-09-23 16:17:14 INFO:  : Processing (1/43):C:\sc\verb-Exo\Public\add-EXOLicense.ps1...
2024-09-23 16:17:14 INFO:  : Processing (2/43):C:\sc\verb-Exo\Public\check-EXOLegalHold.ps1...
2024-09-23 16:17:14 INFO:  : Processing (3/43):C:\sc\verb-Exo\Public\Connect-EXO.ps1...
2024-09-23 16:17:14 INFO:  : Processing (4/43):C:\sc\verb-Exo\Public\convert-ADUserRecipientTypeRemoteSharedMailbox.ps1...
2024-09-23 16:17:14 INFO:  : Processing (5/43):C:\sc\verb-Exo\Public\convert-ADUserRecipientTypeRemoteUserMailbox.ps1...
2024-09-23 16:17:14 INFO:  : Processing (6/43):C:\sc\verb-Exo\Public\convert-exoMailboxTypeSharedMailbox.ps1...
2024-09-23 16:17:14 INFO:  : Processing (7/43):C:\sc\verb-Exo\Public\convert-exoMailboxTypeUserMailbox.ps1...
2024-09-23 16:17:14 INFO:  : Processing (8/43):C:\sc\verb-Exo\Public\convert-HistoricalSearchCSV.ps1...
2024-09-23 16:17:15 INFO:  : Processing (9/43):C:\sc\verb-Exo\Public\copy-XPermissionGroupToCloudOnly.ps1...
2024-09-23 16:17:15 INFO:  : Processing (10/43):C:\sc\verb-Exo\Public\cxotol.ps1...
2024-09-23 16:17:15 INFO:  : Processing (11/43):C:\sc\verb-Exo\Public\cxotor.ps1...
2024-09-23 16:17:15 INFO:  : Processing (12/43):C:\sc\verb-Exo\Public\Disconnect-EXO.ps1...
2024-09-23 16:17:15 INFO:  : Processing (13/43):C:\sc\verb-Exo\Public\get-AADlicensePlanList.ps1...
2024-09-23 16:17:15 INFO:  : Processing (14/43):C:\sc\verb-Exo\Public\get-ADUsersWithSoftDeletedxoMailboxes.ps1...
2024-09-23 16:17:15 INFO:  : Processing (15/43):C:\sc\verb-Exo\Public\get-ExoGxMTEventType.ps1...
2024-09-23 16:17:15 INFO:  : Processing (16/43):C:\sc\verb-Exo\Public\get-ExoMailboxLicenses.ps1...
2024-09-23 16:17:15 INFO:  : Processing (17/43):C:\sc\verb-Exo\Public\get-ExoMessageTraceEventType.ps1...
2024-09-23 16:17:15 INFO:  : Processing (18/43):C:\sc\verb-Exo\Public\get-ExoMessageTraceSourceType.ps1...
2024-09-23 16:17:15 INFO:  : Processing (19/43):C:\sc\verb-Exo\Public\get-EXOMsgTraceDetailed.ps1...
2024-09-23 16:17:15 INFO:  : Processing (20/43):C:\sc\verb-Exo\Public\get-MailboxFolderStats.ps1...
2024-09-23 16:17:15 INFO:  : Processing (21/43):C:\sc\verb-Exo\Public\get-MsgTrace.ps1...
2024-09-23 16:17:15 INFO:  : Processing (22/43):C:\sc\verb-Exo\Public\Get-OrgNameFromUPN.ps1...
2024-09-23 16:17:15 INFO:  : Processing (23/43):C:\sc\verb-Exo\Public\get-xoHistSearch.ps1...
2024-09-23 16:17:16 INFO:  : Processing (24/43):C:\sc\verb-Exo\Public\get-XOMailboxFolderList.ps1...
2024-09-23 16:17:16 INFO:  : Processing (25/43):C:\sc\verb-Exo\Public\Get-xoMailboxFolderPermissionsRecursive.ps1...
2024-09-23 16:17:16 INFO:  : Processing (26/43):C:\sc\verb-Exo\Public\get-XOMailboxFolderPermissionsSummary.ps1...
2024-09-23 16:17:16 INFO:  : Processing (27/43):C:\sc\verb-Exo\Public\move-MailboxToXo.ps1...
2024-09-23 16:17:16 INFO:  : Processing (28/43):C:\sc\verb-Exo\Public\new-DgTor.ps1...
2024-09-23 16:17:16 INFO:  : Processing (29/43):C:\sc\verb-Exo\Public\new-xoDGFromProperty.ps1...
2024-09-23 16:17:16 INFO:  : Processing (30/43):C:\sc\verb-Exo\Public\Reconnect-EXO.ps1...
2024-09-23 16:17:16 INFO:  : Processing (31/43):C:\sc\verb-Exo\Public\remove-EXOLicense.ps1...
2024-09-23 16:17:16 INFO:  : Processing (32/43):C:\sc\verb-Exo\Public\Reset-xoMailboxFolderPermissionsRecursive.ps1...
2024-09-23 16:17:16 INFO:  : Processing (33/43):C:\sc\verb-Exo\Public\resolve-AppIDToCBAFriendlyName.ps1...
2024-09-23 16:17:17 INFO:  : Processing (34/43):C:\sc\verb-Exo\Public\resolve-Name.ps1...
2024-09-23 16:17:17 INFO:  : Processing (35/43):C:\sc\verb-Exo\Public\resolve-user.ps1...
2024-09-23 16:17:17 INFO:  : Processing (36/43):C:\sc\verb-Exo\Public\resolve-xoRcps.ps1...
2024-09-23 16:17:17 INFO:  : Processing (37/43):C:\sc\verb-Exo\Public\rxotol.ps1...
2024-09-23 16:17:17 INFO:  : Processing (38/43):C:\sc\verb-Exo\Public\rxotor.ps1...
2024-09-23 16:17:17 INFO:  : Processing (39/43):C:\sc\verb-Exo\Public\test-EXOConnectionTDO.ps1...
2024-09-23 16:17:17 INFO:  : Processing (40/43):C:\sc\verb-Exo\Public\test-ExoDnsRecordTDO.ps1...
2024-09-23 16:17:17 INFO:  : Processing (41/43):C:\sc\verb-Exo\Public\test-EXOIsLicensed.ps1...
2024-09-23 16:17:17 INFO:  : Processing (42/43):C:\sc\verb-Exo\Public\test-EXOv2Connection.ps1...
2024-09-23 16:17:17 INFO:  : Processing (43/43):C:\sc\verb-Exo\Public\test-xoMailbox.ps1...
2024-09-23 16:17:18 INFO:  :
#*------^ (1/2):C:\sc\verb-Exo\Public ^------
2024-09-23 16:17:18 INFO:  :
#*------v (2/2):C:\sc\verb-Exo\Internal v------
2024-09-23 16:17:18 INFO:  : Processing 0 $ComponentScripts files through Remove-AuthenticodeSignature...
2024-09-23 16:17:18 INFO:  : Remove-AuthenticodeSignature w
Name                           Value
----                           -----
Path
whatif                         False
verbose                        True
2024-09-23 16:17:18 INFO:  :
#*------^ (2/2):C:\sc\verb-Exo\Internal ^------
2024-09-23 16:17:18 INFO:  : (Updating Psm1 Export-ModuleMember -Function to reflect Public modules)
2024-09-23 16:17:18 INFO:  : Adding:FooterBlock...
2024-09-23 16:17:18 INFO:  : Updating the Psd1 FunctionsToExport to match
2024-09-23 16:17:18 INFO:  : confirm-ModuleBuildSync w
Name                           Value
----                           -----
ModPsdPath                     c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP
RequiredVersion                8.1.1
NoTest                         True
whatif                         False
verbose                        True
2024-09-23 16:17:18 INFO:  : #*======v confirm-ModuleBuildSync:  v======
2024-09-23 16:17:18 INFO:  : (test-path confirms $ModPsm1 & $ModTestPs1)
2024-09-23 16:17:18 INFO:  : Import-PowerShellDataFile w
Name                           Value
----                           -----
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP
ErrorAction                    Stop
verbose                        True
2024-09-23 16:17:18 INFO:  : (resolved Module attributes:
$ModuleName:	verb-Exo
$ModRoot:	c:\sc\verb-Exo
$ModPsd1:	c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP
$ModPsm1:	c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP
$ModTestPs1:	c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1
$psd1Vers:	8.1.1
$psd1guid:	b9637e55-12be-4916-8000-a949f9426fa3)
2024-09-23 16:17:18 INFO:  : confirm-ModulePsd1Version w
Name                           Value
----                           -----
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP
RequiredVersion                8.1.1
whatif                         False
verbose                        True
2024-09-23 16:17:18 INFO:  : #*======v confirm-ModulePsd1Version: c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP v======
2024-09-23 16:17:18 INFO:  : (Version already updated to match)
2024-09-23 16:17:18 INFO:  : $objReport
Name                           Value
----                           -----
Version                        8.1.1
Valid                          False
2024-09-23 16:17:18 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:17:18 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Version                        8.1.1
Valid                          True
2024-09-23 16:17:18 INFO:  : #*======^ confirm-ModulePsd1Version: c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP ^======
2024-09-23 16:17:18 INFO:  : (confirm-ModulePsd1Version:Success)
2024-09-23 16:17:18 INFO:  : confirm-ModulePsm1Version w
Name                           Value
----                           -----
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP
RequiredVersion                8.1.1
whatif                         False
verbose                        True
2024-09-23 16:17:18 INFO:  : #*======v confirm-ModulePsm1Version: c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP v======
2024-09-23 16:17:18 WARNING:  : In:c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP
Version present:(8.1.0)
*does not* properly match:8.1.1
FORCING MATCHING UPDATE!
2024-09-23 16:17:19 INFO:  : $objReport
Name                           Value
----                           -----
Version                        8.1.1
Valid                          False
2024-09-23 16:17:19 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:17:19 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Version                        8.1.1
Valid                          True
2024-09-23 16:17:19 INFO:  : #*======^ confirm-ModulePsm1Version: c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP ^======
2024-09-23 16:17:19 INFO:  : (confirm-ModulePsm1Version:Success)
2024-09-23 16:17:19 INFO:  : (-NoTest: skipping confirm-ModuleTestPs1Guid)
2024-09-23 16:17:19 INFO:  : $objReport
Name                           Value
----                           -----
Manifest                       c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP
Module                         c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP
Pester                         (SKIPPED)
Guid                           (SKIPPED)
Version                        8.1.1
Valid                          False
2024-09-23 16:17:19 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:17:19 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Manifest                       c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP
Module                         c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP
Pester                         (SKIPPED)
Guid                           (SKIPPED)
Version                        8.1.1
Valid                          True
2024-09-23 16:17:19 INFO:  : #*======^ confirm-ModuleBuildSync:  ^======
2024-09-23 16:17:19 INFO:  : (confirm-ModuleBuildSync:Success)
2024-09-23 16:17:19 INFO:  : Test-ModuleTMPFiles w
Name                           Value
----                           -----
ModuleNamePSM1Path             c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP
verbose                        True
2024-09-23 16:17:19 INFO:  : #*======v Test-ModuleTMPFiles: c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP v======
2024-09-23 16:17:19 INFO:  :
Psm1:c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP
Psd1:c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP
2024-09-23 16:17:19 INFO:  : Creating Testable c:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psd1
 to validate c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP will Test-ModuleManifest
2024-09-23 16:17:19 INFO:  : Test-ModuleManifest w
Name                           Value
----                           -----
verbose                        True
Path                           c:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psd1
ErrorVariable                  vManiErr
ErrorAction                    STOP
2024-09-23 16:17:19 INFO:  : Test-ModuleManifest:PASSED
2024-09-23 16:17:19 INFO:  : Creating Testable c:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psm1
 to validate c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP will Import-Module
2024-09-23 16:17:19 INFO:  : n import-module w
Name                           Value
----                           -----
Name                           c:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psm1
Force                          True
verbose                        True
ErrorAction                    STOP
ErrorVariable                  vIpMoErr
PassThru                       True
2024-09-23 16:17:20 INFO:  : Ipmo: PASSED
2024-09-23 16:17:20 INFO:  : (remove-module -name c:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psm1 -force)
2024-09-23 16:17:20 INFO:  : (remove-item -path c:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psm1 -ErrorAction SilentlyContinue ;
2024-09-23 16:17:20 INFO:  : (remove-item -path c:\sc\verb-Exo\verb-Exo\89b22b44-5f32-4a70-ac3a-7e3c912f4bb7.psd1 -ErrorAction SilentlyContinue ;
2024-09-23 16:17:20 INFO:  : $objReport
Name                           Value
----                           -----
Manifest                       89b22b44-5f32-4a70-ac3a-7e3c912f4bb7
Module                         89b22b44-5f32-4a70-ac3a-7e3c912f4bb7
Valid                          False
2024-09-23 16:17:20 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:17:20 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Manifest                       89b22b44-5f32-4a70-ac3a-7e3c912f4bb7
Module                         89b22b44-5f32-4a70-ac3a-7e3c912f4bb7
Valid                          True
2024-09-23 16:17:20 INFO:  : #*======^ Test-ModuleTMPFiles: c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP ^======
2024-09-23 16:17:20 INFO:  : Processing error free: Overwriting temp .psm1 with temp copy
copy-item w
Name                           Value
----                           -----
Destination                    c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psm1_TMP
whatif                         False
ErrorAction                    STOP
2024-09-23 16:17:20 INFO:  : Processing error free: Overwriting temp .psd1 with temp copy
copy-item w
Name                           Value
----                           -----
Destination                    c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1
Path                           c:\sc\verb-Exo\verb-Exo\verb-Exo.psd1_TMP
whatif                         False
ErrorAction                    STOP
2024-09-23 16:17:20 INFO:  : #*======^ ConvertTo-ModuleMergedTDO: ^======
2024-09-23 16:17:20 VERBOSE:  : (no $ttmm_Err: test-ModuleManifest had no errors)
2024-09-23 16:17:20 INFO:  : (Test-ModuleManifest:PASSED)
2024-09-23 16:17:20 INFO:  : Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1
2024-09-23 16:17:20 INFO:  : confirm-ModuleBuildSync w
Name                           Value
----                           -----
ModPsdPath                     C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1
RequiredVersion                8.1.1
whatif                         False
verbose                        True
2024-09-23 16:17:20 INFO:  : #*======v confirm-ModuleBuildSync:  v======
2024-09-23 16:17:20 INFO:  : (test-path confirms $ModPsm1 & $ModTestPs1)
2024-09-23 16:17:20 INFO:  : Import-PowerShellDataFile w
Name                           Value
----                           -----
Path                           C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1
ErrorAction                    Stop
verbose                        True
2024-09-23 16:17:20 INFO:  : (resolved Module attributes:
$ModuleName:	verb-Exo
$ModRoot:	c:\sc\verb-Exo
$ModPsd1:	C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1
$ModPsm1:	C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1
$ModTestPs1:	c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1
$psd1Vers:	8.1.1
$psd1guid:	b9637e55-12be-4916-8000-a949f9426fa3)
2024-09-23 16:17:20 INFO:  : confirm-ModulePsd1Version w
Name                           Value
----                           -----
Path                           C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1
RequiredVersion                8.1.1
whatif                         False
verbose                        True
2024-09-23 16:17:20 INFO:  : #*======v confirm-ModulePsd1Version: C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1 v======
2024-09-23 16:17:20 INFO:  : (Version already updated to match)
2024-09-23 16:17:20 INFO:  : $objReport
Name                           Value
----                           -----
Version                        8.1.1
Valid                          False
2024-09-23 16:17:20 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:17:20 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Version                        8.1.1
Valid                          True
2024-09-23 16:17:20 INFO:  : #*======^ confirm-ModulePsd1Version: C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1 ^======
2024-09-23 16:17:20 INFO:  : (confirm-ModulePsd1Version:Success)
2024-09-23 16:17:20 INFO:  : confirm-ModulePsm1Version w
Name                           Value
----                           -----
Path                           C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1
RequiredVersion                8.1.1
whatif                         False
verbose                        True
2024-09-23 16:17:20 INFO:  : #*======v confirm-ModulePsm1Version: C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1 v======
2024-09-23 16:17:20 INFO:  : (Version already updated to match)
2024-09-23 16:17:20 INFO:  : $objReport
Name                           Value
----                           -----
Version                        8.1.1
Valid                          False
2024-09-23 16:17:20 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:17:20 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Version                        8.1.1
Valid                          True
2024-09-23 16:17:20 INFO:  : #*======^ confirm-ModulePsm1Version: C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1 ^======
2024-09-23 16:17:20 INFO:  : (confirm-ModulePsm1Version:Success)
2024-09-23 16:17:20 INFO:  : Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1
2024-09-23 16:17:20 INFO:  : confirm-ModuleTestPs1Guid w
Name                           Value
----                           -----
Path                           c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1
RequiredGuid                   b9637e55-12be-4916-8000-a949f9426fa3
whatif                         False
verbose                        True
2024-09-23 16:17:20 INFO:  : #*======v confirm-ModuleTestPs1Guid: c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1 v======
2024-09-23 16:17:20 INFO:  : (Guid  already updated to match)
2024-09-23 16:17:20 INFO:  : $objReport
Name                           Value
----                           -----
Guid                           b9637e55-12be-4916-8000-a949f9426fa3
Valid                          False
2024-09-23 16:17:20 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:17:20 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Guid                           b9637e55-12be-4916-8000-a949f9426fa3
Valid                          True
2024-09-23 16:17:20 INFO:  : #*======^ confirm-ModuleTestPs1Guid: c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1 ^======
2024-09-23 16:17:20 INFO:  : (confirm-ModuleTestPs1Guid:Success)
2024-09-23 16:17:20 INFO:  : $objReport
Name                           Value
----                           -----
Manifest                       C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1
Module                         C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1
Pester                         c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1
Guid                           b9637e55-12be-4916-8000-a949f9426fa3
Version                        8.1.1
Valid                          False
2024-09-23 16:17:20 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:17:20 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Manifest                       C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1
Module                         C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1
Pester                         c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1
Guid                           b9637e55-12be-4916-8000-a949f9426fa3
Version                        8.1.1
Valid                          True
2024-09-23 16:17:20 INFO:  : #*======^ confirm-ModuleBuildSync:  ^======
2024-09-23 16:17:20 INFO:  : (confirm-ModuleBuildSync:Success)
2024-09-23 16:17:21 VERBOSE:  : $Psd1filelist populated: export-cliXML:c:\sc\verb-Exo\Psd1filelist
2024-09-23 16:17:21 INFO:  : Updating the Psd1 FileList to with populated $Psd1filelist...
2024-09-23 16:17:21 INFO:  : Signing appropriate files...
2024-09-23 16:17:21 INFO:  : set-AuthenticodeSignatureTDO w
Name                           Value
----                           -----
file                           {C:\sc\verb-Exo\rebuild-module.ps1, C:\sc\verb-Exo\requirements.psd1, C:\sc\verb-Exo\Tests...
ErrorAction                    Stop
whatif                         False
2024-09-23 16:17:21 INFO:  : Removing existing profile verb-Exo content...
2024-09-23 16:17:21 INFO:  : Uninstall-ModuleForce w
Name                           Value
----                           -----
ModuleName                     verb-Exo
Verbose                        True
whatif                         False
2024-09-23 16:17:24 INFO:  :
#*------v Uninstall PSGet Mod:verb-EXO:v8.1.0 v------
2024-09-23 16:17:24 INFO:  : Uninstall-Script w
Name                           Value
----                           -----
Force                          True
Whatif                         False
Verbose                        True
2024-09-23 16:17:40 INFO:  :
#*------^ Uninstall PSGet Mod:verb-EXO:v8.1.0 ^------
2024-09-23 16:17:40 INFO:  : (Processing $env:PSModulePath paths, for surviving locked copies of verb-Exo to *manually* purge...)
2024-09-23 16:17:40 INFO:  : Checking: verb-Exo below: C:\Users\kadritss\Documents\WindowsPowerShell\Modules...
2024-09-23 16:17:40 INFO:  : Checking: verb-Exo below: C:\ProgramData\Boxstarter...
2024-09-23 16:17:40 INFO:  : Checking: verb-Exo below: C:\Program Files\WindowsPowerShell\Modules...
2024-09-23 16:17:40 INFO:  : Checking: verb-Exo below: C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules...
2024-09-23 16:17:40 INFO:  : Checking: verb-Exo below: C:\Program Files (x86)\AutoIt3\AutoItX...
2024-09-23 16:17:40 INFO:  : (no $sRet returned on call)
2024-09-23 16:17:40 INFO:  : Copying module to profile (net of .git & .vscode dirs, and backed up content)...
2024-09-23 16:17:40 INFO:  : $srcFiles:post-filter out:
\\(Package|Tests|logs)\\|(\.ps[dm]1_(\d+-\d+[AP]M|TMP)|-LOG-BATCH-EXEC-\d+-\d+[AP]M-log\.txt|\\(fingerprint|Psd1filelist))$
2024-09-23 16:17:40 INFO:  : Discovered mod-copy files ($srcFiles.fullname):w
C:\sc\verb-Exo\verb-EXO\CHANGELOG.md
C:\sc\verb-Exo\verb-EXO\Quick-Start-Installation-and-Example.md
C:\sc\verb-Exo\verb-EXO\README.md
C:\sc\verb-Exo\verb-EXO\verb-EXO.psd1
C:\sc\verb-Exo\verb-EXO\verb-EXO.psm1
2024-09-23 16:17:40 INFO:  : Non-Pre-existing:$to:C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo
Pre-creating before copy...
2024-09-23 16:17:40 INFO:  : Mode   LastWriteTime        Length Name
----   -------------        ------ ----
d----- 9/23/2024 4:17:40 PM        verb-Exo
2024-09-23 16:17:40 INFO:  : -Merge:exclude $MergeBuildExcl \\(Public|Internal|External|Private)\\.*.ps1$ files from temp build copy
2024-09-23 16:17:40 INFO:  : Recursively remove empty subdirs below C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo...
2024-09-23 16:17:40 INFO:  : Move/Flatten Resource etc files into root of temp Build dir...
2024-09-23 16:17:40 INFO:  : Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo COPY of Quick-Start-Installation-and-Example.md
2024-09-23 16:17:40 INFO:  : Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo COPY of CHANGELOG.md
2024-09-23 16:17:40 INFO:  : Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Exo\verb-Exo COPY of README.md
2024-09-23 16:17:40 INFO:  : copy/Flatten Resource etc files into source root c:\sc\verb-Exo\verb-Exo dir...
2024-09-23 16:17:40 INFO:  : Resolved $ModPsdPath:
C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1
2024-09-23 16:17:40 VERBOSE:  : resolve-path the CUMods verb-Exo.psd1 location
2024-09-23 16:17:40 INFO:  :
==Verifying CU:Mods\verb-Exo\verb-Exo\Quick-Start-Installation-and-Example.md:
2024-09-23 16:17:40 INFO:  :
==Verifying CU:Mods\verb-Exo\verb-Exo\CHANGELOG.md:
2024-09-23 16:17:40 INFO:  :
==Verifying CU:Mods\verb-Exo\verb-Exo\README.md:
2024-09-23 16:17:40 INFO:  : Running pre-Publish-Module .psd1 test:
Test-ModuleManifest -path C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1
2024-09-23 16:17:40 VERBOSE:  : (no $ttmm_Err: test-ModuleManifest had no errors)
2024-09-23 16:17:40 INFO:  : (Test-ModuleManifest:PASSED)
2024-09-23 16:17:40 INFO:  : (Profiling Repo: get-PSRepository -name lyncRepo...)
2024-09-23 16:17:41 VERBOSE:  : (confirmed:$tRepo.PublishLocation accessible)
2024-09-23 16:17:41 INFO:  :
Publish-Module w
Name                           Value
----                           -----
Name                           verb-Exo
Repository                     lyncRepo
RequiredVersion                8.1.1
Verbose                        True
ErrorAction                    Stop
errorVariable                  pbmo_Err
whatif                         False
2024-09-23 16:17:47 WARNING:  :  FOUND $pbmo_Err: import-module HAD ERRORS! (no action, could be non-impacting)
2024-09-23 16:17:47 WARNING:  :  Publish-Module PBMO UNDEFINED ERROR! System.Management.Automation.StopUpstreamCommandsException: System error.     at Microsoft.PowerShell.Commands.SelectObjectCommand.ProcessRecord()     at System.Management.Automation.CommandProcessor.ProcessRecord() (But PublishModule doesn't bother to return a functional Error object with an Exception, so we can't trust/parse or act on it. Just echo)
2024-09-23 16:17:47 INFO:  : Waiting for:find-module -name verb-Exo -Repository lyncRepo ...
2024-09-23 16:17:48 INFO:  : Install-Module w
Name                           Value
----                           -----
Name                           verb-Exo
Repository                     lyncRepo
RequiredVersion                8.1.1
scope                          CurrentUser
force                          True
AllowClobber                   True
errorVariable                  ismo_Err
ErrorAction                    Stop
whatif                         False
2024-09-23 16:17:53 VERBOSE:  : (no $ismo_Err: Install-Module had no errors)
2024-09-23 16:17:53 INFO:  : Testing Module:Import-Module w
Name                           Value
----                           -----
Name                           verb-Exo
ErrorAction                    Stop
errorVariable                  ipmo_Err
force                          True
verbose                        True
2024-09-23 16:17:54 VERBOSE:  : (no $ipmo_Err: test-ModuleManifest had no errors)
2024-09-23 16:17:54 INFO:  : Retrieving matching Repo .nupkg file:
gci \\lynmsv10\lync_fs\scripts\sc\verb-Exo.8.1.1.nupkgl..
2024-09-23 16:17:54 INFO:  : Proper updated .nupkg file found:verb-Exo.8.1.1.nupkg, copying to local Pkg directory.
2024-09-23 16:17:54 INFO:  : remove-UnneededFileVariants w
Name                           Value
----                           -----
Path                           c:\sc\verb-Exo\Package
Include                        verb-Exo*.nupkg
Pattern
FilterOn                       CreationTime
Keep                           2
KeepToday                      True
verbose                        True
whatif                         False
2024-09-23 16:17:54 INFO:  : remove-UnneededFileVariants w
Name                           Value
----                           -----
Path                           c:\sc\verb-Exo\Tests
Include                        ScriptAnalyzer-Results-*.xml
Pattern
FilterOn                       CreationTime
Keep                           4
KeepToday                      True
verbose                        True
whatif                         False
2024-09-23 16:17:54 INFO:  : -RunTest specified: Running Pester Test script:
c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1

2024-09-23 16:20:11 INFO:  :
---------------------------------------------------------------------------------
Processing completed: verb-Exo :: c:\sc\verb-Exo
- Script is currently installed (from PsRep: with scope:CurrentUser, under TORO\kadritss profile

- To update other scopes/accounts on same machine, or install on other machines:
    1. Uninstall current module copies:

        Uninstall-Module -Name verb-Exo) -AllVersion -whatif ;

    2. Install the current version (or higher) from the Repo:lyncRepo:

        install-Module -name verb-Exo -Repository lyncRepo -RequiredVersion 8.1.1 -scope currentuser -whatif ;

    3. Reimport the module with -force, to ensure the current installed verison is loaded:

        import-Module -name verb-Exo -force -verbose ;

#-=-=-Stacked list for the above: CURRENTUSER=-=-=-=-=-=
$whatif=$false ;  $tScop = 'CurrentUser' ; $tMod = 'verb-Exo' ; $tVer = '8.1.1' ;
if($env:WT_SESSION){
    write-warning "WARNING YOU'RE INSTALLING INTO POWERSHELL7!
THE MODULE WILL GO INTO \DOCS\POWERSHELL\MODULES
(vs \DOCS\WINDOWSPOWERSHELL\MODULES)!" ;
    $bRet=Read-Host "Enter YYY to continue. Anything else will exit"  ;
    if ($bRet.ToUpper() -eq "YYY") {} else {WRITE-WARNING "HALTING!" ; BREAK} ;
} ;
TRY {
    switch($tScop){
        'CurrentUser'{$ModPath = "$(split-path $profile)\Modules\$($tmod)" }
        'AllUsers' {$ModPath = "$($env:ProgramFiles)\WindowsPowerShell\Modules)\$($tmod)"} ;
    } ;
    if($Repository = (Get-PSRepository -Name $localPSRepo -ea 'STOP').name){
        rmo -Name $tmod -ea 0 ;
        Uninstall-Module -Name $tmod -AllVersion -force -ea 0 -whatif:$($whatif);
        gi -path $ModPath -ea 0 |ri -Recurse -force -verbose  -whatif:$($whatif) ;
        if($thisVers = find-module -name $tmod -Repository $Repository -RequiredVersion $tVer){
            $thisvers  | ft -a Name,Version,Repository ;
            $thisVers | install-Module -scope $tScop -Force -AllowClobber -ea 'STOP' -whatif:$($whatif) ;
        }else {
            throw "Unable to:find-module -name $($tmod) -Repository $($Repository) -RequiredVersion $($tVer)"
            break ;
        } ;
        rmo -Name $tmod -force -ea 0 ;
        ipmo -name $tmod -force -verbose -ea 'STOP'  ;
        gmo -name $tmod | ? version -ne $tVer | rmo -Force -Verbose ;
        gmo -name $tmod -list ;
    } else {
        throw "Unable to resolve `lyncRepo to a configured local PSRepository" ;
    } ;
} CATCH {
    $ErrTrapd=$Error[0] ;
    $smsg = "
$(($ErrTrapd | fl * -Force|out-string).trim())" ;
    write-warning "$((get-date).ToString('HH:mm:ss')):$($smsg)" ;
} ;
#-=-=-=-=-=-=-=-=
#-=-=-Stacked list for the above: ALLUSERS=-=-=-=-=-=
$whatif=$false ; $tScop = 'AllUsers' ; $tMod = 'verb-Exo' ; $tVer = '8.1.1' ;
if($env:WT_SESSION){
    write-warning "WARNING YOU'RE INSTALLING INTO POWERSHELL7!
THE MODULE WILL GO INTO \DOCS\POWERSHELL\MODULES
(vs \DOCS\WINDOWSPOWERSHELL\MODULES)!" ;
    $bRet=Read-Host "Enter YYY to continue. Anything else will exit"  ;
    if ($bRet.ToUpper() -eq "YYY") {} else {WRITE-WARNING "HALTING!" ; BREAK} ;
} ;
TRY {
    switch($tScop){
        'CurrentUser'{$ModPath = "$(split-path $profile)\Modules\$($tmod)" }
        'AllUsers' {$ModPath = "$($env:ProgramFiles)\WindowsPowerShell\Modules)\$($tmod)"} ;
    } ;
    if($Repository = (Get-PSRepository -Name $localPSRepo -ea 'STOP').name){
        rmo -Name $tmod -ea 0 ;
        Uninstall-Module -Name $tmod -AllVersion -force -ea 0 -whatif:$($whatif);
        gi -path $ModPath -ea 0 |ri -Recurse -force -verbose  -whatif:$($whatif) ;
        if($thisVers = find-module -name $tmod -Repository $Repository -RequiredVersion $tVer){
            $thisvers  | ft -a Name,Version,Repository ;
            $thisVers | install-Module -scope $tScop -Force -AllowClobber -ea 'STOP' -whatif:$($whatif) ;
        }else {
            throw "Unable to:find-module -name $($tmod) -Repository $($Repository) -RequiredVersion $($tVer)"
            break ;
        } ;
        rmo -Name $tmod -force -ea 0 ;
        ipmo -name $tmod -force -verbose -ea 'STOP'  ;
        gmo -name $tmod | ? version -ne $tVer | rmo -Force -Verbose ;
        gmo -name $tmod -list ;
    } else {
        throw "Unable to resolve `lyncRepo to a configured local PSRepository" ;
    } ;
} CATCH {
    $ErrTrapd=$Error[0] ;
    $smsg = "
$(($ErrTrapd | fl * -Force|out-string).trim())" ;
    write-warning "$((get-date).ToString('HH:mm:ss')):$($smsg)" ;
} ;
#-=-=-=-=-=-=-=-=

- You may also want to run the configured Pester Tests of the new script:

        . c:\sc\verb-Exo\Tests\verb-Exo.tests.ps1

Full Processing Details can be found in:

C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-Exo-LOG-BATCH-EXEC-20240923-1617PM-log.txt

---------------------------------------------------------------------------------

2024-09-23 16:20:11 INFO:  :
(Most recent processing log can be found at:c:\sc\verb-Exo\VERB-dev-verb-Exo-LOG-BATCH-EXEC-20240923-1617PM-log.txt)
(perm copy stored at:C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-Exo-LOG-BATCH-EXEC-20240923-1617PM-log.txt
2024-09-23 16:20:11 INFO:  : remove-UnneededFileVariants w
Name                           Value
----                           -----
Path                           c:\sc\verb-Exo
Include                        VERB-dev-verb-Exo-LOG-BATCH-*-log.txt
Pattern
FilterOn                       CreationTime
Keep                           2
KeepToday                      True
verbose                        True
whatif                         False
2024-09-23 16:20:11 INFO:  : #*======^ VERB-dev.psm1:verb-Exo ^======

▒
▒
▒
░
░

LYN-9C5CTV3
 ▓▒▓
TORO\kadritss
 ▓▒▓
Mon 09/23/2024 16:21
 [91ms]

▒
▒
▒
▒
▒

[PS]
:
C:\u\w\p\scripts

$




PS>ipmo -fo -verb verb-exo
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-exo\8.1.1\verb-exo.psd1'.
VERBOSE: Removing the imported "resolve-AppIDToCBAFriendlyName" function.
VERBOSE: Removing the imported "test-xoMailbox" function.
VERBOSE: Removing the imported "test-EXOv2Connection" function.
VERBOSE: Removing the imported "test-EXOIsLicensed" function.
VERBOSE: Removing the imported "test-ExoDnsRecordTDO" function.
VERBOSE: Removing the imported "test-EXOConnectionTDO" function.
VERBOSE: Removing the imported "rxoTOR" function.
VERBOSE: Removing the imported "rxoTOL" function.
VERBOSE: Removing the imported "Resolve-xoRcps" function.
VERBOSE: Removing the imported "resolve-Name" function.
VERBOSE: Removing the imported "Reset-xoMailboxFolderPermissionsRecursive" function.
VERBOSE: Removing the imported "remove-EXOLicense" function.
VERBOSE: Removing the imported "Reconnect-EXO" function.
VERBOSE: Removing the imported "new-xoDGFromProperty" function.
VERBOSE: Removing the imported "new-DgTor" function.
VERBOSE: Removing the imported "move-MailboxToXo" function.
VERBOSE: Removing the imported "get-XOMailboxFolderPermissionsSummary" function.
VERBOSE: Removing the imported "Get-xoMailboxFolderPermissionsRecursive" function.
VERBOSE: Removing the imported "get-XOMailboxFolderList" function.
VERBOSE: Removing the imported "get-xoHistSearch" function.
VERBOSE: Removing the imported "Get-OrgNameFromUPN" function.
VERBOSE: Removing the imported "get-MsgTrace" function.
VERBOSE: Removing the imported "get-MailboxFolderStats" function.
VERBOSE: Removing the imported "get-EXOMsgTraceDetailed" function.
VERBOSE: Removing the imported "get-ExoMessageTraceSourceType" function.
VERBOSE: Removing the imported "get-ExoMessageTraceEventType" function.
VERBOSE: Removing the imported "get-ExoMailboxLicenses" function.
VERBOSE: Removing the imported "get-ExoGxMTEventType" function.
VERBOSE: Removing the imported "get-ADUsersWithSoftDeletedxoMailboxes" function.
VERBOSE: Removing the imported "Disconnect-EXO" function.
VERBOSE: Removing the imported "cxoTOR" function.
VERBOSE: Removing the imported "cxoTOL" function.
VERBOSE: Removing the imported "copy-XPermissionGroupToCloudOnly" function.
VERBOSE: Removing the imported "convert-HistoricalSearchCSV" function.
VERBOSE: Removing the imported "convert-exoMailboxTypeUserMailbox" function.
VERBOSE: Removing the imported "convert-exoMailboxTypeSharedMailbox" function.
VERBOSE: Removing the imported "convert-ADUserRecipientTypeRemoteUserMailbox" function.
VERBOSE: Removing the imported "convert-ADUserRecipientTypeRemoteSharedMailbox" function.
VERBOSE: Removing the imported "Connect-EXO" function.
VERBOSE: Removing the imported "check-EXOLegalHold" function.
VERBOSE: Removing the imported "add-EXOLicense" function.
VERBOSE: Removing the imported "get-AADlicensePlanList" function.
VERBOSE: Removing the imported "resolve-user" function.
VERBOSE: Removing the imported "txo" alias.
VERBOSE: Removing the imported "rxo2" alias.
VERBOSE: Removing the imported "rxo" alias.
VERBOSE: Removing the imported "revert-xoUserMbx" alias.
VERBOSE: Removing the imported "revert-ADuserRecipientType" alias.
VERBOSE: Removing the imported "ReturnFolderList" alias.
VERBOSE: Removing the imported "reconnect-exo2" alias.
VERBOSE: Removing the imported "nlu" alias.
VERBOSE: Removing the imported "GetFolderPermissions" alias.
VERBOSE: Removing the imported "Get-MailboxFolderPermissionsRecursive" alias.
VERBOSE: Removing the imported "dxo2" alias.
VERBOSE: Removing the imported "dxo" alias.
VERBOSE: Removing the imported "Disconnect-EXO2" alias.
VERBOSE: Removing the imported "cxo2TOR" alias.
VERBOSE: Removing the imported "cxo2TOL" alias.
VERBOSE: Removing the imported "cxo2cmw" alias.
VERBOSE: Removing the imported "cxo2" alias.
VERBOSE: Removing the imported "cxo" alias.
VERBOSE: Removing the imported "convertfrom-HistoricalSearch" alias.
VERBOSE: Removing the imported "convert-xoShared" alias.
VERBOSE: Removing the imported "convert-ADUserRecipientType" alias.
VERBOSE: Removing the imported "Connect-EXO2" alias.
VERBOSE: Removing the imported "ulu" alias.
VERBOSE: Populating RepositorySourceLocation property for module verb-exo.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-exo\8.1.1\verb-EXO.psm1'.
VERBOSE: Importing function 'add-EXOLicense'.
WARNING: The names of some imported commands from the module 'verb-exo' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'check-EXOLegalHold' command in the verb-exo' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'check-EXOLegalHold'.
VERBOSE: Importing function 'Connect-EXO'.
VERBOSE: Importing function 'convert-ADUserRecipientTypeRemoteSharedMailbox'.
VERBOSE: Importing function 'convert-ADUserRecipientTypeRemoteUserMailbox'.
VERBOSE: Importing function 'convert-exoMailboxTypeSharedMailbox'.
VERBOSE: Importing function 'convert-exoMailboxTypeUserMailbox'.
VERBOSE: Importing function 'convert-HistoricalSearchCSV'.
VERBOSE: Importing function 'copy-XPermissionGroupToCloudOnly'.
VERBOSE: Importing function 'cxoTOL'.
VERBOSE: Importing function 'cxoTOR'.
VERBOSE: Importing function 'Disconnect-EXO'.
VERBOSE: Importing function 'get-AADlicensePlanList'.
VERBOSE: Importing function 'get-ADUsersWithSoftDeletedxoMailboxes'.
VERBOSE: Importing function 'get-ExoGxMTEventType'.
VERBOSE: Importing function 'get-ExoMailboxLicenses'.
VERBOSE: Importing function 'get-ExoMessageTraceEventType'.
VERBOSE: Importing function 'get-ExoMessageTraceSourceType'.
VERBOSE: Importing function 'get-EXOMsgTraceDetailed'.
VERBOSE: Importing function 'get-MailboxFolderStats'.
VERBOSE: Importing function 'get-MsgTrace'.
VERBOSE: Importing function 'Get-OrgNameFromUPN'.
VERBOSE: Importing function 'get-xoHistSearch'.
VERBOSE: Importing function 'get-XOMailboxFolderList'.
VERBOSE: Importing function 'Get-xoMailboxFolderPermissionsRecursive'.
VERBOSE: Importing function 'get-XOMailboxFolderPermissionsSummary'.
VERBOSE: Importing function 'move-MailboxToXo'.
VERBOSE: Importing function 'new-DgTor'.
VERBOSE: Importing function 'new-xoDGFromProperty'.
VERBOSE: The 'Reconnect-EXO' command in the verb-exo' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Reconnect-EXO'.
VERBOSE: Importing function 'remove-EXOLicense'.
VERBOSE: Importing function 'Reset-xoMailboxFolderPermissionsRecursive'.
VERBOSE: Importing function 'resolve-AppIDToCBAFriendlyName'.
VERBOSE: Importing function 'resolve-Name'.
VERBOSE: Importing function 'resolve-user'.
VERBOSE: Importing function 'Resolve-xoRcps'.
VERBOSE: Importing function 'rxoTOL'.
VERBOSE: Importing function 'rxoTOR'.
VERBOSE: Importing function 'test-EXOConnectionTDO'.
VERBOSE: Importing function 'test-EXOIsLicensed'.
VERBOSE: Importing function 'test-EXOv2Connection'.
VERBOSE: Importing function 'test-xoMailbox'.
VERBOSE: Importing alias 'Connect-EXO2'.
VERBOSE: Importing alias 'convert-ADUserRecipientType'.
VERBOSE: Importing alias 'convert-xoShared'.
VERBOSE: Importing alias 'convertfrom-HistoricalSearch'.
VERBOSE: Importing alias 'cxo'.
VERBOSE: Importing alias 'cxo2'.
VERBOSE: Importing alias 'cxo2cmw'.
VERBOSE: Importing alias 'cxo2TOL'.
VERBOSE: Importing alias 'cxo2TOR'.
VERBOSE: Importing alias 'Disconnect-EXO2'.
VERBOSE: Importing alias 'dxo'.
VERBOSE: Importing alias 'dxo2'.
VERBOSE: Importing alias 'Get-MailboxFolderPermissionsRecursive'.
VERBOSE: Importing alias 'GetFolderPermissions'.
VERBOSE: Importing alias 'nlu'.
VERBOSE: Importing alias 'reconnect-exo2'.
VERBOSE: Importing alias 'ReturnFolderList'.
VERBOSE: Importing alias 'revert-ADuserRecipientType'.
VERBOSE: Importing alias 'revert-xoUserMbx'.
VERBOSE: Importing alias 'rxo'.
VERBOSE: Importing alias 'rxo2'.
VERBOSE: Importing alias 'txo'.
VERBOSE: Importing alias 'ulu'.

▒
▒
▒
░
░

LYN-9C5CTV3
 ▓▒▓
TORO\kadritss
 ▓▒▓
Mon 09/23/2024 16:21
 [834ms]

▒
▒
▒
▒
▒

[PS]
:
C:\u\w\p\scripts

$




