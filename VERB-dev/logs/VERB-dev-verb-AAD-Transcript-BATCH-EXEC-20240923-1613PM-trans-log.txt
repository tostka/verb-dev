**********************
Windows PowerShell transcript start
Start time: 20240923161347
Username: TORO\kadritss
RunAs User: TORO\kadritss
Configuration Name: 
Machine: LYN-9C5CTV3 (Microsoft Windows NT 10.0.19045.0)
Host Application: C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe
Process ID: 10896
PSVersion: 5.1.19041.4894
PSEdition: Desktop
PSCompatibleVersions: 1.0, 2.0, 3.0, 4.0, 5.0, 5.1.19041.4894
Platform: Win32NT
BuildVersion: 10.0.19041.4894
CLRVersion: 4.0.30319.42000
WSManStackVersion: 3.0
OS: Microsoft Windows NT 10.0.19045.0
PSRemotingProtocolVersion: 2.3
SerializationVersion: 1.1.0.1
**********************
Transcript started, output file is C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-AAD-Transcript-BATCH-EXEC-20240923-1613PM-trans-log.txt
16:13:47: INFO:  #*======v VERB-dev.psm1:verb-AAD v======
16:13:47: VERBOSE:  ($modRoot is blank, assigning from mandetory param:$ModDirPath)
16:13:47:(executing:Get-BuildEnvironment -Path c:\sc\verb-AAD 
(use -NoBuildInfo if hangs))
16:13:47: INFO:  Run: reset-ModulePublishingDirectory -ModuleName verb-AAD
VERBOSE: $PSBoundParameters:
Key        Value   
---        -----   
ModuleName verb-AAD
whatIf     False   
Verbose    True
16:13:47: ##  
#*------v PROCESSING : verb-AAD v------
16:13:47: INFO:  Pre-purge (CHANGELOG|README)\.md$ Root dir matches from :
processing:Resource...
16:13:47: INFO:  verb-AAD resolved $ModPubPath:C:\sc\verb-AAD\verb-AAD\
$ModResPath:C:\sc\verb-AAD\Resource\
16:13:47: VERBOSE:  (Reset module Resource files (purge from C:\sc\verb-AAD\verb-AAD\))
processing:Licenses...
16:13:47: INFO:  verb-AAD resolved $ModPubPath:C:\sc\verb-AAD\verb-AAD\
$ModResPath:C:\sc\verb-AAD\Licenses\
16:13:47: VERBOSE:  (Reset module Licenses files (purge from C:\sc\verb-AAD\verb-AAD\))
processing:Docs...
16:13:47: INFO:  verb-AAD resolved $ModPubPath:C:\sc\verb-AAD\verb-AAD\
$ModResPath:C:\sc\verb-AAD\Docs\
16:13:47: VERBOSE:  (Reset module Docs files (purge from C:\sc\verb-AAD\verb-AAD\))
16:13:47: INFO:  ==C:\sc\verb-AAD\CHANGELOG.md:
WARNING: removing matched C:\sc\verb-AAD\verb-AAD\CHANGELOG.md...
VERBOSE: Performing the operation "Remove File" on target "C:\sc\verb-AAD\verb-AAD\CHANGELOG.md".
16:13:47: INFO:  ==C:\sc\verb-AAD\README.md:
WARNING: removing matched C:\sc\verb-AAD\verb-AAD\README.md...
VERBOSE: Performing the operation "Remove File" on target "C:\sc\verb-AAD\verb-AAD\README.md".
16:13:47: INFO:  ==C:\sc\verb-AAD\Docs\Quick-Start-Installation-and-Example.md:
WARNING: removing matched C:\sc\verb-AAD\verb-AAD\Quick-Start-Installation-and-Example.md...
VERBOSE: Performing the operation "Remove File" on target "C:\sc\verb-AAD\verb-AAD\Quick-Start-Installation-and-Example.md".
16:13:47: ##  
#*------^ PROCESSING : verb-AAD ^------
16:13:47: INFO:  Run: populate-ModulePublishingDirectory -ModuleName verb-AAD
VERBOSE: $PSBoundParameters:
Key        Value   
---        -----   
ModuleName verb-AAD
whatIf     False   
Verbose    True
16:13:47: ##  
#*------v PROCESSING : verb-AAD v------
16:13:47: INFO:  Locating (CHANGELOG|README)\.md$ Root dir matches from :
processing:Resource...
16:13:47: INFO:  verb-AAD resolved $ModPubPath:C:\sc\verb-AAD\verb-AAD\
$ModResPath:C:\sc\verb-AAD\Resource\
16:13:47: VERBOSE:  (Recopy module Resource files (copy from C:\sc\verb-AAD\verb-AAD\))
processing:Licenses...
16:13:47: INFO:  verb-AAD resolved $ModPubPath:C:\sc\verb-AAD\verb-AAD\
$ModResPath:C:\sc\verb-AAD\Licenses\
16:13:47: VERBOSE:  (Recopy module Licenses files (copy from C:\sc\verb-AAD\verb-AAD\))
processing:Docs...
16:13:47: INFO:  verb-AAD resolved $ModPubPath:C:\sc\verb-AAD\verb-AAD\
$ModResPath:C:\sc\verb-AAD\Docs\
16:13:47: VERBOSE:  (Recopy module Docs files (copy from C:\sc\verb-AAD\verb-AAD\))
16:13:47: INFO:  copy-item w
Name                           Value                                                                                        
----                           -----                                                                                        
path                           {C:\sc\verb-AAD\CHANGELOG.md, C:\sc\verb-AAD\README.md, C:\sc\verb-AAD\Docs\Quick-Start-In...
destination                    C:\sc\verb-AAD\verb-AAD\                                                                     
force                          True                                                                                         
erroraction                    STOP                                                                                         
verbose                        True                                                                                         
whatif                         False
--$pltCI.path:
C:\sc\verb-AAD\CHANGELOG.md
C:\sc\verb-AAD\README.md
C:\sc\verb-AAD\Docs\Quick-Start-Installation-and-Example.md
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-AAD\CHANGELOG.md Destination: C:\sc\verb-AAD\verb-AAD\CHANGELOG.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-AAD\README.md Destination: C:\sc\verb-AAD\verb-AAD\README.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-AAD\Docs\Quick-Start-Installation-and-Example.md Destination: C:\sc\verb-AAD\verb-AAD\Quick-Start-Installation-and-Example.md".
16:13:47: ##  
#*------^ PROCESSING : verb-AAD ^------
16:13:47: INFO:  Validate updated verb-AAD\verb-AAD dir contents against Manifest:
Run: test-modulemanifest -Path C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
VERBOSE: Loading module from path 'C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1'.
16:13:47: VERBOSE:  ((no $ttmm_Err: test-ModuleManifest had no errors))
16:13:47: INFO:  NON-Republish pass detected:
MERGE parm specified as well:`n-Merge Public|Internal|Classes include subdirs module content into updated .psm1
-Sign updated files.
-Uninstall/Remove existing profile module
-Copy new module to profile
-Confirm: Get-Module -ListAvailable
-Check/Update existing Psd1 Version
-Publish-Module
-Remove existing installed profile module
-Test Install-Module
-Test Import-Module
16:13:47: INFO:  -Merge specified...
16:13:47: INFO:  ConvertTo-ModuleMergedTDO w
Name                           Value                                                                                        
----                           -----                                                                                        
ModuleName                     verb-AAD                                                                                     
ModuleSourcePath               {c:\sc\verb-AAD\Public, c:\sc\verb-AAD\Internal}                                             
ModuleDestinationPath          c:\sc\verb-AAD\verb-AAD                                                                      
RequiredVersion                5.2.1                                                                                        
LogSpec                        {logging, logfile, transcript}                                                               
NoAliasExport                                                                                                               
ErrorAction                    Stop                                                                                         
showdebug                      False                                                                                        
whatif                         False
VERBOSE: $PSBoundParameters:
Key                   Value                                           
---                   -----                                           
ModuleName            verb-AAD                                        
ModuleSourcePath      {c:\sc\verb-AAD\Public, c:\sc\verb-AAD\Internal}
ModuleDestinationPath c:\sc\verb-AAD\verb-AAD                         
RequiredVersion       5.2.1                                           
LogSpec               {logging, logfile, transcript}                  
NoAliasExport         False                                           
ErrorAction           Stop                                            
showDebug             False                                           
whatIf                False
16:13:47: INFO:  ConvertTo-ModuleMergedTDO w
Name                           Value                                                                                        
----                           -----                                                                                        
ModuleName                     verb-AAD                                                                                     
ModuleSourcePath               {c:\sc\verb-AAD\Public, c:\sc\verb-AAD\Internal}                                             
ModuleDestinationPath          c:\sc\verb-AAD\verb-AAD                                                                      
RequiredVersion                5.2.1                                                                                        
LogSpec                        {logging, logfile, transcript}                                                               
NoAliasExport                                                                                                               
ErrorAction                    Stop                                                                                         
showdebug                      False                                                                                        
whatif                         False
VERBOSE: (backup-FileTDO -path c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1)
VERBOSE: (backup-FileTDO -path c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1)
DEADWOOD REMOVAL:remove-UnneededFileVariants w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-AAD\verb-AAD                                                                      
Include                        verb-AAD.psm1_*                                                                              
Pattern                        \.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$                                                              
FilterOn                       CreationTime                                                                                 
Keep                           2                                                                                            
KeepToday                      True                                                                                         
verbose                        True                                                                                         
whatif                         False
16:13:48:gci w
Name                           Value                                                                                        
----                           -----                                                                                        
path                           c:\sc\verb-AAD\verb-AAD\*                                                                    
include                        verb-AAD.psm1_*                                                                              
ErrorAction                    Stop
VERBOSE: $cuttime:09/23/2024 00:00:00
VERBOSE: post-filtering on pattern:\.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$
(5 in set *before* filtering)
(4 in set *after* filtering)
VERBOSE: filtering on files prior to $cuttime:09/23/2024 00:00:00 AM, on CreationTime property
(4 in set *before* filtering)
(3 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(3 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
16:13:48:Reducing matched population from 5 to 1 files via:
post-filtered files with regex pattern:\.ps(m|d)1_\d{8}-\d{3,4}(A|P)M$
filtered files on CreationTime prior to 09/23/2024 00:00:00 AM
16:13:48:Remove-Item w 
Name                           Value                                                                                        
----                           -----                                                                                        
path                           C:\sc\verb-AAD\verb-AAD\verb-aad.psm1_20230626-1425PM                                        
ErrorAction                    STOP                                                                                         
whatif                         False
16:13:48: INFO:  (NON-dyn psm1 detected - purging existing non-CBH content...)
VERBOSE: L16:13:48:(doesn't appear to be an inter meta-CBH block)
VERBOSE: adding $PostCBHBlock
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Value    {# verb-AAD.psm1...                                                                                                
Path     c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                                          
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False
VERBOSE: 16:13:48:(Set-ContentFixEncoding:c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP)
VERBOSE: 16:13:48:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
PassThru                       True                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
encoding                       UTF8                                                                                         
ErrorAction                    STOP
-Value[0,2]:
# verb-AAD.psm1
<#
16:13:48: INFO:  Initialize-PSModuleDirectories w
Name                           Value                                                                                        
----                           -----                                                                                        
ModuleSourcePath               {c:\sc\verb-AAD\Public, c:\sc\verb-AAD\Internal}                                             
ModuleDestinationPath          c:\sc\verb-AAD\verb-AAD                                                                      
ErrorAction                    Stop                                                                                         
whatif                         False
VERBOSE: $PSBoundParameters:
Key                   Value                                           
---                   -----                                           
ModuleSourcePath      {c:\sc\verb-AAD\Public, c:\sc\verb-AAD\Internal}
ModuleDestinationPath c:\sc\verb-AAD\verb-AAD                         
ErrorAction           Stop                                            
whatIf                False
VERBOSE: (non-pipeline - param - input)
16:13:48: INFO:  
#*------v (1/2):C:\sc\verb-AAD\Public v------
16:13:48: INFO:  Processing 54 $ComponentScripts files through Remove-AuthenticodeSignature...
16:13:48: INFO:  Remove-AuthenticodeSignature w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           {C:\sc\verb-AAD\Public\add-AADUserLicense.ps1, C:\sc\verb-AAD\Public\Add-ADALType.ps1, C:\...
whatif                         False                                                                                        
verbose                        True
VERBOSE: 16:13:48:((1/54):C:\sc\verb-AAD\Public\add-AADUserLicense.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((2/54):C:\sc\verb-AAD\Public\Add-ADALType.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((3/54):C:\sc\verb-AAD\Public\caadCMW.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((4/54):C:\sc\verb-AAD\Public\caadTOL.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((5/54):C:\sc\verb-AAD\Public\caadTOR.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((6/54):C:\sc\verb-AAD\Public\caadVEN.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((7/54):C:\sc\verb-AAD\Public\cmsolCMW.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((8/54):C:\sc\verb-AAD\Public\cmsolTOL.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((9/54):C:\sc\verb-AAD\Public\cmsolTOR.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((10/54):C:\sc\verb-AAD\Public\cmsolVEN.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((11/54):C:\sc\verb-AAD\Public\Connect-AAD.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((12/54):C:\sc\verb-AAD\Public\connect-AzureRM.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((13/54):C:\sc\verb-AAD\Public\Connect-MSOL.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((14/54):C:\sc\verb-AAD\Public\convert-AADUImmuntableIDToADUObjectGUID.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((15/54):C:\sc\verb-AAD\Public\convert-ADUObjectGUIDToAADUImmuntableID.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((16/54):C:\sc\verb-AAD\Public\Disconnect-AAD.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((17/54):C:\sc\verb-AAD\Public\get-AADBearerToken.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((18/54):C:\sc\verb-AAD\Public\get-AADBearerTokenHeaders.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((19/54):C:\sc\verb-AAD\Public\get-AADCertToken.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((20/54):C:\sc\verb-AAD\Public\get-AADLastSync.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((21/54):C:\sc\verb-AAD\Public\get-AADLicenseFullName.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((22/54):C:\sc\verb-AAD\Public\get-AADlicensePlanList.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((23/54):C:\sc\verb-AAD\Public\get-AADToken.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((24/54):C:\sc\verb-AAD\Public\get-AADTokenHeaders.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((25/54):C:\sc\verb-AAD\Public\get-AADUser.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((26/54):C:\sc\verb-AAD\Public\get-AADUserLastSync.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((27/54):C:\sc\verb-AAD\Public\get-AADUserLicenseDetails.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((28/54):C:\sc\verb-AAD\Public\Get-DsRegStatus .ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((29/54):C:\sc\verb-AAD\Public\Get-JWTDetails.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((30/54):C:\sc\verb-AAD\Public\Get-MsolDisabledPlansForSKU.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((31/54):C:\sc\verb-AAD\Public\Get-MsolUnexpectedEnabledPlansForUser.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((32/54):C:\sc\verb-AAD\Public\Get-MsolUserLicense.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((33/54):C:\sc\verb-AAD\Public\get-MsolUserLicenseDetails.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((34/54):C:\sc\verb-AAD\Public\Get-ServiceToken.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((35/54):C:\sc\verb-AAD\Public\Get-TokenCache.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((36/54):C:\sc\verb-AAD\Public\import-AADAppRegistrationPFX.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((37/54):C:\sc\verb-AAD\Public\Initialize-AADSignErrorsHash.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((38/54):C:\sc\verb-AAD\Public\New-AADAppAuthCertificate.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((39/54):C:\sc\verb-AAD\Public\New-AADAppPermissionsObject.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((40/54):C:\sc\verb-AAD\Public\profile-AAD-Signons.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((41/54):C:\sc\verb-AAD\Public\Remove-AADAppRegistrationCBAAuth.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((42/54):C:\sc\verb-AAD\Public\remove-AADUserLicense.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((43/54):C:\sc\verb-AAD\Public\Remove-MsolUserDirectLicenses.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((44/54):C:\sc\verb-AAD\Public\resolve-GuestExternalAddr2UPN.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((45/54):C:\sc\verb-AAD\Public\search-AADSignInReports.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((46/54):C:\sc\verb-AAD\Public\search-GraphApiAAD.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((47/54):C:\sc\verb-AAD\Public\set-AADUserUsageLocation.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((48/54):C:\sc\verb-AAD\Public\test-AADUserIsLicensed.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((49/54):C:\sc\verb-AAD\Public\test-AzureADSessionIsGlobalAdmin.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((50/54):C:\sc\verb-AAD\Public\test-MsolUserLicenseDirectAssigned.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((51/54):C:\sc\verb-AAD\Public\test-MsolUserLicenseGroupAssigned.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((52/54):C:\sc\verb-AAD\Public\toggle-AADLicense.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((53/54):C:\sc\verb-AAD\Public\Update-AADAppRegistrationKeyCertificate.ps1:has no existing Authenticode signature)
VERBOSE: 16:13:48:((54/54):C:\sc\verb-AAD\Public\Wait-AADSync.ps1:has no existing Authenticode signature)
16:13:48: INFO:  Processing (1/54):C:\sc\verb-AAD\Public\add-AADUserLicense.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:48:(Add-ContentFixEncoding:)
VERBOSE: 16:13:48:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v add-AADUserLicense.ps1 v------
function add-AADUserLicense {
16:13:48: INFO:  Processing (2/54):C:\sc\verb-AAD\Public\Add-ADALType.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:48:(Add-ContentFixEncoding:)
VERBOSE: 16:13:48:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Add-ADALType.ps1 v------
function Add-ADALType {
16:13:48: INFO:  Processing (3/54):C:\sc\verb-AAD\Public\caadCMW.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:48:(Add-ContentFixEncoding:)
VERBOSE: 16:13:48:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v caadCMW.ps1 v------
function caadCMW {Connect-AAD -cred $credO365CMWCSID -Verbose:($VerbosePreference -eq 'Continue') ; }
16:13:48: INFO:  Processing (4/54):C:\sc\verb-AAD\Public\caadTOL.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:48:(Add-ContentFixEncoding:)
VERBOSE: 16:13:48:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v caadTOL.ps1 v------
function caadtol {Connect-AAD -cred $credO365TOLSID -Verbose:($VerbosePreference -eq 'Continue') ; }
16:13:48: INFO:  Processing (5/54):C:\sc\verb-AAD\Public\caadTOR.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:48:(Add-ContentFixEncoding:)
VERBOSE: 16:13:48:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v caadTOR.ps1 v------
function caadTOR {Connect-AAD -cred $credO365TORSID -Verbose:($VerbosePreference -eq 'Continue') ; }
16:13:48: INFO:  Processing (6/54):C:\sc\verb-AAD\Public\caadVEN.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:48:(Add-ContentFixEncoding:)
VERBOSE: 16:13:48:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v caadVEN.ps1 v------
function caadVEN {Connect-AAD -cred $credO365VENCSID -Verbose:($VerbosePreference -eq 'Continue') ; }
16:13:48: INFO:  Processing (7/54):C:\sc\verb-AAD\Public\cmsolCMW.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:48:(Add-ContentFixEncoding:)
VERBOSE: 16:13:48:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v cmsolCMW.ps1 v------
function cmsolcmw {Connect-MSOL -cred $credO365CMWCSID -Verbose:($VerbosePreference -eq 'Continue') ; }
16:13:48: INFO:  Processing (8/54):C:\sc\verb-AAD\Public\cmsolTOL.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:48:(Add-ContentFixEncoding:)
VERBOSE: 16:13:48:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v cmsolTOL.ps1 v------
function cmsolTOL {Connect-MSOL -cred $credO365TOLSID -Verbose:($VerbosePreference -eq 'Continue') ; }
16:13:48: INFO:  Processing (9/54):C:\sc\verb-AAD\Public\cmsolTOR.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:48:(Add-ContentFixEncoding:)
VERBOSE: 16:13:48:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v cmsolTOR.ps1 v------
function cmsolTOR {Connect-MSOL -cred $credO365TORSID -Verbose:($VerbosePreference -eq 'Continue') ; }
16:13:48: INFO:  Processing (10/54):C:\sc\verb-AAD\Public\cmsolVEN.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:48:(Add-ContentFixEncoding:)
VERBOSE: 16:13:48:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v cmsolVEN.ps1 v------
function cmsolVEN {Connect-MSOL -cred $credO365VENCSID -Verbose:($VerbosePreference -eq 'Continue') ; }
16:13:48: INFO:  Processing (11/54):C:\sc\verb-AAD\Public\Connect-AAD.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:48:(Add-ContentFixEncoding:)
VERBOSE: 16:13:48:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Connect-AAD.ps1 v------
Function Connect-AAD {
16:13:49: INFO:  Processing (12/54):C:\sc\verb-AAD\Public\connect-AzureRM.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v connect-AzureRM.ps1 v------
function connect-AzureRM {
16:13:49: INFO:  Processing (13/54):C:\sc\verb-AAD\Public\Connect-MSOL.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Connect-MSOL.ps1 v------
Function Connect-MSOL {
16:13:49: INFO:  Processing (14/54):C:\sc\verb-AAD\Public\convert-AADUImmuntableIDToADUObjectGUID.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-AADUImmuntableIDToADUObjectGUID.ps1 v------
Function convert-AADUImmuntableIDToADUObjectGUID {
16:13:49: INFO:  Processing (15/54):C:\sc\verb-AAD\Public\convert-ADUObjectGUIDToAADUImmuntableID.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v convert-ADUObjectGUIDToAADUImmuntableID.ps1 v------
Function convert-ADUObjectGUIDToAADUImmuntableID {
16:13:49: INFO:  Processing (16/54):C:\sc\verb-AAD\Public\Disconnect-AAD.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Disconnect-AAD.ps1 v------
Function Disconnect-AAD {
16:13:49: INFO:  Processing (17/54):C:\sc\verb-AAD\Public\get-AADBearerToken.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-AADBearerToken.ps1 v------
function get-AADBearerToken {
16:13:49: INFO:  Processing (18/54):C:\sc\verb-AAD\Public\get-AADBearerTokenHeaders.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-AADBearerTokenHeaders.ps1 v------
Function get-AADBearerTokenHeaders {
16:13:49: INFO:  Processing (19/54):C:\sc\verb-AAD\Public\get-AADCertToken.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-AADCertToken.ps1 v------
function get-AADCertToken {
16:13:49: INFO:  Processing (20/54):C:\sc\verb-AAD\Public\get-AADLastSync.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-AADLastSync.ps1 v------
Function get-AADLastSync {
16:13:49: INFO:  Processing (21/54):C:\sc\verb-AAD\Public\get-AADLicenseFullName.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-AADLicenseFullName.ps1 v------
function get-AADLicenseFullName {
16:13:49: INFO:  Processing (22/54):C:\sc\verb-AAD\Public\get-AADlicensePlanList.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-AADlicensePlanList.ps1 v------
function get-AADlicensePlanList {
16:13:49: INFO:  Processing (23/54):C:\sc\verb-AAD\Public\get-AADToken.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-AADToken.ps1 v------
function get-AADToken {
16:13:49: INFO:  Processing (24/54):C:\sc\verb-AAD\Public\get-AADTokenHeaders.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-AADTokenHeaders.ps1 v------
Function get-AADTokenHeaders {
16:13:49: INFO:  Processing (25/54):C:\sc\verb-AAD\Public\get-AADUser.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-AADUser.ps1 v------
function get-aaduser {
16:13:49: INFO:  Processing (26/54):C:\sc\verb-AAD\Public\get-AADUserLastSync.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-AADUserLastSync.ps1 v------
Function get-AADUserLastSync {
16:13:49: INFO:  Processing (27/54):C:\sc\verb-AAD\Public\get-AADUserLicenseDetails.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-AADUserLicenseDetails.ps1 v------
Function get-AADUserLicenseDetails {
16:13:49: INFO:  Processing (28/54):C:\sc\verb-AAD\Public\Get-DsRegStatus .ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-DsRegStatus .ps1 v------
function Get-DsRegStatus {
16:13:49: INFO:  Processing (29/54):C:\sc\verb-AAD\Public\Get-JWTDetails.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-JWTDetails.ps1 v------
function Get-JWTDetails {
16:13:49: INFO:  Processing (30/54):C:\sc\verb-AAD\Public\Get-MsolDisabledPlansForSKU.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-MsolDisabledPlansForSKU.ps1 v------
Function Get-MsolDisabledPlansForSKU {
16:13:49: INFO:  Processing (31/54):C:\sc\verb-AAD\Public\Get-MsolUnexpectedEnabledPlansForUser.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-MsolUnexpectedEnabledPlansForUser.ps1 v------
Function Get-MsolUnexpectedEnabledPlansForUser {
16:13:49: INFO:  Processing (32/54):C:\sc\verb-AAD\Public\Get-MsolUserLicense.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-MsolUserLicense.ps1 v------
Function Get-MsolUserLicense {
16:13:49: INFO:  Processing (33/54):C:\sc\verb-AAD\Public\get-MsolUserLicenseDetails.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v get-MsolUserLicenseDetails.ps1 v------
Function get-MsolUserLicenseDetails {
16:13:49: INFO:  Processing (34/54):C:\sc\verb-AAD\Public\Get-ServiceToken.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-ServiceToken.ps1 v------
function Get-ServiceToken {
16:13:49: INFO:  Processing (35/54):C:\sc\verb-AAD\Public\Get-TokenCache.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Get-TokenCache.ps1 v------
function Get-TokenCache {
16:13:49: INFO:  Processing (36/54):C:\sc\verb-AAD\Public\import-AADAppRegistrationPFX.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v import-AADAppRegistrationPFX.ps1 v------
function import-AADAppRegistrationPFX {
16:13:49: INFO:  Processing (37/54):C:\sc\verb-AAD\Public\Initialize-AADSignErrorsHash.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Initialize-AADSignErrorsHash.ps1 v------
function Initialize-AADSignErrorsHash {
16:13:49: INFO:  Processing (38/54):C:\sc\verb-AAD\Public\New-AADAppAuthCertificate.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v New-AADAppAuthCertificate.ps1 v------
function New-AADAppAuthCertificate {
16:13:49: INFO:  Processing (39/54):C:\sc\verb-AAD\Public\New-AADAppPermissionsObject.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v New-AADAppPermissionsObject.ps1 v------
function New-AADAppPermissionsObject {
16:13:49: INFO:  Processing (40/54):C:\sc\verb-AAD\Public\profile-AAD-Signons.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:49:(Add-ContentFixEncoding:)
VERBOSE: 16:13:49:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v profile-AAD-Signons.ps1 v------
Function profile-AAD-Signons {
16:13:50: INFO:  Processing (41/54):C:\sc\verb-AAD\Public\Remove-AADAppRegistrationCBAAuth.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-AADAppRegistrationCBAAuth.ps1 v------
function Remove-AADAppRegistrationCBAAuth {
16:13:50: INFO:  Processing (42/54):C:\sc\verb-AAD\Public\remove-AADUserLicense.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v remove-AADUserLicense.ps1 v------
function remove-AADUserLicense {
16:13:50: INFO:  Processing (43/54):C:\sc\verb-AAD\Public\Remove-MsolUserDirectLicenses.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Remove-MsolUserDirectLicenses.ps1 v------
Function Remove-MsolUserDirectLicenses{
16:13:50: INFO:  Processing (44/54):C:\sc\verb-AAD\Public\resolve-GuestExternalAddr2UPN.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v resolve-GuestExternalAddr2UPN.ps1 v------
Function resolve-GuestExternalAddr2UPN {
16:13:50: INFO:  Processing (45/54):C:\sc\verb-AAD\Public\search-AADSignInReports.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v search-AADSignInReports.ps1 v------
Function search-AADSignInReports {
16:13:50: INFO:  Processing (46/54):C:\sc\verb-AAD\Public\search-GraphApiAAD.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v search-GraphApiAAD.ps1 v------
function search-GraphApiAAD {
16:13:50: INFO:  Processing (47/54):C:\sc\verb-AAD\Public\set-AADUserUsageLocation.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v set-AADUserUsageLocation.ps1 v------
function set-AADUserUsageLocation {
16:13:50: INFO:  Processing (48/54):C:\sc\verb-AAD\Public\test-AADUserIsLicensed.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v test-AADUserIsLicensed.ps1 v------
function test-AADUserIsLicensed {
16:13:50: INFO:  Processing (49/54):C:\sc\verb-AAD\Public\test-AzureADSessionIsGlobalAdmin.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v test-AzureADSessionIsGlobalAdmin.ps1 v------
Function test-AzureADSessionIsGlobalAdmin{
16:13:50: INFO:  Processing (50/54):C:\sc\verb-AAD\Public\test-MsolUserLicenseDirectAssigned.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v test-MsolUserLicenseDirectAssigned.ps1 v------
Function test-MsolUserLicenseDirectAssigned {
16:13:50: INFO:  Processing (51/54):C:\sc\verb-AAD\Public\test-MsolUserLicenseGroupAssigned.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v test-MsolUserLicenseGroupAssigned.ps1 v------
Function test-MsolUserLicenseGroupAssigned {
16:13:50: INFO:  Processing (52/54):C:\sc\verb-AAD\Public\toggle-AADLicense.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v toggle-AADLicense.ps1 v------
function toggle-AADLicense{
16:13:50: INFO:  Processing (53/54):C:\sc\verb-AAD\Public\Update-AADAppRegistrationKeyCertificate.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Update-AADAppRegistrationKeyCertificate.ps1 v------
function Update-AADAppRegistrationKeyCertificate{
16:13:50: INFO:  Processing (54/54):C:\sc\verb-AAD\Public\Wait-AADSync.ps1...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*------v Wait-AADSync.ps1 v------
Function Wait-AADSync {
16:13:50: INFO:  
#*------^ (1/2):C:\sc\verb-AAD\Public ^------
16:13:50: INFO:  
#*------v (2/2):C:\sc\verb-AAD\Internal v------
16:13:50: INFO:  Processing 0 $ComponentScripts files through Remove-AuthenticodeSignature...
16:13:50: INFO:  Remove-AuthenticodeSignature w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                                                                                                                        
whatif                         False                                                                                        
verbose                        True
16:13:50: INFO:  
#*------^ (2/2):C:\sc\verb-AAD\Internal ^------
VERBOSE: (no Public\_CommonCode.ps1)
16:13:50: INFO:  (Updating Psm1 Export-ModuleMember -Function to reflect Public modules)
16:13:50: INFO:  Adding:FooterBlock...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}                                                                        
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    ...
VERBOSE: 16:13:50:(Add-ContentFixEncoding:)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
encoding                       UTF8                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
PassThru                       True                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#*======^ END FUNCTIONS ^======
Export-ModuleMember -Function add-AADUserLicense,Add-ADALType,caadCMW,caadtol,caadTOR,caadVEN,cmsolcmw,cmsolTOL,cmsolTOR,cmsolVEN,Connect-AAD,connect-AzureRM,Connect-MSOL,convert-AADUImmuntableIDToADUObjectGUID,convert-ADUObjectGUIDToAADUImmuntableID,Disconnect-AAD,get-AADBearerToken,get-AADBearerTokenHeaders,get-AADCertToken,get-AADLastSync,get-AADLicenseFullName,get-AADlicensePlanList,get-AADToken,get-AADTokenHeaders,get-aaduser,get-AADUserLastSync,get-AADUserLicenseDetails,Get-DsRegStatus,Get-JWTDetails,Get-MsolDisabledPlansForSKU,Get-MsolUnexpectedEnabledPlansForUser,Get-MsolUserLicense,get-MsolUserLicenseDetails,Get-ServiceToken,Get-TokenCache,import-AADAppRegistrationPFX,Initialize-AADSignErrorsHash,New-AADAppAuthCertificate,New-AADAppPermissionsObject,profile-AAD-Signons,write-log,reset-HostIndent,push-HostIndent,pop-HostIndent,set-HostIndent,write-HostIndent,clear-HostIndent,get-HostIndent,get-colorcombo,Initialize-AADSignErrorsHash,Cleanup,Remove-AADAppRegistrationCBAAuth,remove-AADUserLicense,Remove-MsolUserDirectLicenses,resolve-GuestExternalAddr2UPN,search-AADSignInReports,search-GraphApiAAD,set-AADUserUsageLocation,test-AADUserIsLicensed,test-AzureADSessionIsGlobalAdmin,test-MsolUserLicenseDirectAssigned,test-MsolUserLicenseGroupAssigned,toggle-AADLicense,Update-AADAppRegistrationKeyCertificate,Wait-AADSync -Alias *
16:13:50: INFO:  Updating the Psd1 FunctionsToExport to match
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP                                                                          
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    {#...
VERBOSE: 16:13:50:(Set-ContentFixEncoding:c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP)
VERBOSE: 16:13:50:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
PassThru                       True                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP                                                    
whatif                         False                                                                                        
encoding                       UTF8                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#
# Module manifest for module 'verb-AAD'
16:13:50: INFO:  confirm-ModuleBuildSync w
Name                           Value                                                                                        
----                           -----                                                                                        
ModPsdPath                     c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP                                                    
RequiredVersion                5.2.1                                                                                        
NoTest                         True                                                                                         
whatif                         False                                                                                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                      
---             -----                                      
ModPsdPath      {c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP}
RequiredVersion 5.2.1                                      
NoTest          True                                       
whatIf          False                                      
Verbose         True
16:13:50: INFO:  #*======v confirm-ModuleBuildSync:  v======
VERBOSE: (non-pipeline - param - input)
16:13:50: INFO:  (test-path confirms $ModPsm1 & $ModTestPs1)
16:13:50: INFO:  Import-PowerShellDataFile w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP                                                    
ErrorAction                    Stop                                                                                         
verbose                        True
16:13:50: INFO:  (resolved Module attributes:
$ModuleName:	verb-AAD
$ModRoot:	c:\sc\verb-AAD
$ModPsd1:	c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP
$ModPsm1:	c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP
$ModTestPs1:	c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1
$psd1Vers:	5.2.1
$psd1guid:	647915ee-f880-4c69-b2b5-881abda1aa86)
16:13:50: INFO:  confirm-ModulePsd1Version w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP                                                    
RequiredVersion                5.2.1                                                                                        
whatif                         False                                                                                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                      
---             -----                                      
Path            {c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP}
RequiredVersion 5.2.1                                      
whatIf          False                                      
Verbose         True
16:13:51: INFO:  #*======v confirm-ModulePsd1Version: c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP v======
VERBOSE: (non-pipeline - param - input)
16:13:51: INFO:  (Version already updated to match)
16:13:51: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        5.2.1                                                                                        
Valid                          False
16:13:51: INFO:  (SET:$objReport.Valid = $true ;)
16:13:51: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        5.2.1                                                                                        
Valid                          True
16:13:51: INFO:  #*======^ confirm-ModulePsd1Version: c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP ^======
16:13:51: INFO:  (confirm-ModulePsd1Version:Success)
16:13:51: INFO:  confirm-ModulePsm1Version w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
RequiredVersion                5.2.1                                                                                        
whatif                         False                                                                                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                      
---             -----                                      
Path            {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}
RequiredVersion 5.2.1                                      
whatIf          False                                      
Verbose         True
16:13:51: INFO:  #*======v confirm-ModulePsm1Version: c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP v======
VERBOSE: (non-pipeline - param - input)
16:13:51: WARNING:  In:c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP
Version present:(5.2.0)
*does not* properly match:5.2.1
FORCING MATCHING UPDATE!
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                                          
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    {# verb-AAD.psm1...
VERBOSE: 16:13:51:(Set-ContentFixEncoding:c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP)
VERBOSE: 16:13:51:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
PassThru                       True                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
encoding                       UTF8                                                                                         
ErrorAction                    STOP
-Value[0,2]:
# verb-AAD.psm1
<#
16:13:51: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        5.2.1                                                                                        
Valid                          False
16:13:51: INFO:  (SET:$objReport.Valid = $true ;)
16:13:51: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        5.2.1                                                                                        
Valid                          True
16:13:51: INFO:  #*======^ confirm-ModulePsm1Version: c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP ^======
16:13:51: INFO:  (confirm-ModulePsm1Version:Success)
16:13:51: INFO:  (-NoTest: skipping confirm-ModuleTestPs1Guid)
16:13:51: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Manifest                       c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP                                                    
Module                         c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
Pester                         (SKIPPED)                                                                                    
Guid                           (SKIPPED)                                                                                    
Version                        5.2.1                                                                                        
Valid                          False
16:13:51: INFO:  (SET:$objReport.Valid = $true ;)
16:13:51: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Manifest                       c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP                                                    
Module                         c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
Pester                         (SKIPPED)                                                                                    
Guid                           (SKIPPED)                                                                                    
Version                        5.2.1                                                                                        
Valid                          True
16:13:51: INFO:  #*======^ confirm-ModuleBuildSync:  ^======
16:13:51: INFO:  (confirm-ModuleBuildSync:Success)
16:13:51: INFO:  Test-ModuleTMPFiles w
Name                           Value                                                                                        
----                           -----                                                                                        
ModuleNamePSM1Path             c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
verbose                        True
VERBOSE: $PSBoundParameters:
Key                Value                                      
---                -----                                      
ModuleNamePSM1Path {c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP}
Verbose            True
16:13:51: INFO:  #*======v Test-ModuleTMPFiles: c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP v======
VERBOSE: (non-pipeline - param - input)
16:13:51: INFO:  
Psm1:c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP
Psd1:c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP
16:13:51: INFO:  Creating Testable c:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psd1
 to validate c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP will Test-ModuleManifest
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP Destination: C:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psd1".
16:13:51: INFO:  Test-ModuleManifest w
Name                           Value                                                                                        
----                           -----                                                                                        
verbose                        True                                                                                         
Path                           c:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psd1                            
ErrorVariable                  vManiErr                                                                                     
ErrorAction                    STOP
VERBOSE: Loading module from path 'C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1'.
16:13:51: INFO:  Test-ModuleManifest:PASSED
16:13:51: INFO:  Creating Testable c:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psm1
 to validate c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP will Import-Module
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP Destination: C:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psm1".
16:13:51: INFO:  n import-module w
Name                           Value                                                                                        
----                           -----                                                                                        
Name                           c:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psm1                            
Force                          True                                                                                         
verbose                        True                                                                                         
ErrorAction                    STOP                                                                                         
ErrorVariable                  vIpMoErr                                                                                     
PassThru                       True
VERBOSE: Loading module from path 'C:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psm1'.
VERBOSE: Importing function 'add-AADUserLicense'.
VERBOSE: Importing function 'Add-ADALType'.
VERBOSE: Importing function 'caadCMW'.
VERBOSE: Importing function 'caadtol'.
VERBOSE: Importing function 'caadTOR'.
VERBOSE: Importing function 'caadVEN'.
VERBOSE: Importing function 'cmsolcmw'.
VERBOSE: Importing function 'cmsolTOL'.
VERBOSE: Importing function 'cmsolTOR'.
VERBOSE: Importing function 'cmsolVEN'.
VERBOSE: Importing function 'Connect-AAD'.
VERBOSE: Importing function 'connect-AzureRM'.
VERBOSE: Importing function 'Connect-MSOL'.
VERBOSE: Importing function 'convert-AADUImmuntableIDToADUObjectGUID'.
VERBOSE: Importing function 'convert-ADUObjectGUIDToAADUImmuntableID'.
VERBOSE: Importing function 'Disconnect-AAD'.
VERBOSE: Importing function 'get-AADBearerToken'.
VERBOSE: Importing function 'get-AADBearerTokenHeaders'.
VERBOSE: Importing function 'get-AADCertToken'.
VERBOSE: Importing function 'get-AADLastSync'.
VERBOSE: Importing function 'get-AADLicenseFullName'.
VERBOSE: Importing function 'get-AADlicensePlanList'.
VERBOSE: Importing function 'get-AADToken'.
VERBOSE: Importing function 'get-AADTokenHeaders'.
VERBOSE: Importing function 'get-aaduser'.
VERBOSE: Importing function 'get-AADUserLastSync'.
VERBOSE: Importing function 'get-AADUserLicenseDetails'.
VERBOSE: Importing function 'Get-DsRegStatus'.
VERBOSE: Importing function 'Get-JWTDetails'.
VERBOSE: Importing function 'Get-MsolDisabledPlansForSKU'.
VERBOSE: Importing function 'Get-MsolUnexpectedEnabledPlansForUser'.
VERBOSE: Importing function 'Get-MsolUserLicense'.
VERBOSE: Importing function 'get-MsolUserLicenseDetails'.
VERBOSE: Importing function 'Get-ServiceToken'.
VERBOSE: Importing function 'Get-TokenCache'.
VERBOSE: Importing function 'import-AADAppRegistrationPFX'.
VERBOSE: Importing function 'Initialize-AADSignErrorsHash'.
VERBOSE: Importing function 'New-AADAppAuthCertificate'.
VERBOSE: Importing function 'New-AADAppPermissionsObject'.
WARNING: The names of some imported commands from the module '2dffb35c-2549-457d-abc1-b32e39cd8c35' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'profile-AAD-Signons' command in the 2dffb35c-2549-457d-abc1-b32e39cd8c35' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
WARNING: Some imported command names contain one or more of the following restricted characters: # , ( ) {{ }} [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: The command name 'profile-AAD-Signons' from the module '2dffb35c-2549-457d-abc1-b32e39cd8c35' contains one or more of the following restricted characters: # , ( ) { } [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: Importing function 'profile-AAD-Signons'.
VERBOSE: Importing function 'Remove-AADAppRegistrationCBAAuth'.
VERBOSE: Importing function 'remove-AADUserLicense'.
VERBOSE: Importing function 'Remove-MsolUserDirectLicenses'.
VERBOSE: Importing function 'resolve-GuestExternalAddr2UPN'.
VERBOSE: Importing function 'search-AADSignInReports'.
VERBOSE: Importing function 'search-GraphApiAAD'.
VERBOSE: Importing function 'set-AADUserUsageLocation'.
VERBOSE: Importing function 'test-AADUserIsLicensed'.
VERBOSE: Importing function 'test-AzureADSessionIsGlobalAdmin'.
VERBOSE: Importing function 'test-MsolUserLicenseDirectAssigned'.
VERBOSE: Importing function 'test-MsolUserLicenseGroupAssigned'.
VERBOSE: The 'toggle-AADLicense' command in the 2dffb35c-2549-457d-abc1-b32e39cd8c35' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'toggle-AADLicense'.
VERBOSE: Importing function 'Update-AADAppRegistrationKeyCertificate'.
VERBOSE: Importing function 'Wait-AADSync'.
VERBOSE: Importing alias 'Build-AADSignErrorsHash'.
VERBOSE: Importing alias 'caad'.
VERBOSE: Importing alias 'cmsol'.
VERBOSE: Importing alias 'convert-GUIDToImmuntableID'.
VERBOSE: Importing alias 'convert-ImmuntableIDToGUID'.
VERBOSE: Importing alias 'daad'.
VERBOSE: Importing alias 'get-MsolLastSync'.
VERBOSE: Importing alias 'get-MsolUserLastSync'.
VERBOSE: Importing alias 'raad'.
VERBOSE: Importing alias 'reconnect-AAD'.
VERBOSE: Importing alias 'Reconnect-MSOL'.
VERBOSE: Importing alias 'rmsol'.
VERBOSE: Importing alias 'Rollover-AADAppRegistrationKeyCertificate'.
VERBOSE: Importing alias 'test-isAADGlobalAdmin'.
VERBOSE: Importing alias 'test-IsGlobalAdmin'.
VERBOSE: Importing alias 'toggle-o365License'.
VERBOSE: Importing alias 'Wait-MSolSync'.
16:13:51: INFO:  Ipmo: PASSED
16:13:51: INFO:  (remove-module -name c:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psm1 -force)
16:13:51: INFO:  (remove-item -path c:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psm1 -ErrorAction SilentlyContinue ;
16:13:51: INFO:  (remove-item -path c:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psd1 -ErrorAction SilentlyContinue ;
16:13:51: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Manifest                       2dffb35c-2549-457d-abc1-b32e39cd8c35                                                         
Module                         2dffb35c-2549-457d-abc1-b32e39cd8c35                                                         
Valid                          False
16:13:51: INFO:  (SET:$objReport.Valid = $true ;)
16:13:51: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Manifest                       2dffb35c-2549-457d-abc1-b32e39cd8c35                                                         
Module                         2dffb35c-2549-457d-abc1-b32e39cd8c35                                                         
Valid                          True
16:13:51: INFO:  #*======^ Test-ModuleTMPFiles: c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP ^======
16:13:51: INFO:  Processing error free: Overwriting temp .psm1 with temp copy
copy-item w
Name                           Value                                                                                        
----                           -----                                                                                        
Destination                    c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1                                                        
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP                                                    
whatif                         False                                                                                        
ErrorAction                    STOP
16:13:51: INFO:  Processing error free: Overwriting temp .psd1 with temp copy
copy-item w
Name                           Value                                                                                        
----                           -----                                                                                        
Destination                    c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1                                                        
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP                                                    
whatif                         False                                                                                        
ErrorAction                    STOP
16:13:51: INFO:  #*======^ ConvertTo-ModuleMergedTDO: ^======
VERBOSE: Loading module from path 'C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1'.
16:13:52: VERBOSE:  ((no $ttmm_Err: test-ModuleManifest had no errors))
16:13:52: INFO:  (Test-ModuleManifest:PASSED)
16:13:52: INFO:  Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1
16:13:52: INFO:  confirm-ModuleBuildSync w
Name                           Value                                                                                        
----                           -----                                                                                        
ModPsdPath                     C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1                                                        
RequiredVersion                5.2.1                                                                                        
whatif                         False                                                                                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                  
---             -----                                  
ModPsdPath      {C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1}
RequiredVersion 5.2.1                                  
whatIf          False                                  
Verbose         True
16:13:52: INFO:  #*======v confirm-ModuleBuildSync:  v======
VERBOSE: (non-pipeline - param - input)
16:13:52: INFO:  (test-path confirms $ModPsm1 & $ModTestPs1)
16:13:52: INFO:  Import-PowerShellDataFile w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1                                                        
ErrorAction                    Stop                                                                                         
verbose                        True
16:13:52: INFO:  (resolved Module attributes:
$ModuleName:	verb-AAD
$ModRoot:	c:\sc\verb-AAD
$ModPsd1:	C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
$ModPsm1:	C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1
$ModTestPs1:	c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1
$psd1Vers:	5.2.1
$psd1guid:	647915ee-f880-4c69-b2b5-881abda1aa86)
16:13:52: INFO:  confirm-ModulePsd1Version w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1                                                        
RequiredVersion                5.2.1                                                                                        
whatif                         False                                                                                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                  
---             -----                                  
Path            {C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1}
RequiredVersion 5.2.1                                  
whatIf          False                                  
Verbose         True
16:13:52: INFO:  #*======v confirm-ModulePsd1Version: C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1 v======
VERBOSE: (non-pipeline - param - input)
16:13:52: INFO:  (Version already updated to match)
16:13:52: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        5.2.1                                                                                        
Valid                          False
16:13:52: INFO:  (SET:$objReport.Valid = $true ;)
16:13:52: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        5.2.1                                                                                        
Valid                          True
16:13:52: INFO:  #*======^ confirm-ModulePsd1Version: C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1 ^======
16:13:52: INFO:  (confirm-ModulePsd1Version:Success)
16:13:52: INFO:  confirm-ModulePsm1Version w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1                                                        
RequiredVersion                5.2.1                                                                                        
whatif                         False                                                                                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key             Value                                  
---             -----                                  
Path            {C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1}
RequiredVersion 5.2.1                                  
whatIf          False                                  
Verbose         True
16:13:52: INFO:  #*======v confirm-ModulePsm1Version: C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1 v======
VERBOSE: (non-pipeline - param - input)
16:13:52: INFO:  (Version already updated to match)
16:13:52: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        5.2.1                                                                                        
Valid                          False
16:13:52: INFO:  (SET:$objReport.Valid = $true ;)
16:13:52: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Version                        5.2.1                                                                                        
Valid                          True
16:13:52: INFO:  #*======^ confirm-ModulePsm1Version: C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1 ^======
16:13:52: INFO:  (confirm-ModulePsm1Version:Success)
16:13:52: INFO:  Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1
16:13:52: INFO:  confirm-ModuleTestPs1Guid w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1                                                      
RequiredGuid                   647915ee-f880-4c69-b2b5-881abda1aa86                                                         
whatif                         False                                                                                        
verbose                        True
VERBOSE: $PSBoundParameters:
Key          Value                                    
---          -----                                    
Path         {c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1}
RequiredGuid 647915ee-f880-4c69-b2b5-881abda1aa86     
whatIf       False                                    
Verbose      True
16:13:52: INFO:  #*======v confirm-ModuleTestPs1Guid: c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1 v======
VERBOSE: (non-pipeline - param - input)
16:13:52: INFO:  (Guid  already updated to match)
16:13:52: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Guid                           647915ee-f880-4c69-b2b5-881abda1aa86                                                         
Valid                          False
16:13:52: INFO:  (SET:$objReport.Valid = $true ;)
16:13:52: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Guid                           647915ee-f880-4c69-b2b5-881abda1aa86                                                         
Valid                          True
16:13:52: INFO:  #*======^ confirm-ModuleTestPs1Guid: c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1 ^======
16:13:52: INFO:  (confirm-ModuleTestPs1Guid:Success)
16:13:52: INFO:  $objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Manifest                       C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1                                                        
Module                         C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1                                                        
Pester                         c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1                                                      
Guid                           647915ee-f880-4c69-b2b5-881abda1aa86                                                         
Version                        5.2.1                                                                                        
Valid                          False
16:13:52: INFO:  (SET:$objReport.Valid = $true ;)
16:13:52: INFO:  (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value                                                                                        
----                           -----                                                                                        
Manifest                       C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1                                                        
Module                         C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1                                                        
Pester                         c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1                                                      
Guid                           647915ee-f880-4c69-b2b5-881abda1aa86                                                         
Version                        5.2.1                                                                                        
Valid                          True
16:13:52: INFO:  #*======^ confirm-ModuleBuildSync:  ^======
16:13:52: INFO:  (confirm-ModuleBuildSync:Success)
16:13:52: VERBOSE:  ($Psd1filelist populated: export-cliXML:c:\sc\verb-AAD\Psd1filelist)
16:13:52: INFO:  Updating the Psd1 FileList to with populated $Psd1filelist...
VERBOSE: $PSBoundParameters:
Key      Value                                                                                                              
---      -----                                                                                                              
Path     C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1                                                                              
PassThru True                                                                                                               
Verbose  True                                                                                                               
whatIf   False                                                                                                              
Value    {#...
VERBOSE: 16:13:52:(Set-ContentFixEncoding:C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1)
VERBOSE: 16:13:52:Set-Content w
Name                           Value                                                                                        
----                           -----                                                                                        
PassThru                       True                                                                                         
Path                           C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1                                                        
whatif                         False                                                                                        
encoding                       UTF8                                                                                         
ErrorAction                    STOP
-Value[0,2]:
#
# Module manifest for module 'verb-AAD'
VERBOSE: Get-ChildItem c:\sc\verb-AAD\* -recur | where-object {.name -match $rgxGuidModFiles}
16:13:52: INFO:  Signing appropriate files...
VERBOSE: (MONOLITH module:collecting non-include sign files)
16:13:52: INFO:  set-AuthenticodeSignatureTDO w
Name                           Value                                                                                        
----                           -----                                                                                        
file                           {C:\sc\verb-AAD\rebuild-module.ps1, C:\sc\verb-AAD\requirements.psd1, C:\sc\verb-AAD\Tests...
ErrorAction                    Stop                                                                                         
whatif                         False
Current certificate 5AC9D2B4552E48854D47CBA1352944E9 chain and revocation status is valid
(NOTE:-CRLMode:'NoCheck', no Certificate Revocation Check performed)
(C:\sc\verb-AAD\rebuild-module.ps1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-AAD\requirements.psd1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-AAD\Tests\PPoShScriptingStyle.psd1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-AAD\Tests\ToddomationScriptingStyle-medium.psd1 has a valid existing AuthenticodeSignature, skipping)
(C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1 has a valid existing AuthenticodeSignature, skipping)

Directory: C:\sc\verb-AAD\verb-AAD


SignerCertificate                        Status Path         
-----------------                        ------ ----         
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5 Valid  verb-AAD.psd1

Directory: C:\sc\verb-AAD\verb-AAD


SignerCertificate                        Status Path         
-----------------                        ------ ----         
5F8F454A477F2C4539296F5E4EEE71FBB94CF5E5 Valid  verb-AAD.psm1
16:13:52: INFO:  Removing existing profile verb-AAD content...
16:13:52: INFO:  Uninstall-ModuleForce w
Name                           Value                                                                                        
----                           -----                                                                                        
ModuleName                     verb-AAD                                                                                     
Verbose                        True                                                                                         
whatif                         False
VERBOSE: $PSBoundParameters:
Key        Value     
---        -----     
ModuleName {verb-AAD}
Verbose    True      
whatIf     False
VERBOSE: (non-pipeline - param - input)
16:13:55: INFO:  
#*------v Uninstall PSGet Mod:verb-AAD:v5.2.0 v------
16:13:55: INFO:  Uninstall-Script w
Name                           Value                                                                                        
----                           -----                                                                                        
Force                          True                                                                                         
Whatif                         False                                                                                        
Verbose                        True
VERBOSE: Populating RepositorySourceLocation property for module verb-AAD.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\5.2.0\verb-AAD.psm1'.
VERBOSE: Performing the operation "Uninstall-Module" on target "Version '5.2.0' of module 'verb-AAD'".
VERBOSE: Successfully uninstalled the module 'verb-AAD' from module base 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\5.2.0'.
16:14:09: INFO:  
#*------^ Uninstall PSGet Mod:verb-AAD:v5.2.0 ^------
16:14:09: INFO:  (Processing $env:PSModulePath paths, for surviving locked copies of verb-AAD to *manually* purge...)
16:14:09: INFO:  Checking: verb-AAD below: C:\Users\kadritss\Documents\WindowsPowerShell\Modules...
16:14:09:-GracefulFail specified, using EA:'Continue'
16:14:09:No existing Match:test-path -path C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\*.*
16:14:09: INFO:  Checking: verb-AAD below: C:\ProgramData\Boxstarter...
16:14:09:-GracefulFail specified, using EA:'Continue'
16:14:09:No existing Match:test-path -path C:\ProgramData\Boxstarter\verb-AAD\*.*
16:14:09: INFO:  Checking: verb-AAD below: C:\Program Files\WindowsPowerShell\Modules...
16:14:09:-GracefulFail specified, using EA:'Continue'
16:14:09:No existing Match:test-path -path C:\Program Files\WindowsPowerShell\Modules\verb-AAD\*.*
16:14:09: INFO:  Checking: verb-AAD below: C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules...
16:14:09:-GracefulFail specified, using EA:'Continue'
16:14:09:No existing Match:test-path -path C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\verb-AAD\*.*
16:14:09: INFO:  Checking: verb-AAD below: C:\Program Files (x86)\AutoIt3\AutoItX...
16:14:09:-GracefulFail specified, using EA:'Continue'
16:14:09:No existing Match:test-path -path C:\Program Files (x86)\AutoIt3\AutoItX\verb-AAD\*.*
16:14:09: INFO:  (no $sRet returned on call)
16:14:09: INFO:  Copying module to profile (net of .git & .vscode dirs, and backed up content)...
16:14:09: INFO:  $srcFiles:post-filter out:
\\(Package|Tests|logs)\\|(\.ps[dm]1_(\d+-\d+[AP]M|TMP)|-LOG-BATCH-EXEC-\d+-\d+[AP]M-log\.txt|\\(fingerprint|Psd1filelist))$
16:14:09: INFO:  Discovered mod-copy files ($srcFiles.fullname):w
C:\sc\verb-AAD\verb-AAD\ABOUT_verb-AAD.help.txt
C:\sc\verb-AAD\verb-AAD\CHANGELOG.md
C:\sc\verb-AAD\verb-AAD\LICENSE.txt
C:\sc\verb-AAD\verb-AAD\Quick-Start-Installation-and-Example.md
C:\sc\verb-AAD\verb-AAD\README.md
C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1
16:14:09: INFO:  Non-Pre-existing:$to:C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD
Pre-creating before copy...
VERBOSE: Performing the operation "Create Directory" on target "Destination: C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD".
16:14:09: INFO:  Mode   LastWriteTime        Length Name    
----   -------------        ------ ----    
d----- 9/23/2024 4:14:09 PM        verb-AAD
16:14:09: INFO:  -Merge:exclude $MergeBuildExcl \\(Public|Internal|External|Private)\\.*.ps1$ files from temp build copy
16:14:09: INFO:  Recursively remove empty subdirs below C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD...
.
16:14:09: INFO:  Move/Flatten Resource etc files into root of temp Build dir...
16:14:09: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD COPY of Quick-Start-Installation-and-Example.md
16:14:09: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD COPY of ABOUT_verb-AAD.help.txt
16:14:09: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD COPY of CHANGELOG.md
16:14:09: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD COPY of LICENSE.txt
16:14:09: INFO:  Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD COPY of README.md
16:14:09: INFO:  copy/Flatten Resource etc files into source root c:\sc\verb-AAD\verb-AAD dir...
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-AAD\Docs\Quick-Start-Installation-and-Example.md Destination: C:\sc\verb-AAD\verb-AAD\Quick-Start-Installation-and-Example.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-AAD\ABOUT_verb-AAD.help.txt Destination: C:\sc\verb-AAD\verb-AAD\ABOUT_verb-AAD.help.txt".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-AAD\CHANGELOG.md Destination: C:\sc\verb-AAD\verb-AAD\CHANGELOG.md".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-AAD\LICENSE.txt Destination: C:\sc\verb-AAD\verb-AAD\LICENSE.txt".
VERBOSE: Performing the operation "Copy File" on target "Item: C:\sc\verb-AAD\README.md Destination: C:\sc\verb-AAD\verb-AAD\README.md".
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD\verb-AAD.psm1'.
16:14:10: INFO:  Resolved $ModPsdPath:
C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
16:14:10: VERBOSE:  (resolve-path the CUMods verb-AAD.psd1 location)
16:14:10: INFO:  
==Verifying CU:Mods\verb-AAD\verb-AAD\Quick-Start-Installation-and-Example.md:
validated Quick-Start-Installation-and-Example.md is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD\Quick-Start-Installation-and-Example.md
16:14:10: INFO:  
==Verifying CU:Mods\verb-AAD\verb-AAD\ABOUT_verb-AAD.help.txt:
validated ABOUT_verb-AAD.help.txt is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD\ABOUT_verb-AAD.help.txt
16:14:10: INFO:  
==Verifying CU:Mods\verb-AAD\verb-AAD\CHANGELOG.md:
validated CHANGELOG.md is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD\CHANGELOG.md
16:14:10: INFO:  
==Verifying CU:Mods\verb-AAD\verb-AAD\LICENSE.txt:
validated LICENSE.txt is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD\LICENSE.txt
16:14:10: INFO:  
==Verifying CU:Mods\verb-AAD\verb-AAD\README.md:
validated README.md is found in C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD\README.md
16:14:10: INFO:  Running pre-Publish-Module .psd1 test:
Test-ModuleManifest -path C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
VERBOSE: Loading module from path 'C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1'.
16:14:10: VERBOSE:  ((no $ttmm_Err: test-ModuleManifest had no errors))
16:14:10: INFO:  (Test-ModuleManifest:PASSED)
16:14:10: INFO:  (Profiling Repo: get-PSRepository -name lyncRepo...)
16:14:10: VERBOSE:  ((confirmed:$tRepo.PublishLocation accessible))
16:14:10: INFO:  
Publish-Module w
Name                           Value                                                                                        
----                           -----                                                                                        
Name                           verb-AAD                                                                                     
Repository                     lyncRepo                                                                                     
RequiredVersion                5.2.1                                                                                        
Verbose                        True                                                                                         
ErrorAction                    Stop                                                                                         
errorVariable                  pbmo_Err                                                                                     
whatif                         False
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Publish Location:'\\lynmsv10\lync_fs\scripts\sc'.
VERBOSE: Module 'verb-AAD' was found in 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD'.
VERBOSE: Loading module from path 'C:\Users\kadritss\AppData\Local\Temp\1322150345\verb-AAD\verb-AAD.psm1'.
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'lyncRepo'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is '\\lynmsv10\lync_fs\scripts\sc' and PackageManagementProvider is 'NuGet'.
VERBOSE: Total package yield:'0' for the specified package 'verb-AAD'.
VERBOSE: Suppressed Verbose Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Repository details, Name = 'lyncRepo', Location = '\\lynmsv10\lync_fs\scripts\sc'; IsTrusted = 'True'; IsRegistered = 'True'.
VERBOSE: Using the provider 'PowerShellGet' for searching packages.
VERBOSE: Using the specified source names : 'lyncRepo'.
VERBOSE: Getting the provider object for the PackageManagement Provider 'NuGet'.
VERBOSE: The specified Location is '\\lynmsv10\lync_fs\scripts\sc' and PackageManagementProvider is 'NuGet'.
VERBOSE: Total package yield:'1' for the specified package 'verb-AAD'.
VERBOSE: Performing the operation "Publish-Module" on target "Version '5.2.1' of module 'verb-AAD'".
VERBOSE: Calling Publish-PSArtifactUtility
VERBOSE: Calling New-NuspecFile
WARNING: Tag list exceeded 4000 characters and may not be accepted by some Nuget feeds.
VERBOSE: Calling New-NugetPackage
VERBOSE: Calling C:\chocolatey\bin\nuget.exe pack "C:\Users\kadritss\AppData\Local\Temp\1322150345\verb-AAD\verb-AAD.nuspec" -outputdirectory "C:\Users\kadritss\AppData\Local\Temp\1322150345\verb-AAD" -noninteractive
VERBOSE: C:\chocolatey\bin\nuget.exe output:
VERBOSE: 	Attempting to build package from 'verb-AAD.nuspec'.
VERBOSE: 	The package verb-AAD.5.2.1 is missing a readme. Go to https://aka.ms/nuget/authoring-best-practices/readme to learn why package readmes are important.
VERBOSE: 	Successfully created package 'C:\Users\kadritss\AppData\Local\Temp\1322150345\verb-AAD\verb-AAD.5.2.1.nupkg'.
VERBOSE: finished running C:\chocolatey\bin\nuget.exe with exit code 0
VERBOSE: Created Nuget Package C:\Users\kadritss\AppData\Local\Temp\1322150345\verb-AAD\verb-AAD.5.2.1.nupkg
VERBOSE: Successfully created nuget package at C:\Users\kadritss\AppData\Local\Temp\1322150345\verb-AAD\verb-AAD.5.2.1.nupkg
VERBOSE: Calling Publish-NugetPackage -NupkgPath C:\Users\kadritss\AppData\Local\Temp\1322150345\verb-AAD\verb-AAD.5.2.1.nupkg -Destination \\lynmsv10\lync_fs\scripts\sc -NugetExePath C:\chocolatey\bin\nuget.exe -UseDotnetCli:False
VERBOSE: Pushing verb-AAD.5.2.1.nupkg to '\\lynmsv10\lync_fs\scripts\sc'...
Your package was pushed.
VERBOSE: Successfully published module 'verb-AAD' to the module publish location '\\lynmsv10\lync_fs\scripts\sc'. Please allow few minutes for 'verb-AAD' to show up in the search results.

16:14:22: WARNING:

16:14:22: WARNING:  FOUND $pbmo_Err: import-module HAD ERRORS! (no action, could be non-impacting)
WARNING: ===:System.Management.Automation.StopUpstreamCommandsException: System error.
   at Microsoft.PowerShell.Commands.SelectObjectCommand.ProcessRecord()
   at System.Management.Automation.CommandProcessor.ProcessRecord()

16:14:22: WARNING:

16:14:22: WARNING:  Publish-Module PBMO UNDEFINED ERROR!

16:14:22: WARNING:  System.Management.Automation.StopUpstreamCommandsException: System error.

16:14:22: WARNING:

16:14:22: WARNING:     at Microsoft.PowerShell.Commands.SelectObjectCommand.ProcessRecord()

16:14:22: WARNING:

16:14:22: WARNING:     at System.Management.Automation.CommandProcessor.ProcessRecord()

16:14:22: WARNING:  (But PublishModule doesn't bother to return a functional Error object with an Exception, so we can't trust/parse or act on it. Just echo)
16:14:22: INFO:  Waiting for:find-module -name verb-AAD -Repository lyncRepo ...
.
16:14:22:-GracefulFail specified, using EA:'Continue'
16:14:22:remove-item w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           {C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD\ABOUT_verb-AAD.he...
Recurse                        True                                                                                         
ErrorAction                    Continue                                                                                     
whatif                         False
16:14:22: INFO:  Install-Module w
Name                           Value                                                                                        
----                           -----                                                                                        
Name                           verb-AAD                                                                                     
Repository                     lyncRepo                                                                                     
RequiredVersion                5.2.1                                                                                        
scope                          CurrentUser                                                                                  
force                          True                                                                                         
AllowClobber                   True                                                                                         
errorVariable                  ismo_Err                                                                                     
ErrorAction                    Stop                                                                                         
whatif                         False
16:14:25: VERBOSE:  ((no $ismo_Err: Install-Module had no errors))
16:14:25: INFO:  Testing Module:Import-Module w
Name                           Value                                                                                        
----                           -----                                                                                        
Name                           verb-AAD                                                                                     
ErrorAction                    Stop                                                                                         
errorVariable                  ipmo_Err                                                                                     
force                          True                                                                                         
verbose                        True
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\5.2.1\verb-AAD.psd1'.
VERBOSE: Populating RepositorySourceLocation property for module verb-AAD.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\5.2.1\verb-AAD.psm1'.
VERBOSE: Importing function 'add-AADUserLicense'.
VERBOSE: Importing function 'Add-ADALType'.
VERBOSE: Importing function 'caadCMW'.
VERBOSE: Importing function 'caadtol'.
VERBOSE: Importing function 'caadTOR'.
VERBOSE: Importing function 'caadVEN'.
VERBOSE: Importing function 'cmsolcmw'.
VERBOSE: Importing function 'cmsolTOL'.
VERBOSE: Importing function 'cmsolTOR'.
VERBOSE: Importing function 'cmsolVEN'.
VERBOSE: Importing function 'Connect-AAD'.
VERBOSE: Importing function 'connect-AzureRM'.
VERBOSE: Importing function 'Connect-MSOL'.
VERBOSE: Importing function 'convert-AADUImmuntableIDToADUObjectGUID'.
VERBOSE: Importing function 'convert-ADUObjectGUIDToAADUImmuntableID'.
VERBOSE: Importing function 'Disconnect-AAD'.
VERBOSE: Importing function 'get-AADBearerToken'.
VERBOSE: Importing function 'get-AADBearerTokenHeaders'.
VERBOSE: Importing function 'get-AADCertToken'.
VERBOSE: Importing function 'get-AADLastSync'.
VERBOSE: Importing function 'get-AADLicenseFullName'.
VERBOSE: Importing function 'get-AADlicensePlanList'.
VERBOSE: Importing function 'get-AADToken'.
VERBOSE: Importing function 'get-AADTokenHeaders'.
VERBOSE: Importing function 'get-aaduser'.
VERBOSE: Importing function 'get-AADUserLastSync'.
VERBOSE: Importing function 'get-AADUserLicenseDetails'.
VERBOSE: Importing function 'Get-DsRegStatus'.
VERBOSE: Importing function 'Get-JWTDetails'.
VERBOSE: Importing function 'Get-MsolDisabledPlansForSKU'.
VERBOSE: Importing function 'Get-MsolUnexpectedEnabledPlansForUser'.
VERBOSE: Importing function 'Get-MsolUserLicense'.
VERBOSE: Importing function 'get-MsolUserLicenseDetails'.
VERBOSE: Importing function 'Get-ServiceToken'.
VERBOSE: Importing function 'Get-TokenCache'.
VERBOSE: Importing function 'import-AADAppRegistrationPFX'.
VERBOSE: Importing function 'Initialize-AADSignErrorsHash'.
VERBOSE: Importing function 'New-AADAppAuthCertificate'.
VERBOSE: Importing function 'New-AADAppPermissionsObject'.
WARNING: The names of some imported commands from the module 'verb-AAD' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'profile-AAD-Signons' command in the verb-AAD' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
WARNING: Some imported command names contain one or more of the following restricted characters: # , ( ) {{ }} [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: The command name 'profile-AAD-Signons' from the module 'verb-AAD' contains one or more of the following restricted characters: # , ( ) { } [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: Importing function 'profile-AAD-Signons'.
VERBOSE: Importing function 'Remove-AADAppRegistrationCBAAuth'.
VERBOSE: Importing function 'remove-AADUserLicense'.
VERBOSE: Importing function 'Remove-MsolUserDirectLicenses'.
VERBOSE: Importing function 'resolve-GuestExternalAddr2UPN'.
VERBOSE: Importing function 'search-AADSignInReports'.
VERBOSE: Importing function 'search-GraphApiAAD'.
VERBOSE: Importing function 'set-AADUserUsageLocation'.
VERBOSE: Importing function 'test-AADUserIsLicensed'.
VERBOSE: Importing function 'test-AzureADSessionIsGlobalAdmin'.
VERBOSE: Importing function 'test-MsolUserLicenseDirectAssigned'.
VERBOSE: Importing function 'test-MsolUserLicenseGroupAssigned'.
VERBOSE: The 'toggle-AADLicense' command in the verb-AAD' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'toggle-AADLicense'.
VERBOSE: Importing function 'Update-AADAppRegistrationKeyCertificate'.
VERBOSE: Importing function 'Wait-AADSync'.
VERBOSE: Importing alias 'Build-AADSignErrorsHash'.
VERBOSE: Importing alias 'caad'.
VERBOSE: Importing alias 'cmsol'.
VERBOSE: Importing alias 'convert-GUIDToImmuntableID'.
VERBOSE: Importing alias 'convert-ImmuntableIDToGUID'.
VERBOSE: Importing alias 'daad'.
VERBOSE: Importing alias 'get-MsolLastSync'.
VERBOSE: Importing alias 'get-MsolUserLastSync'.
VERBOSE: Importing alias 'raad'.
VERBOSE: Importing alias 'reconnect-AAD'.
VERBOSE: Importing alias 'Reconnect-MSOL'.
VERBOSE: Importing alias 'rmsol'.
VERBOSE: Importing alias 'Rollover-AADAppRegistrationKeyCertificate'.
VERBOSE: Importing alias 'test-isAADGlobalAdmin'.
VERBOSE: Importing alias 'test-IsGlobalAdmin'.
VERBOSE: Importing alias 'toggle-o365License'.
VERBOSE: Importing alias 'Wait-MSolSync'.
16:14:26: VERBOSE:  ((no $ipmo_Err: test-ModuleManifest had no errors))
16:14:26: INFO:  Retrieving matching Repo .nupkg file:
gci \\lynmsv10\lync_fs\scripts\sc\verb-AAD.5.2.1.nupkgl..
16:14:26: INFO:  Proper updated .nupkg file found:verb-AAD.5.2.1.nupkg, copying to local Pkg directory.
16:14:26:Copy-Item w
Name                           Value                                                                                        
----                           -----                                                                                        
path                           \\lynmsv10\lync_fs\scripts\sc\verb-AAD.5.2.1.nupkg                                           
destination                    c:\sc\verb-AAD\Package                                                                       
whatif                         False
16:14:26: INFO:  remove-UnneededFileVariants w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-AAD\Package                                                                       
Include                        verb-AAD*.nupkg                                                                              
Pattern                                                                                                                     
FilterOn                       CreationTime                                                                                 
Keep                           2                                                                                            
KeepToday                      True                                                                                         
verbose                        True                                                                                         
whatif                         False
16:14:26:gci w
Name                           Value                                                                                        
----                           -----                                                                                        
path                           c:\sc\verb-AAD\Package\*                                                                     
include                        verb-AAD*.nupkg                                                                              
ErrorAction                    Stop
VERBOSE: $cuttime:09/23/2024 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/23/2024 00:00:00 AM, on CreationTime property
(4 in set *before* filtering)
(3 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(3 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
16:14:26:Reducing matched population from 4 to 1 files via:
filtered files on CreationTime prior to 09/23/2024 00:00:00 AM
16:14:26:Remove-Item w 
Name                           Value                                                                                        
----                           -----                                                                                        
path                           C:\sc\verb-AAD\Package\verb-aad.4.0.0.nupkg                                                  
ErrorAction                    STOP                                                                                         
whatif                         False
True
16:14:26: INFO:  remove-UnneededFileVariants w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-AAD\Tests                                                                         
Include                        ScriptAnalyzer-Results-*.xml                                                                 
Pattern                                                                                                                     
FilterOn                       CreationTime                                                                                 
Keep                           4                                                                                            
KeepToday                      True                                                                                         
verbose                        True                                                                                         
whatif                         False
16:14:26:gci w
Name                           Value                                                                                        
----                           -----                                                                                        
path                           c:\sc\verb-AAD\Tests\*                                                                       
include                        ScriptAnalyzer-Results-*.xml                                                                 
ErrorAction                    Stop
VERBOSE: $cuttime:09/23/2024 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/23/2024 00:00:00 AM, on CreationTime property
(5 in set *before* filtering)
(5 in set *after* filtering)
VERBOSE: attempting to retain remaining 4 generations net of prior filtering
(5 in set *before* filtering)
(1 in set *after* filtering)
(Note:net population is *below* target -Keep:4 spec - insufficient older files available)
16:14:26:Reducing matched population from 5 to 1 files via:
filtered files on CreationTime prior to 09/23/2024 00:00:00 AM
16:14:26:Remove-Item w 
Name                           Value                                                                                        
----                           -----                                                                                        
path                           C:\sc\verb-AAD\Tests\ScriptAnalyzer-Results-20220324-1318PM.xml                              
ErrorAction                    STOP                                                                                         
whatif                         False
True
16:14:26: INFO:  -RunTest specified: Running Pester Test script:
c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1
16:14:26:
#*------v RUNNING c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: v------
WARNING: The names of some imported commands from the module 'verb-AAD' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
WARNING: Some imported command names contain one or more of the following restricted characters: # , ( ) {{ }} [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
Describing Module Information
   Context Manifest Testing
    [+] Valid Module Manifest 35ms
PS>TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
    [-] Valid Manifest Name 106ms
      RuntimeException: '-Be' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 137
PS>TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
    [-] Generic Version Check 116ms
      RuntimeException: '-Not' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 140
    [+] Valid Author 26ms
    [+] Valid Company Name 24ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Valid License 16ms
      Expected: value to not be empty
      154:             $ModuleInformation.LicenseURI | Should not BeNullOrEmpty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 154
PS>TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
>> TerminatingError(): "'-Not' is not a valid Should operator."
    [-] Valid Manifest Description 105ms
      RuntimeException: '-Not' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 162
PS>TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
    [-] Valid Manifest Root Module 150ms
      RuntimeException: '-Be' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 170
PS>TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
>> TerminatingError(): "'-Be' is not a valid Should operator."
    [-] Valid Manifest GUID 95ms
      RuntimeException: '-Be' is not a valid Should operator.
      at Get-TestResult, C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Functions\Assertions\Should.ps1: line 42
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 173
    [+] Required Modules 21ms
   Context Exported Functions
PS>TerminatingError(): "Expected: {54}
But was:  {66}"
>> TerminatingError(): "Expected: {54}
But was:  {66}"
    [-] Proper Number of Functions Exported 76ms
      Expected: {54}
      But was:  {66}
      214:             $ExportedCount | Should be $FileCount
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 214
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Exports All Public Functions 45ms
      Expected: {True}
      But was:  {False}
      224:                 $ExFunctions -contains $FunctionName | Should Be $true
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 224
    [+] Compare Missing Functions 22ms
Describing Help
   Context Function - Build-AADSignErrorsHash
    [+] Synopsis 231ms
    [+] Description 127ms
    [+] Examples 232ms
Describing Help
   Context Function - convert-GUIDToImmuntableID
    [+] Synopsis 128ms
    [+] Description 179ms
    [+] Examples 113ms
Describing Help
   Context Function - convert-ImmuntableIDToGUID
    [+] Synopsis 168ms
    [+] Description 212ms
    [+] Examples 112ms
Describing Help
   Context Function - get-MsolLastSync
    [+] Synopsis 183ms
    [+] Description 116ms
    [+] Examples 178ms
Describing Help
   Context Function - get-MsolUserLastSync
    [+] Synopsis 124ms
    [+] Description 168ms
    [+] Examples 116ms
Describing Help
   Context Function - reconnect-AAD
    [+] Synopsis 155ms
    [+] Description 146ms
    [+] Examples 196ms
Describing Help
   Context Function - Reconnect-MSOL
    [+] Synopsis 120ms
    [+] Description 179ms
    [+] Examples 114ms
Describing Help
   Context Function - Rollover-AADAppRegistrationKeyCertificate
    [+] Synopsis 195ms
    [+] Description 130ms
    [+] Examples 224ms
Describing Help
   Context Function - test-isAADGlobalAdmin
    [+] Synopsis 177ms
    [+] Description 119ms
    [+] Examples 184ms
Describing Help
   Context Function - test-IsGlobalAdmin
    [+] Synopsis 127ms
    [+] Description 188ms
    [+] Examples 184ms
Describing Help
   Context Function - toggle-o365License
    [+] Synopsis 132ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...eName=verb-AAD}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...eName=verb-AAD}:PSObject) [Select-Object], PSArgumentExce
   ption
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 263ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 251
    [+] Examples 188ms
Describing Help
   Context Function - Wait-MSolSync
    [+] Synopsis 210ms
    [+] Description 147ms
    [+] Examples 165ms
Describing Help
   Context Function - add-AADUserLicense
    [+] Synopsis 191ms
    [+] Description 119ms
    [+] Examples 188ms
Describing Help
   Context Function - Add-ADALType
    [+] Synopsis 128ms
    [+] Description 251ms
    [+] Examples 121ms
Describing Help
   Context Function - caadCMW
    [+] Synopsis 162ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 108ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 182ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 255
Describing Help
   Context Function - caadtol
    [+] Synopsis 122ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 156ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 112ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 255
Describing Help
   Context Function - caadTOR
    [+] Synopsis 235ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 103ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 172ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 255
Describing Help
   Context Function - caadVEN
    [+] Synopsis 121ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 158ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 117ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 255
Describing Help
   Context Function - cmsolcmw
    [+] Synopsis 200ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 108ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 166ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 255
Describing Help
   Context Function - cmsolTOL
    [+] Synopsis 172ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 102ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 117ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 255
Describing Help
   Context Function - cmsolTOR
    [+] Synopsis 110ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 227ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 107ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 255
Describing Help
   Context Function - cmsolVEN
    [+] Synopsis 171ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 107ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 123ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 255
Describing Help
   Context Function - Connect-AAD
    [+] Synopsis 138ms
    [+] Description 179ms
    [+] Examples 123ms
Describing Help
   Context Function - connect-AzureRM
    [+] Synopsis 582ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...eName=verb-AAD}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...eName=verb-AAD}:PSObject) [Select-Object], PSArgumentExce
   ption
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 265ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 251
    [+] Examples 137ms
Describing Help
   Context Function - Connect-MSOL
    [+] Synopsis 200ms
    [+] Description 121ms
    [+] Examples 178ms
Describing Help
   Context Function - convert-AADUImmuntableIDToADUObjectGUID
    [+] Synopsis 128ms
    [+] Description 232ms
    [+] Examples 163ms
Describing Help
   Context Function - convert-ADUObjectGUIDToAADUImmuntableID
    [+] Synopsis 131ms
    [+] Description 187ms
    [+] Examples 120ms
Describing Help
   Context Function - Disconnect-AAD
    [+] Synopsis 194ms
    [+] Description 120ms
    [+] Examples 241ms
Describing Help
   Context Function - get-AADBearerToken
    [+] Synopsis 162ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...eName=verb-AAD}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...eName=verb-AAD}:PSObject) [Select-Object], PSArgumentExce
   ption
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 207ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 251
    [+] Examples 191ms
Describing Help
   Context Function - get-AADBearerTokenHeaders
    [+] Synopsis 134ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...eName=verb-AAD}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...eName=verb-AAD}:PSObject) [Select-Object], PSArgumentExce
   ption
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 264ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 251
    [+] Examples 244ms
Describing Help
   Context Function - get-AADCertToken
    [+] Synopsis 134ms
    [+] Description 175ms
    [+] Examples 115ms
Describing Help
   Context Function - get-AADLastSync
    [+] Synopsis 181ms
    [+] Description 120ms
    [+] Examples 207ms
Describing Help
   Context Function - get-AADLicenseFullName
    [+] Synopsis 186ms
    [+] Description 118ms
    [+] Examples 212ms
Describing Help
   Context Function - get-AADlicensePlanList
    [+] Synopsis 123ms
    [+] Description 178ms
    [+] Examples 182ms
Describing Help
   Context Function - get-AADToken
    [+] Synopsis 126ms
    [+] Description 174ms
    [+] Examples 203ms
Describing Help
   Context Function - get-AADTokenHeaders
    [+] Synopsis 147ms
    [+] Description 167ms
    [+] Examples 119ms
Describing Help
   Context Function - get-aaduser
    [+] Synopsis 126ms
    [+] Description 224ms
    [+] Examples 117ms
Describing Help
   Context Function - get-AADUserLastSync
    [+] Synopsis 182ms
    [+] Description 120ms
    [+] Examples 180ms
Describing Help
   Context Function - get-AADUserLicenseDetails
    [+] Synopsis 137ms
    [+] Description 221ms
    [+] Examples 169ms
Describing Help
   Context Function - Get-DsRegStatus
    [+] Synopsis 144ms
    [+] Description 157ms
    [+] Examples 209ms
Describing Help
   Context Function - Get-JWTDetails
    [+] Synopsis 129ms
PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 168ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 251
PS>TerminatingError(): "Expected: {True}
But was:  {False}"
>> TerminatingError(): "Expected: {True}
But was:  {False}"
    [-] Examples 179ms
      Expected: {True}
      But was:  {False}
      255:                 $Examples.Count -gt 0 | Should be $true
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 255
Describing Help
   Context Function - Get-MsolDisabledPlansForSKU
    [+] Synopsis 129ms
    [+] Description 552ms
    [+] Examples 118ms
Describing Help
   Context Function - Get-MsolUnexpectedEnabledPlansForUser
    [+] Synopsis 214ms
    [+] Description 118ms
    [+] Examples 172ms
Describing Help
   Context Function - Get-MsolUserLicense
    [+] Synopsis 173ms
    [+] Description 118ms
    [+] Examples 250ms
Describing Help
   Context Function - get-MsolUserLicenseDetails
    [+] Synopsis 123ms
    [+] Description 179ms
    [+] Examples 116ms
Describing Help
   Context Function - Get-ServiceToken
    [+] Synopsis 187ms
    [+] Description 121ms
    [+] Examples 228ms
Describing Help
   Context Function - Get-TokenCache
    [+] Synopsis 191ms
    [+] Description 121ms
    [+] Examples 185ms
Describing Help
   Context Function - import-AADAppRegistrationPFX
    [+] Synopsis 128ms
    [+] Description 187ms
    [+] Examples 119ms
Describing Help
   Context Function - Initialize-AADSignErrorsHash
    [+] Synopsis 254ms
    [+] Description 181ms
    [+] Examples 126ms
Describing Help
   Context Function - New-AADAppAuthCertificate
    [+] Synopsis 190ms
    [+] Description 120ms
    [+] Examples 189ms
Describing Help
   Context Function - New-AADAppPermissionsObject
    [+] Synopsis 127ms
    [+] Description 239ms
    [+] Examples 180ms
Describing Help
   Context Function - profile-AAD-Signons
    [+] Synopsis 178ms
    [+] Description 225ms
    [+] Examples 213ms
Describing Help
   Context Function - Remove-AADAppRegistrationCBAAuth
    [+] Synopsis 133ms
    [+] Description 178ms
    [+] Examples 178ms
Describing Help
   Context Function - remove-AADUserLicense
    [+] Synopsis 205ms
    [+] Description 144ms
    [+] Examples 187ms
Describing Help
   Context Function - Remove-MsolUserDirectLicenses
    [+] Synopsis 134ms
    [+] Description 176ms
    [+] Examples 122ms
Describing Help
   Context Function - resolve-GuestExternalAddr2UPN
    [+] Synopsis 181ms
    [+] Description 246ms
    [+] Examples 120ms
Describing Help
   Context Function - search-AADSignInReports
    [+] Synopsis 200ms
    [+] Description 132ms
    [+] Examples 182ms
Describing Help
   Context Function - search-GraphApiAAD
    [+] Synopsis 134ms
    [+] Description 226ms
    [+] Examples 182ms
Describing Help
   Context Function - set-AADUserUsageLocation
    [+] Synopsis 130ms
    [+] Description 190ms
    [+] Examples 123ms
Describing Help
   Context Function - test-AADUserIsLicensed
    [+] Synopsis 188ms
    [+] Description 123ms
    [+] Examples 245ms
Describing Help
   Context Function - test-AzureADSessionIsGlobalAdmin
    [+] Synopsis 197ms
    [+] Description 121ms
    [+] Examples 181ms
Describing Help
   Context Function - test-MsolUserLicenseDirectAssigned
    [+] Synopsis 129ms
    [+] Description 209ms
    [+] Examples 125ms
Describing Help
   Context Function - test-MsolUserLicenseGroupAssigned
    [+] Synopsis 244ms
    [+] Description 168ms
    [+] Examples 125ms
Describing Help
   Context Function - toggle-AADLicense
    [+] Synopsis 189ms
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...eName=verb-AAD}:PSObject) [Select-Object], 
PSArgumentException
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand
Select-Object : Property "Description" cannot be found.
At C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1:251 char:31
+ ...       Get-Help $_ | Select-Object -ExpandProperty Description | shoul ...
+                         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (@{examples=@{ex...eName=verb-AAD}:PSObject) [Select-Object], PSArgumentExce
   ption
    + FullyQualifiedErrorId : ExpandPropertyNotFound,Microsoft.PowerShell.Commands.SelectObjectCommand

PS>TerminatingError(): "Expected: value to not be empty"
>> TerminatingError(): "Expected: value to not be empty"
    [-] Description 215ms
      Expected: value to not be empty
      251:                 Get-Help $_ | Select-Object -ExpandProperty Description | should not benullorempty
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 251
    [+] Examples 212ms
Describing Help
   Context Function - Update-AADAppRegistrationKeyCertificate
    [+] Synopsis 140ms
    [+] Description 223ms
    [+] Examples 191ms
Describing Help
   Context Function - Wait-AADSync
    [+] Synopsis 129ms
    [+] Description 572ms
    [+] Examples 124ms
Describing General - Testing all scripts and modules against the Script Analyzer Rules
   Context Checking files to test exist and Invoke-ScriptAnalyzer cmdLet is available
    [+] Checking files exist to test. 23ms
    [+] Checking Invoke-ScriptAnalyzer exists. 21ms
Describing Testing against PSScriptAnalyzer rules
   Context PSSA Standard Rules
    [+] Should pass PSAlignAssignmentStatement 6.94s
    [!] Should pass PSAvoidUsingCmdletAliases 8ms
    [+] Should pass PSAvoidAssignmentToAutomaticVariable 15ms
PS>TerminatingError(): "Expected: {0}
But was:  {6}"
>> TerminatingError(): "Expected: {0}
But was:  {6}"
    [-] Should pass PSAvoidDefaultValueSwitchParameter 27ms
      Expected: {0}
      But was:  {6}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 318
PS>TerminatingError(): "Expected: {0}
But was:  {2}"
>> TerminatingError(): "Expected: {0}
But was:  {2}"
    [-] Should pass PSAvoidDefaultValueForMandatoryParameter 29ms
      Expected: {0}
      But was:  {2}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 318
PS>TerminatingError(): "Expected: {0}
But was:  {12}"
>> TerminatingError(): "Expected: {0}
But was:  {12}"
    [-] Should pass PSAvoidUsingEmptyCatchBlock 28ms
      Expected: {0}
      But was:  {12}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 318
    [+] Should pass PSAvoidExclaimOperator 29ms
    [+] Should pass PSAvoidGlobalAliases 18ms
    [+] Should pass PSAvoidGlobalFunctions 21ms
    [!] Should pass PSAvoidGlobalVars 7ms
    [+] Should pass PSAvoidInvokingEmptyMembers 15ms
    [+] Should pass PSAvoidLongLines 17ms
    [+] Should pass PSAvoidMultipleTypeAttributes 21ms
    [+] Should pass PSAvoidNullOrEmptyHelpMessageAttribute 19ms
    [+] Should pass PSAvoidOverwritingBuiltInCmdlets 24ms
    [+] Should pass PSAvoidUsingPositionalParameters 25ms
    [+] Should pass PSReservedCmdletChar 30ms
    [+] Should pass PSReservedParams 24ms
    [+] Should pass PSAvoidSemicolonsAsLineTerminators 24ms
    [+] Should pass PSAvoidShouldContinueWithoutForce 61ms
    [+] Should pass PSAvoidTrailingWhitespace 18ms
    [+] Should pass PSAvoidUsingUsernameAndPasswordParams 20ms
    [+] Should pass PSAvoidUsingAllowUnencryptedAuthentication 22ms
    [+] Should pass PSAvoidUsingBrokenHashAlgorithms 18ms
    [+] Should pass PSAvoidUsingComputerNameHardcoded 24ms
    [+] Should pass PSAvoidUsingConvertToSecureStringWithPlainText 16ms
    [+] Should pass PSAvoidUsingDeprecatedManifestFields 23ms
    [+] Should pass PSAvoidUsingDoubleQuotesForConstantString 19ms
PS>TerminatingError(): "Expected: {0}
But was:  {1}"
>> TerminatingError(): "Expected: {0}
But was:  {1}"
    [-] Should pass PSAvoidUsingInvokeExpression 21ms
      Expected: {0}
      But was:  {1}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 318
PS>TerminatingError(): "Expected: {0}
But was:  {4}"
>> TerminatingError(): "Expected: {0}
But was:  {4}"
    [-] Should pass PSAvoidUsingPlainTextForPassword 33ms
      Expected: {0}
      But was:  {4}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 318
    [+] Should pass PSAvoidUsingWMICmdlet 24ms
    [!] Should pass PSAvoidUsingWriteHost 8ms
    [+] Should pass PSUseCompatibleCommands 15ms
    [+] Should pass PSUseCompatibleSyntax 22ms
    [+] Should pass PSUseCompatibleTypes 22ms
    [+] Should pass PSMisleadingBacktick 19ms
    [+] Should pass PSMissingModuleManifestField 24ms
PS>TerminatingError(): "Expected: {0}
But was:  {246}"
>> TerminatingError(): "Expected: {0}
But was:  {246}"
    [-] Should pass PSPlaceCloseBrace 27ms
      Expected: {0}
      But was:  {246}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 318
PS>TerminatingError(): "Expected: {0}
But was:  {1}"
>> TerminatingError(): "Expected: {0}
But was:  {1}"
    [-] Should pass PSPlaceOpenBrace 31ms
      Expected: {0}
      But was:  {1}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 318
PS>TerminatingError(): "Expected: {0}
But was:  {22}"
>> TerminatingError(): "Expected: {0}
But was:  {22}"
    [-] Should pass PSPossibleIncorrectComparisonWithNull 30ms
      Expected: {0}
      But was:  {22}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 318
    [+] Should pass PSPossibleIncorrectUsageOfAssignmentOperator 30ms
    [+] Should pass PSPossibleIncorrectUsageOfRedirectionOperator 21ms
    [!] Should pass PSProvideCommentHelp 7ms
    [+] Should pass PSReviewUnusedParameter 15ms
    [!] Should pass PSUseApprovedVerbs 7ms
    [+] Should pass PSUseBOMForUnicodeEncodedFile 15ms
    [!] Should pass PSUseCmdletCorrectly 7ms
    [+] Should pass PSUseCompatibleCmdlets 15ms
    [+] Should pass PSUseConsistentIndentation 19ms
    [!] Should pass PSUseConsistentWhitespace 6ms
    [+] Should pass PSUseCorrectCasing 18ms
    [!] Should pass PSUseDeclaredVarsMoreThanAssignments 7ms
    [+] Should pass PSUseLiteralInitializerForHashtable 17ms
PS>TerminatingError(): "Expected: {0}
But was:  {11}"
>> TerminatingError(): "Expected: {0}
But was:  {11}"
    [-] Should pass PSUseOutputTypeCorrectly 18ms
      Expected: {0}
      But was:  {11}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 318
    [+] Should pass PSUseProcessBlockForPipelineCommand 32ms
PS>TerminatingError(): "Expected: {0}
But was:  {4}"
>> TerminatingError(): "Expected: {0}
But was:  {4}"
    [-] Should pass PSUsePSCredentialType 24ms
      Expected: {0}
      But was:  {4}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 318
    [+] Should pass PSShouldProcess 31ms
PS>TerminatingError(): "Expected: {0}
But was:  {18}"
>> TerminatingError(): "Expected: {0}
But was:  {18}"
    [-] Should pass PSUseShouldProcessForStateChangingFunctions 22ms
      Expected: {0}
      But was:  {18}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 318
PS>TerminatingError(): "Expected: {0}
But was:  {16}"
>> TerminatingError(): "Expected: {0}
But was:  {16}"
    [-] Should pass PSUseSingularNouns 30ms
      Expected: {0}
      But was:  {16}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 318
PS>TerminatingError(): "Expected: {0}
But was:  {20}"
>> TerminatingError(): "Expected: {0}
But was:  {20}"
    [-] Should pass PSUseSupportsShouldProcess 32ms
      Expected: {0}
      But was:  {20}
      318:                 ($Failures | Measure-Object).Count | Should Be 0
      at <ScriptBlock>, C:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: line 318
    [+] Should pass PSUseToExportFieldsInManifest 45ms
    [+] Should pass PSUseUsingScopeModifierInNewRunspaces 19ms
    [+] Should pass PSUseUTF8EncodingForHelpFile 28ms
    [+] Should pass PSDSCDscExamplesPresent 21ms
    [+] Should pass PSDSCDscTestsPresent 23ms
    [+] Should pass PSDSCReturnCorrectTypesForDSCFunctions 20ms
    [+] Should pass PSDSCUseIdenticalMandatoryParametersForDSC 25ms
    [+] Should pass PSDSCUseIdenticalParametersForDSC 23ms
    [+] Should pass PSDSCStandardDSCFunctionsInResource 22ms
    [+] Should pass PSDSCUseVerboseMessageInDSCResource 23ms
16:15:11:
#*------^ RUNNING c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1: ^------
16:15:11: INFO:  
---------------------------------------------------------------------------------
Processing completed: verb-AAD :: c:\sc\verb-AAD
- Script is currently installed (from PsRep: with scope:CurrentUser, under TORO\kadritss profile

- To update other scopes/accounts on same machine, or install on other machines:
    1. Uninstall current module copies:

        Uninstall-Module -Name verb-AAD) -AllVersion -whatif ;

    2. Install the current version (or higher) from the Repo:lyncRepo:

        install-Module -name verb-AAD -Repository lyncRepo -RequiredVersion 5.2.1 -scope currentuser -whatif ;

    3. Reimport the module with -force, to ensure the current installed verison is loaded:

        import-Module -name verb-AAD -force -verbose ;

#-=-=-Stacked list for the above: CURRENTUSER=-=-=-=-=-=
$whatif=$false ;  $tScop = 'CurrentUser' ; $tMod = 'verb-AAD' ; $tVer = '5.2.1' ;
if($env:WT_SESSION){
    write-warning "WARNING YOU'RE INSTALLING INTO POWERSHELL7!
THE MODULE WILL GO INTO \DOCS\POWERSHELL\MODULES
(vs \DOCS\WINDOWSPOWERSHELL\MODULES)!" ; 
    $bRet=Read-Host "Enter YYY to continue. Anything else will exit"  ; 
    if ($bRet.ToUpper() -eq "YYY") {} else {WRITE-WARNING "HALTING!" ; BREAK} ; 
} ; 
TRY {
    switch($tScop){
        'CurrentUser'{$ModPath = "$(split-path $profile)\Modules\$($tmod)" }
        'AllUsers' {$ModPath = "$($env:ProgramFiles)\WindowsPowerShell\Modules)\$($tmod)"} ; 
    } ;
    if($Repository = (Get-PSRepository -Name $localPSRepo -ea 'STOP').name){
        rmo -Name $tmod -ea 0 ;
        Uninstall-Module -Name $tmod -AllVersion -force -ea 0 -whatif:$($whatif);
        gi -path $ModPath -ea 0 |ri -Recurse -force -verbose  -whatif:$($whatif) ;
        if($thisVers = find-module -name $tmod -Repository $Repository -RequiredVersion $tVer){
            $thisvers  | ft -a Name,Version,Repository ; 
            $thisVers | install-Module -scope $tScop -Force -AllowClobber -ea 'STOP' -whatif:$($whatif) ;
        }else {
            throw "Unable to:find-module -name $($tmod) -Repository $($Repository) -RequiredVersion $($tVer)"
            break ; 
        } ; 
        rmo -Name $tmod -force -ea 0 ;
        ipmo -name $tmod -force -verbose -ea 'STOP'  ;
        gmo -name $tmod | ? version -ne $tVer | rmo -Force -Verbose ; 
        gmo -name $tmod -list ;
    } else {
        throw "Unable to resolve `lyncRepo to a configured local PSRepository" ;
    } ;
} CATCH {
    $ErrTrapd=$Error[0] ;
    $smsg = "
$(($ErrTrapd | fl * -Force|out-string).trim())" ;
    write-warning "$((get-date).ToString('HH:mm:ss')):$($smsg)" ;
} ;
#-=-=-=-=-=-=-=-=
#-=-=-Stacked list for the above: ALLUSERS=-=-=-=-=-=
$whatif=$false ; $tScop = 'AllUsers' ; $tMod = 'verb-AAD' ; $tVer = '5.2.1' ;  
if($env:WT_SESSION){
    write-warning "WARNING YOU'RE INSTALLING INTO POWERSHELL7!
THE MODULE WILL GO INTO \DOCS\POWERSHELL\MODULES
(vs \DOCS\WINDOWSPOWERSHELL\MODULES)!" ; 
    $bRet=Read-Host "Enter YYY to continue. Anything else will exit"  ; 
    if ($bRet.ToUpper() -eq "YYY") {} else {WRITE-WARNING "HALTING!" ; BREAK} ; 
} ; 
TRY {
    switch($tScop){
        'CurrentUser'{$ModPath = "$(split-path $profile)\Modules\$($tmod)" }
        'AllUsers' {$ModPath = "$($env:ProgramFiles)\WindowsPowerShell\Modules)\$($tmod)"} ; 
    } ;
    if($Repository = (Get-PSRepository -Name $localPSRepo -ea 'STOP').name){
        rmo -Name $tmod -ea 0 ;
        Uninstall-Module -Name $tmod -AllVersion -force -ea 0 -whatif:$($whatif);
        gi -path $ModPath -ea 0 |ri -Recurse -force -verbose  -whatif:$($whatif) ;
        if($thisVers = find-module -name $tmod -Repository $Repository -RequiredVersion $tVer){
            $thisvers  | ft -a Name,Version,Repository ; 
            $thisVers | install-Module -scope $tScop -Force -AllowClobber -ea 'STOP' -whatif:$($whatif) ;
        }else {
            throw "Unable to:find-module -name $($tmod) -Repository $($Repository) -RequiredVersion $($tVer)"
            break ; 
        } ; 
        rmo -Name $tmod -force -ea 0 ;
        ipmo -name $tmod -force -verbose -ea 'STOP'  ;
        gmo -name $tmod | ? version -ne $tVer | rmo -Force -Verbose ; 
        gmo -name $tmod -list ;
    } else {
        throw "Unable to resolve `lyncRepo to a configured local PSRepository" ;
    } ;
} CATCH {
    $ErrTrapd=$Error[0] ;
    $smsg = "
$(($ErrTrapd | fl * -Force|out-string).trim())" ;
    write-warning "$((get-date).ToString('HH:mm:ss')):$($smsg)" ;
} ;
#-=-=-=-=-=-=-=-=

- You may also want to run the configured Pester Tests of the new script:

        . c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1

Full Processing Details can be found in:

C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-AAD-LOG-BATCH-EXEC-20240923-1613PM-log.txt

---------------------------------------------------------------------------------
16:15:11: INFO:  
(Most recent processing log can be found at:c:\sc\verb-AAD\VERB-dev-verb-AAD-LOG-BATCH-EXEC-20240923-1613PM-log.txt)
(perm copy stored at:C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-AAD-LOG-BATCH-EXEC-20240923-1613PM-log.txt
16:15:11: INFO:  remove-UnneededFileVariants w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-AAD                                                                               
Include                        VERB-dev-verb-AAD-LOG-BATCH-*-log.txt                                                        
Pattern                                                                                                                     
FilterOn                       CreationTime                                                                                 
Keep                           2                                                                                            
KeepToday                      True                                                                                         
verbose                        True                                                                                         
whatif                         False
16:15:11:gci w
Name                           Value                                                                                        
----                           -----                                                                                        
path                           c:\sc\verb-AAD\*                                                                             
include                        VERB-dev-verb-AAD-LOG-BATCH-*-log.txt                                                        
ErrorAction                    Stop
VERBOSE: $cuttime:09/23/2024 00:00:00
VERBOSE: filtering on files prior to $cuttime:09/23/2024 00:00:00 AM, on CreationTime property
(1 in set *before* filtering)
(0 in set *after* filtering)
VERBOSE: attempting to retain remaining 2 generations net of prior filtering
(0 in set *before* filtering)
(0 in set *after* filtering)
(Note:net population is *below* target -Keep:2 spec - insufficient older files available)
16:15:11:Reducing matched population from 1 to 0 files via:
filtered files on CreationTime prior to 09/23/2024 00:00:00 AM
16:15:11:There are *no* files to be removed, as per the specified inputs. ($population:0)
16:15:11: INFO:  #*======^ VERB-dev.psm1:verb-AAD ^======
16:15:11:
#*------^ (1/1):PROC:verb-AAD: ^------
16:15:11:
#*======^ RUNNING processbulk-NewModule.ps1 ^======

▒
▒
▒
░
░

LYN-9C5CTV3
 ▓▒▓
TORO\kadritss
 ▓▒▓
Mon 09/23/2024 16:15
 [00:03:24]

▒
▒
▒
▒
▒

[PS]
:
C:\u\w\p\scripts

$




PS>gc C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-AAD-LOG-BATCH-EXEC-20240923-1613PM-log.txt
2024-09-23 16:13:47 INFO:  : #*======v VERB-dev.psm1:verb-AAD v======
2024-09-23 16:13:47 VERBOSE:  : $modRoot is blank, assigning from mandetory param:$ModDirPath
2024-09-23 16:13:47 INFO:  : Run: reset-ModulePublishingDirectory -ModuleName verb-AAD
2024-09-23 16:13:47 ##  :
#*------v PROCESSING : verb-AAD v------
2024-09-23 16:13:47 INFO:  : Pre-purge (CHANGELOG|README)\.md$ Root dir matches from :
2024-09-23 16:13:47 INFO:  : verb-AAD resolved $ModPubPath:C:\sc\verb-AAD\verb-AAD\
$ModResPath:C:\sc\verb-AAD\Resource\
2024-09-23 16:13:47 VERBOSE:  : Reset module Resource files (purge from C:\sc\verb-AAD\verb-AAD\)
2024-09-23 16:13:47 INFO:  : verb-AAD resolved $ModPubPath:C:\sc\verb-AAD\verb-AAD\
$ModResPath:C:\sc\verb-AAD\Licenses\
2024-09-23 16:13:47 VERBOSE:  : Reset module Licenses files (purge from C:\sc\verb-AAD\verb-AAD\)
2024-09-23 16:13:47 INFO:  : verb-AAD resolved $ModPubPath:C:\sc\verb-AAD\verb-AAD\
$ModResPath:C:\sc\verb-AAD\Docs\
2024-09-23 16:13:47 VERBOSE:  : Reset module Docs files (purge from C:\sc\verb-AAD\verb-AAD\)
2024-09-23 16:13:47 INFO:  : ==C:\sc\verb-AAD\CHANGELOG.md:
2024-09-23 16:13:47 INFO:  : ==C:\sc\verb-AAD\README.md:
2024-09-23 16:13:47 INFO:  : ==C:\sc\verb-AAD\Docs\Quick-Start-Installation-and-Example.md:
2024-09-23 16:13:47 ##  :
#*------^ PROCESSING : verb-AAD ^------
2024-09-23 16:13:47 INFO:  : Run: populate-ModulePublishingDirectory -ModuleName verb-AAD
2024-09-23 16:13:47 ##  :
#*------v PROCESSING : verb-AAD v------
2024-09-23 16:13:47 INFO:  : Locating (CHANGELOG|README)\.md$ Root dir matches from :
2024-09-23 16:13:47 INFO:  : verb-AAD resolved $ModPubPath:C:\sc\verb-AAD\verb-AAD\
$ModResPath:C:\sc\verb-AAD\Resource\
2024-09-23 16:13:47 VERBOSE:  : Recopy module Resource files (copy from C:\sc\verb-AAD\verb-AAD\)
2024-09-23 16:13:47 INFO:  : verb-AAD resolved $ModPubPath:C:\sc\verb-AAD\verb-AAD\
$ModResPath:C:\sc\verb-AAD\Licenses\
2024-09-23 16:13:47 VERBOSE:  : Recopy module Licenses files (copy from C:\sc\verb-AAD\verb-AAD\)
2024-09-23 16:13:47 INFO:  : verb-AAD resolved $ModPubPath:C:\sc\verb-AAD\verb-AAD\
$ModResPath:C:\sc\verb-AAD\Docs\
2024-09-23 16:13:47 VERBOSE:  : Recopy module Docs files (copy from C:\sc\verb-AAD\verb-AAD\)
2024-09-23 16:13:47 INFO:  : copy-item w
Name                           Value
----                           -----
path                           {C:\sc\verb-AAD\CHANGELOG.md, C:\sc\verb-AAD\README.md, C:\sc\verb-AAD\Docs\Quick-Start-In...
destination                    C:\sc\verb-AAD\verb-AAD\
force                          True
erroraction                    STOP
verbose                        True
whatif                         False
--$pltCI.path:
C:\sc\verb-AAD\CHANGELOG.md
C:\sc\verb-AAD\README.md
C:\sc\verb-AAD\Docs\Quick-Start-Installation-and-Example.md
2024-09-23 16:13:47 ##  :
#*------^ PROCESSING : verb-AAD ^------
2024-09-23 16:13:47 INFO:  : Validate updated verb-AAD\verb-AAD dir contents against Manifest:
Run: test-modulemanifest -Path C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
2024-09-23 16:13:47 VERBOSE:  : (no $ttmm_Err: test-ModuleManifest had no errors)
2024-09-23 16:13:47 INFO:  : NON-Republish pass detected:
MERGE parm specified as well:`n-Merge Public|Internal|Classes include subdirs module content into updated .psm1
-Sign updated files.
-Uninstall/Remove existing profile module
-Copy new module to profile
-Confirm: Get-Module -ListAvailable
-Check/Update existing Psd1 Version
-Publish-Module
-Remove existing installed profile module
-Test Install-Module
-Test Import-Module
2024-09-23 16:13:47 INFO:  : -Merge specified...
2024-09-23 16:13:47 INFO:  : ConvertTo-ModuleMergedTDO w
Name                           Value
----                           -----
ModuleName                     verb-AAD
ModuleSourcePath               {c:\sc\verb-AAD\Public, c:\sc\verb-AAD\Internal}
ModuleDestinationPath          c:\sc\verb-AAD\verb-AAD
RequiredVersion                5.2.1
LogSpec                        {logging, logfile, transcript}
NoAliasExport
ErrorAction                    Stop
showdebug                      False
whatif                         False
2024-09-23 16:13:47 INFO:  : ConvertTo-ModuleMergedTDO w
Name                           Value
----                           -----
ModuleName                     verb-AAD
ModuleSourcePath               {c:\sc\verb-AAD\Public, c:\sc\verb-AAD\Internal}
ModuleDestinationPath          c:\sc\verb-AAD\verb-AAD
RequiredVersion                5.2.1
LogSpec                        {logging, logfile, transcript}
NoAliasExport
ErrorAction                    Stop
showdebug                      False
whatif                         False
2024-09-23 16:13:48 INFO:  : (NON-dyn psm1 detected - purging existing non-CBH content...)
2024-09-23 16:13:48 INFO:  : Initialize-PSModuleDirectories w
Name                           Value
----                           -----
ModuleSourcePath               {c:\sc\verb-AAD\Public, c:\sc\verb-AAD\Internal}
ModuleDestinationPath          c:\sc\verb-AAD\verb-AAD
ErrorAction                    Stop
whatif                         False
2024-09-23 16:13:48 INFO:  :
#*------v (1/2):C:\sc\verb-AAD\Public v------
2024-09-23 16:13:48 INFO:  : Processing 54 $ComponentScripts files through Remove-AuthenticodeSignature...
2024-09-23 16:13:48 INFO:  : Remove-AuthenticodeSignature w
Name                           Value
----                           -----
Path                           {C:\sc\verb-AAD\Public\add-AADUserLicense.ps1, C:\sc\verb-AAD\Public\Add-ADALType.ps1, C:\...
whatif                         False
verbose                        True
2024-09-23 16:13:48 INFO:  : Processing (1/54):C:\sc\verb-AAD\Public\add-AADUserLicense.ps1...
2024-09-23 16:13:48 INFO:  : Processing (2/54):C:\sc\verb-AAD\Public\Add-ADALType.ps1...
2024-09-23 16:13:48 INFO:  : Processing (3/54):C:\sc\verb-AAD\Public\caadCMW.ps1...
2024-09-23 16:13:48 INFO:  : Processing (4/54):C:\sc\verb-AAD\Public\caadTOL.ps1...
2024-09-23 16:13:48 INFO:  : Processing (5/54):C:\sc\verb-AAD\Public\caadTOR.ps1...
2024-09-23 16:13:48 INFO:  : Processing (6/54):C:\sc\verb-AAD\Public\caadVEN.ps1...
2024-09-23 16:13:48 INFO:  : Processing (7/54):C:\sc\verb-AAD\Public\cmsolCMW.ps1...
2024-09-23 16:13:48 INFO:  : Processing (8/54):C:\sc\verb-AAD\Public\cmsolTOL.ps1...
2024-09-23 16:13:48 INFO:  : Processing (9/54):C:\sc\verb-AAD\Public\cmsolTOR.ps1...
2024-09-23 16:13:48 INFO:  : Processing (10/54):C:\sc\verb-AAD\Public\cmsolVEN.ps1...
2024-09-23 16:13:48 INFO:  : Processing (11/54):C:\sc\verb-AAD\Public\Connect-AAD.ps1...
2024-09-23 16:13:49 INFO:  : Processing (12/54):C:\sc\verb-AAD\Public\connect-AzureRM.ps1...
2024-09-23 16:13:49 INFO:  : Processing (13/54):C:\sc\verb-AAD\Public\Connect-MSOL.ps1...
2024-09-23 16:13:49 INFO:  : Processing (14/54):C:\sc\verb-AAD\Public\convert-AADUImmuntableIDToADUObjectGUID.ps1...
2024-09-23 16:13:49 INFO:  : Processing (15/54):C:\sc\verb-AAD\Public\convert-ADUObjectGUIDToAADUImmuntableID.ps1...
2024-09-23 16:13:49 INFO:  : Processing (16/54):C:\sc\verb-AAD\Public\Disconnect-AAD.ps1...
2024-09-23 16:13:49 INFO:  : Processing (17/54):C:\sc\verb-AAD\Public\get-AADBearerToken.ps1...
2024-09-23 16:13:49 INFO:  : Processing (18/54):C:\sc\verb-AAD\Public\get-AADBearerTokenHeaders.ps1...
2024-09-23 16:13:49 INFO:  : Processing (19/54):C:\sc\verb-AAD\Public\get-AADCertToken.ps1...
2024-09-23 16:13:49 INFO:  : Processing (20/54):C:\sc\verb-AAD\Public\get-AADLastSync.ps1...
2024-09-23 16:13:49 INFO:  : Processing (21/54):C:\sc\verb-AAD\Public\get-AADLicenseFullName.ps1...
2024-09-23 16:13:49 INFO:  : Processing (22/54):C:\sc\verb-AAD\Public\get-AADlicensePlanList.ps1...
2024-09-23 16:13:49 INFO:  : Processing (23/54):C:\sc\verb-AAD\Public\get-AADToken.ps1...
2024-09-23 16:13:49 INFO:  : Processing (24/54):C:\sc\verb-AAD\Public\get-AADTokenHeaders.ps1...
2024-09-23 16:13:49 INFO:  : Processing (25/54):C:\sc\verb-AAD\Public\get-AADUser.ps1...
2024-09-23 16:13:49 INFO:  : Processing (26/54):C:\sc\verb-AAD\Public\get-AADUserLastSync.ps1...
2024-09-23 16:13:49 INFO:  : Processing (27/54):C:\sc\verb-AAD\Public\get-AADUserLicenseDetails.ps1...
2024-09-23 16:13:49 INFO:  : Processing (28/54):C:\sc\verb-AAD\Public\Get-DsRegStatus .ps1...
2024-09-23 16:13:49 INFO:  : Processing (29/54):C:\sc\verb-AAD\Public\Get-JWTDetails.ps1...
2024-09-23 16:13:49 INFO:  : Processing (30/54):C:\sc\verb-AAD\Public\Get-MsolDisabledPlansForSKU.ps1...
2024-09-23 16:13:49 INFO:  : Processing (31/54):C:\sc\verb-AAD\Public\Get-MsolUnexpectedEnabledPlansForUser.ps1...
2024-09-23 16:13:49 INFO:  : Processing (32/54):C:\sc\verb-AAD\Public\Get-MsolUserLicense.ps1...
2024-09-23 16:13:49 INFO:  : Processing (33/54):C:\sc\verb-AAD\Public\get-MsolUserLicenseDetails.ps1...
2024-09-23 16:13:49 INFO:  : Processing (34/54):C:\sc\verb-AAD\Public\Get-ServiceToken.ps1...
2024-09-23 16:13:49 INFO:  : Processing (35/54):C:\sc\verb-AAD\Public\Get-TokenCache.ps1...
2024-09-23 16:13:49 INFO:  : Processing (36/54):C:\sc\verb-AAD\Public\import-AADAppRegistrationPFX.ps1...
2024-09-23 16:13:49 INFO:  : Processing (37/54):C:\sc\verb-AAD\Public\Initialize-AADSignErrorsHash.ps1...
2024-09-23 16:13:49 INFO:  : Processing (38/54):C:\sc\verb-AAD\Public\New-AADAppAuthCertificate.ps1...
2024-09-23 16:13:49 INFO:  : Processing (39/54):C:\sc\verb-AAD\Public\New-AADAppPermissionsObject.ps1...
2024-09-23 16:13:49 INFO:  : Processing (40/54):C:\sc\verb-AAD\Public\profile-AAD-Signons.ps1...
2024-09-23 16:13:50 INFO:  : Processing (41/54):C:\sc\verb-AAD\Public\Remove-AADAppRegistrationCBAAuth.ps1...
2024-09-23 16:13:50 INFO:  : Processing (42/54):C:\sc\verb-AAD\Public\remove-AADUserLicense.ps1...
2024-09-23 16:13:50 INFO:  : Processing (43/54):C:\sc\verb-AAD\Public\Remove-MsolUserDirectLicenses.ps1...
2024-09-23 16:13:50 INFO:  : Processing (44/54):C:\sc\verb-AAD\Public\resolve-GuestExternalAddr2UPN.ps1...
2024-09-23 16:13:50 INFO:  : Processing (45/54):C:\sc\verb-AAD\Public\search-AADSignInReports.ps1...
2024-09-23 16:13:50 INFO:  : Processing (46/54):C:\sc\verb-AAD\Public\search-GraphApiAAD.ps1...
2024-09-23 16:13:50 INFO:  : Processing (47/54):C:\sc\verb-AAD\Public\set-AADUserUsageLocation.ps1...
2024-09-23 16:13:50 INFO:  : Processing (48/54):C:\sc\verb-AAD\Public\test-AADUserIsLicensed.ps1...
2024-09-23 16:13:50 INFO:  : Processing (49/54):C:\sc\verb-AAD\Public\test-AzureADSessionIsGlobalAdmin.ps1...
2024-09-23 16:13:50 INFO:  : Processing (50/54):C:\sc\verb-AAD\Public\test-MsolUserLicenseDirectAssigned.ps1...
2024-09-23 16:13:50 INFO:  : Processing (51/54):C:\sc\verb-AAD\Public\test-MsolUserLicenseGroupAssigned.ps1...
2024-09-23 16:13:50 INFO:  : Processing (52/54):C:\sc\verb-AAD\Public\toggle-AADLicense.ps1...
2024-09-23 16:13:50 INFO:  : Processing (53/54):C:\sc\verb-AAD\Public\Update-AADAppRegistrationKeyCertificate.ps1...
2024-09-23 16:13:50 INFO:  : Processing (54/54):C:\sc\verb-AAD\Public\Wait-AADSync.ps1...
2024-09-23 16:13:50 INFO:  :
#*------^ (1/2):C:\sc\verb-AAD\Public ^------
2024-09-23 16:13:50 INFO:  :
#*------v (2/2):C:\sc\verb-AAD\Internal v------
2024-09-23 16:13:50 INFO:  : Processing 0 $ComponentScripts files through Remove-AuthenticodeSignature...
2024-09-23 16:13:50 INFO:  : Remove-AuthenticodeSignature w
Name                           Value
----                           -----
Path
whatif                         False
verbose                        True
2024-09-23 16:13:50 INFO:  :
#*------^ (2/2):C:\sc\verb-AAD\Internal ^------
2024-09-23 16:13:50 INFO:  : (Updating Psm1 Export-ModuleMember -Function to reflect Public modules)
2024-09-23 16:13:50 INFO:  : Adding:FooterBlock...
2024-09-23 16:13:50 INFO:  : Updating the Psd1 FunctionsToExport to match
2024-09-23 16:13:50 INFO:  : confirm-ModuleBuildSync w
Name                           Value
----                           -----
ModPsdPath                     c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP
RequiredVersion                5.2.1
NoTest                         True
whatif                         False
verbose                        True
2024-09-23 16:13:50 INFO:  : #*======v confirm-ModuleBuildSync:  v======
2024-09-23 16:13:50 INFO:  : (test-path confirms $ModPsm1 & $ModTestPs1)
2024-09-23 16:13:50 INFO:  : Import-PowerShellDataFile w
Name                           Value
----                           -----
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP
ErrorAction                    Stop
verbose                        True
2024-09-23 16:13:50 INFO:  : (resolved Module attributes:
$ModuleName:	verb-AAD
$ModRoot:	c:\sc\verb-AAD
$ModPsd1:	c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP
$ModPsm1:	c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP
$ModTestPs1:	c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1
$psd1Vers:	5.2.1
$psd1guid:	647915ee-f880-4c69-b2b5-881abda1aa86)
2024-09-23 16:13:50 INFO:  : confirm-ModulePsd1Version w
Name                           Value
----                           -----
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP
RequiredVersion                5.2.1
whatif                         False
verbose                        True
2024-09-23 16:13:51 INFO:  : #*======v confirm-ModulePsd1Version: c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP v======
2024-09-23 16:13:51 INFO:  : (Version already updated to match)
2024-09-23 16:13:51 INFO:  : $objReport
Name                           Value
----                           -----
Version                        5.2.1
Valid                          False
2024-09-23 16:13:51 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:13:51 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Version                        5.2.1
Valid                          True
2024-09-23 16:13:51 INFO:  : #*======^ confirm-ModulePsd1Version: c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP ^======
2024-09-23 16:13:51 INFO:  : (confirm-ModulePsd1Version:Success)
2024-09-23 16:13:51 INFO:  : confirm-ModulePsm1Version w
Name                           Value
----                           -----
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP
RequiredVersion                5.2.1
whatif                         False
verbose                        True
2024-09-23 16:13:51 INFO:  : #*======v confirm-ModulePsm1Version: c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP v======
2024-09-23 16:13:51 WARNING:  : In:c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP
Version present:(5.2.0)
*does not* properly match:5.2.1
FORCING MATCHING UPDATE!
2024-09-23 16:13:51 INFO:  : $objReport
Name                           Value
----                           -----
Version                        5.2.1
Valid                          False
2024-09-23 16:13:51 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:13:51 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Version                        5.2.1
Valid                          True
2024-09-23 16:13:51 INFO:  : #*======^ confirm-ModulePsm1Version: c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP ^======
2024-09-23 16:13:51 INFO:  : (confirm-ModulePsm1Version:Success)
2024-09-23 16:13:51 INFO:  : (-NoTest: skipping confirm-ModuleTestPs1Guid)
2024-09-23 16:13:51 INFO:  : $objReport
Name                           Value
----                           -----
Manifest                       c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP
Module                         c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP
Pester                         (SKIPPED)
Guid                           (SKIPPED)
Version                        5.2.1
Valid                          False
2024-09-23 16:13:51 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:13:51 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Manifest                       c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP
Module                         c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP
Pester                         (SKIPPED)
Guid                           (SKIPPED)
Version                        5.2.1
Valid                          True
2024-09-23 16:13:51 INFO:  : #*======^ confirm-ModuleBuildSync:  ^======
2024-09-23 16:13:51 INFO:  : (confirm-ModuleBuildSync:Success)
2024-09-23 16:13:51 INFO:  : Test-ModuleTMPFiles w
Name                           Value
----                           -----
ModuleNamePSM1Path             c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP
verbose                        True
2024-09-23 16:13:51 INFO:  : #*======v Test-ModuleTMPFiles: c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP v======
2024-09-23 16:13:51 INFO:  :
Psm1:c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP
Psd1:c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP
2024-09-23 16:13:51 INFO:  : Creating Testable c:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psd1
 to validate c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP will Test-ModuleManifest
2024-09-23 16:13:51 INFO:  : Test-ModuleManifest w
Name                           Value
----                           -----
verbose                        True
Path                           c:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psd1
ErrorVariable                  vManiErr
ErrorAction                    STOP
2024-09-23 16:13:51 INFO:  : Test-ModuleManifest:PASSED
2024-09-23 16:13:51 INFO:  : Creating Testable c:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psm1
 to validate c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP will Import-Module
2024-09-23 16:13:51 INFO:  : n import-module w
Name                           Value
----                           -----
Name                           c:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psm1
Force                          True
verbose                        True
ErrorAction                    STOP
ErrorVariable                  vIpMoErr
PassThru                       True
2024-09-23 16:13:51 INFO:  : Ipmo: PASSED
2024-09-23 16:13:51 INFO:  : (remove-module -name c:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psm1 -force)
2024-09-23 16:13:51 INFO:  : (remove-item -path c:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psm1 -ErrorAction SilentlyContinue ;
2024-09-23 16:13:51 INFO:  : (remove-item -path c:\sc\verb-AAD\verb-AAD\2dffb35c-2549-457d-abc1-b32e39cd8c35.psd1 -ErrorAction SilentlyContinue ;
2024-09-23 16:13:51 INFO:  : $objReport
Name                           Value
----                           -----
Manifest                       2dffb35c-2549-457d-abc1-b32e39cd8c35
Module                         2dffb35c-2549-457d-abc1-b32e39cd8c35
Valid                          False
2024-09-23 16:13:51 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:13:51 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Manifest                       2dffb35c-2549-457d-abc1-b32e39cd8c35
Module                         2dffb35c-2549-457d-abc1-b32e39cd8c35
Valid                          True
2024-09-23 16:13:51 INFO:  : #*======^ Test-ModuleTMPFiles: c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP ^======
2024-09-23 16:13:51 INFO:  : Processing error free: Overwriting temp .psm1 with temp copy
copy-item w
Name                           Value
----                           -----
Destination                    c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psm1_TMP
whatif                         False
ErrorAction                    STOP
2024-09-23 16:13:51 INFO:  : Processing error free: Overwriting temp .psd1 with temp copy
copy-item w
Name                           Value
----                           -----
Destination                    c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
Path                           c:\sc\verb-AAD\verb-AAD\verb-AAD.psd1_TMP
whatif                         False
ErrorAction                    STOP
2024-09-23 16:13:51 INFO:  : #*======^ ConvertTo-ModuleMergedTDO: ^======
2024-09-23 16:13:52 VERBOSE:  : (no $ttmm_Err: test-ModuleManifest had no errors)
2024-09-23 16:13:52 INFO:  : (Test-ModuleManifest:PASSED)
2024-09-23 16:13:52 INFO:  : Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1
2024-09-23 16:13:52 INFO:  : confirm-ModuleBuildSync w
Name                           Value
----                           -----
ModPsdPath                     C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
RequiredVersion                5.2.1
whatif                         False
verbose                        True
2024-09-23 16:13:52 INFO:  : #*======v confirm-ModuleBuildSync:  v======
2024-09-23 16:13:52 INFO:  : (test-path confirms $ModPsm1 & $ModTestPs1)
2024-09-23 16:13:52 INFO:  : Import-PowerShellDataFile w
Name                           Value
----                           -----
Path                           C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
ErrorAction                    Stop
verbose                        True
2024-09-23 16:13:52 INFO:  : (resolved Module attributes:
$ModuleName:	verb-AAD
$ModRoot:	c:\sc\verb-AAD
$ModPsd1:	C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
$ModPsm1:	C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1
$ModTestPs1:	c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1
$psd1Vers:	5.2.1
$psd1guid:	647915ee-f880-4c69-b2b5-881abda1aa86)
2024-09-23 16:13:52 INFO:  : confirm-ModulePsd1Version w
Name                           Value
----                           -----
Path                           C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
RequiredVersion                5.2.1
whatif                         False
verbose                        True
2024-09-23 16:13:52 INFO:  : #*======v confirm-ModulePsd1Version: C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1 v======
2024-09-23 16:13:52 INFO:  : (Version already updated to match)
2024-09-23 16:13:52 INFO:  : $objReport
Name                           Value
----                           -----
Version                        5.2.1
Valid                          False
2024-09-23 16:13:52 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:13:52 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Version                        5.2.1
Valid                          True
2024-09-23 16:13:52 INFO:  : #*======^ confirm-ModulePsd1Version: C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1 ^======
2024-09-23 16:13:52 INFO:  : (confirm-ModulePsd1Version:Success)
2024-09-23 16:13:52 INFO:  : confirm-ModulePsm1Version w
Name                           Value
----                           -----
Path                           C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1
RequiredVersion                5.2.1
whatif                         False
verbose                        True
2024-09-23 16:13:52 INFO:  : #*======v confirm-ModulePsm1Version: C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1 v======
2024-09-23 16:13:52 INFO:  : (Version already updated to match)
2024-09-23 16:13:52 INFO:  : $objReport
Name                           Value
----                           -----
Version                        5.2.1
Valid                          False
2024-09-23 16:13:52 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:13:52 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Version                        5.2.1
Valid                          True
2024-09-23 16:13:52 INFO:  : #*======^ confirm-ModulePsm1Version: C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1 ^======
2024-09-23 16:13:52 INFO:  : (confirm-ModulePsm1Version:Success)
2024-09-23 16:13:52 INFO:  : Checking sync of Psd1 module guid to the Pester Test Script: c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1
2024-09-23 16:13:52 INFO:  : confirm-ModuleTestPs1Guid w
Name                           Value
----                           -----
Path                           c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1
RequiredGuid                   647915ee-f880-4c69-b2b5-881abda1aa86
whatif                         False
verbose                        True
2024-09-23 16:13:52 INFO:  : #*======v confirm-ModuleTestPs1Guid: c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1 v======
2024-09-23 16:13:52 INFO:  : (Guid  already updated to match)
2024-09-23 16:13:52 INFO:  : $objReport
Name                           Value
----                           -----
Guid                           647915ee-f880-4c69-b2b5-881abda1aa86
Valid                          False
2024-09-23 16:13:52 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:13:52 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Guid                           647915ee-f880-4c69-b2b5-881abda1aa86
Valid                          True
2024-09-23 16:13:52 INFO:  : #*======^ confirm-ModuleTestPs1Guid: c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1 ^======
2024-09-23 16:13:52 INFO:  : (confirm-ModuleTestPs1Guid:Success)
2024-09-23 16:13:52 INFO:  : $objReport
Name                           Value
----                           -----
Manifest                       C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
Module                         C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1
Pester                         c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1
Guid                           647915ee-f880-4c69-b2b5-881abda1aa86
Version                        5.2.1
Valid                          False
2024-09-23 16:13:52 INFO:  : (SET:$objReport.Valid = $true ;)
2024-09-23 16:13:52 INFO:  : (PIPELINE:New-Object PSObject -Property $objReport | write-output)
$objReport
Name                           Value
----                           -----
Manifest                       C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
Module                         C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1
Pester                         c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1
Guid                           647915ee-f880-4c69-b2b5-881abda1aa86
Version                        5.2.1
Valid                          True
2024-09-23 16:13:52 INFO:  : #*======^ confirm-ModuleBuildSync:  ^======
2024-09-23 16:13:52 INFO:  : (confirm-ModuleBuildSync:Success)
2024-09-23 16:13:52 VERBOSE:  : $Psd1filelist populated: export-cliXML:c:\sc\verb-AAD\Psd1filelist
2024-09-23 16:13:52 INFO:  : Updating the Psd1 FileList to with populated $Psd1filelist...
2024-09-23 16:13:52 INFO:  : Signing appropriate files...
2024-09-23 16:13:52 INFO:  : set-AuthenticodeSignatureTDO w
Name                           Value
----                           -----
file                           {C:\sc\verb-AAD\rebuild-module.ps1, C:\sc\verb-AAD\requirements.psd1, C:\sc\verb-AAD\Tests...
ErrorAction                    Stop
whatif                         False
2024-09-23 16:13:52 INFO:  : Removing existing profile verb-AAD content...
2024-09-23 16:13:52 INFO:  : Uninstall-ModuleForce w
Name                           Value
----                           -----
ModuleName                     verb-AAD
Verbose                        True
whatif                         False
2024-09-23 16:13:55 INFO:  :
#*------v Uninstall PSGet Mod:verb-AAD:v5.2.0 v------
2024-09-23 16:13:55 INFO:  : Uninstall-Script w
Name                           Value
----                           -----
Force                          True
Whatif                         False
Verbose                        True
2024-09-23 16:14:09 INFO:  :
#*------^ Uninstall PSGet Mod:verb-AAD:v5.2.0 ^------
2024-09-23 16:14:09 INFO:  : (Processing $env:PSModulePath paths, for surviving locked copies of verb-AAD to *manually* purge...)
2024-09-23 16:14:09 INFO:  : Checking: verb-AAD below: C:\Users\kadritss\Documents\WindowsPowerShell\Modules...
2024-09-23 16:14:09 INFO:  : Checking: verb-AAD below: C:\ProgramData\Boxstarter...
2024-09-23 16:14:09 INFO:  : Checking: verb-AAD below: C:\Program Files\WindowsPowerShell\Modules...
2024-09-23 16:14:09 INFO:  : Checking: verb-AAD below: C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules...
2024-09-23 16:14:09 INFO:  : Checking: verb-AAD below: C:\Program Files (x86)\AutoIt3\AutoItX...
2024-09-23 16:14:09 INFO:  : (no $sRet returned on call)
2024-09-23 16:14:09 INFO:  : Copying module to profile (net of .git & .vscode dirs, and backed up content)...
2024-09-23 16:14:09 INFO:  : $srcFiles:post-filter out:
\\(Package|Tests|logs)\\|(\.ps[dm]1_(\d+-\d+[AP]M|TMP)|-LOG-BATCH-EXEC-\d+-\d+[AP]M-log\.txt|\\(fingerprint|Psd1filelist))$
2024-09-23 16:14:09 INFO:  : Discovered mod-copy files ($srcFiles.fullname):w
C:\sc\verb-AAD\verb-AAD\ABOUT_verb-AAD.help.txt
C:\sc\verb-AAD\verb-AAD\CHANGELOG.md
C:\sc\verb-AAD\verb-AAD\LICENSE.txt
C:\sc\verb-AAD\verb-AAD\Quick-Start-Installation-and-Example.md
C:\sc\verb-AAD\verb-AAD\README.md
C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
C:\sc\verb-AAD\verb-AAD\verb-AAD.psm1
2024-09-23 16:14:09 INFO:  : Non-Pre-existing:$to:C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD
Pre-creating before copy...
2024-09-23 16:14:09 INFO:  : Mode   LastWriteTime        Length Name
----   -------------        ------ ----
d----- 9/23/2024 4:14:09 PM        verb-AAD
2024-09-23 16:14:09 INFO:  : -Merge:exclude $MergeBuildExcl \\(Public|Internal|External|Private)\\.*.ps1$ files from temp build copy
2024-09-23 16:14:09 INFO:  : Recursively remove empty subdirs below C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD...
2024-09-23 16:14:09 INFO:  : Move/Flatten Resource etc files into root of temp Build dir...
2024-09-23 16:14:09 INFO:  : Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD COPY of Quick-Start-Installation-and-Example.md
2024-09-23 16:14:09 INFO:  : Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD COPY of ABOUT_verb-AAD.help.txt
2024-09-23 16:14:09 INFO:  : Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD COPY of CHANGELOG.md
2024-09-23 16:14:09 INFO:  : Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD COPY of LICENSE.txt
2024-09-23 16:14:09 INFO:  : Unable to locate a problematic temp mod dir C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-AAD\verb-AAD COPY of README.md
2024-09-23 16:14:09 INFO:  : copy/Flatten Resource etc files into source root c:\sc\verb-AAD\verb-AAD dir...
2024-09-23 16:14:10 INFO:  : Resolved $ModPsdPath:
C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
2024-09-23 16:14:10 VERBOSE:  : resolve-path the CUMods verb-AAD.psd1 location
2024-09-23 16:14:10 INFO:  :
==Verifying CU:Mods\verb-AAD\verb-AAD\Quick-Start-Installation-and-Example.md:
2024-09-23 16:14:10 INFO:  :
==Verifying CU:Mods\verb-AAD\verb-AAD\ABOUT_verb-AAD.help.txt:
2024-09-23 16:14:10 INFO:  :
==Verifying CU:Mods\verb-AAD\verb-AAD\CHANGELOG.md:
2024-09-23 16:14:10 INFO:  :
==Verifying CU:Mods\verb-AAD\verb-AAD\LICENSE.txt:
2024-09-23 16:14:10 INFO:  :
==Verifying CU:Mods\verb-AAD\verb-AAD\README.md:
2024-09-23 16:14:10 INFO:  : Running pre-Publish-Module .psd1 test:
Test-ModuleManifest -path C:\sc\verb-AAD\verb-AAD\verb-AAD.psd1
2024-09-23 16:14:10 VERBOSE:  : (no $ttmm_Err: test-ModuleManifest had no errors)
2024-09-23 16:14:10 INFO:  : (Test-ModuleManifest:PASSED)
2024-09-23 16:14:10 INFO:  : (Profiling Repo: get-PSRepository -name lyncRepo...)
2024-09-23 16:14:10 VERBOSE:  : (confirmed:$tRepo.PublishLocation accessible)
2024-09-23 16:14:10 INFO:  :
Publish-Module w
Name                           Value
----                           -----
Name                           verb-AAD
Repository                     lyncRepo
RequiredVersion                5.2.1
Verbose                        True
ErrorAction                    Stop
errorVariable                  pbmo_Err
whatif                         False
2024-09-23 16:14:22 WARNING:  :  FOUND $pbmo_Err: import-module HAD ERRORS! (no action, could be non-impacting)
2024-09-23 16:14:22 WARNING:  :  Publish-Module PBMO UNDEFINED ERROR! System.Management.Automation.StopUpstreamCommandsException: System error.     at Microsoft.PowerShell.Commands.SelectObjectCommand.ProcessRecord()     at System.Management.Automation.CommandProcessor.ProcessRecord() (But PublishModule doesn't bother to return a functional Error object with an Exception, so we can't trust/parse or act on it. Just echo)
2024-09-23 16:14:22 INFO:  : Waiting for:find-module -name verb-AAD -Repository lyncRepo ...
2024-09-23 16:14:22 INFO:  : Install-Module w
Name                           Value
----                           -----
Name                           verb-AAD
Repository                     lyncRepo
RequiredVersion                5.2.1
scope                          CurrentUser
force                          True
AllowClobber                   True
errorVariable                  ismo_Err
ErrorAction                    Stop
whatif                         False
2024-09-23 16:14:25 VERBOSE:  : (no $ismo_Err: Install-Module had no errors)
2024-09-23 16:14:25 INFO:  : Testing Module:Import-Module w
Name                           Value
----                           -----
Name                           verb-AAD
ErrorAction                    Stop
errorVariable                  ipmo_Err
force                          True
verbose                        True
2024-09-23 16:14:26 VERBOSE:  : (no $ipmo_Err: test-ModuleManifest had no errors)
2024-09-23 16:14:26 INFO:  : Retrieving matching Repo .nupkg file:
gci \\lynmsv10\lync_fs\scripts\sc\verb-AAD.5.2.1.nupkgl..
2024-09-23 16:14:26 INFO:  : Proper updated .nupkg file found:verb-AAD.5.2.1.nupkg, copying to local Pkg directory.
2024-09-23 16:14:26 INFO:  : remove-UnneededFileVariants w
Name                           Value
----                           -----
Path                           c:\sc\verb-AAD\Package
Include                        verb-AAD*.nupkg
Pattern
FilterOn                       CreationTime
Keep                           2
KeepToday                      True
verbose                        True
whatif                         False
2024-09-23 16:14:26 INFO:  : remove-UnneededFileVariants w
Name                           Value
----                           -----
Path                           c:\sc\verb-AAD\Tests
Include                        ScriptAnalyzer-Results-*.xml
Pattern
FilterOn                       CreationTime
Keep                           4
KeepToday                      True
verbose                        True
whatif                         False
2024-09-23 16:14:26 INFO:  : -RunTest specified: Running Pester Test script:
c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1

2024-09-23 16:15:11 INFO:  :
---------------------------------------------------------------------------------
Processing completed: verb-AAD :: c:\sc\verb-AAD
- Script is currently installed (from PsRep: with scope:CurrentUser, under TORO\kadritss profile

- To update other scopes/accounts on same machine, or install on other machines:
    1. Uninstall current module copies:

        Uninstall-Module -Name verb-AAD) -AllVersion -whatif ;

    2. Install the current version (or higher) from the Repo:lyncRepo:

        install-Module -name verb-AAD -Repository lyncRepo -RequiredVersion 5.2.1 -scope currentuser -whatif ;

    3. Reimport the module with -force, to ensure the current installed verison is loaded:

        import-Module -name verb-AAD -force -verbose ;

#-=-=-Stacked list for the above: CURRENTUSER=-=-=-=-=-=
$whatif=$false ;  $tScop = 'CurrentUser' ; $tMod = 'verb-AAD' ; $tVer = '5.2.1' ;
if($env:WT_SESSION){
    write-warning "WARNING YOU'RE INSTALLING INTO POWERSHELL7!
THE MODULE WILL GO INTO \DOCS\POWERSHELL\MODULES
(vs \DOCS\WINDOWSPOWERSHELL\MODULES)!" ;
    $bRet=Read-Host "Enter YYY to continue. Anything else will exit"  ;
    if ($bRet.ToUpper() -eq "YYY") {} else {WRITE-WARNING "HALTING!" ; BREAK} ;
} ;
TRY {
    switch($tScop){
        'CurrentUser'{$ModPath = "$(split-path $profile)\Modules\$($tmod)" }
        'AllUsers' {$ModPath = "$($env:ProgramFiles)\WindowsPowerShell\Modules)\$($tmod)"} ;
    } ;
    if($Repository = (Get-PSRepository -Name $localPSRepo -ea 'STOP').name){
        rmo -Name $tmod -ea 0 ;
        Uninstall-Module -Name $tmod -AllVersion -force -ea 0 -whatif:$($whatif);
        gi -path $ModPath -ea 0 |ri -Recurse -force -verbose  -whatif:$($whatif) ;
        if($thisVers = find-module -name $tmod -Repository $Repository -RequiredVersion $tVer){
            $thisvers  | ft -a Name,Version,Repository ;
            $thisVers | install-Module -scope $tScop -Force -AllowClobber -ea 'STOP' -whatif:$($whatif) ;
        }else {
            throw "Unable to:find-module -name $($tmod) -Repository $($Repository) -RequiredVersion $($tVer)"
            break ;
        } ;
        rmo -Name $tmod -force -ea 0 ;
        ipmo -name $tmod -force -verbose -ea 'STOP'  ;
        gmo -name $tmod | ? version -ne $tVer | rmo -Force -Verbose ;
        gmo -name $tmod -list ;
    } else {
        throw "Unable to resolve `lyncRepo to a configured local PSRepository" ;
    } ;
} CATCH {
    $ErrTrapd=$Error[0] ;
    $smsg = "
$(($ErrTrapd | fl * -Force|out-string).trim())" ;
    write-warning "$((get-date).ToString('HH:mm:ss')):$($smsg)" ;
} ;
#-=-=-=-=-=-=-=-=
#-=-=-Stacked list for the above: ALLUSERS=-=-=-=-=-=
$whatif=$false ; $tScop = 'AllUsers' ; $tMod = 'verb-AAD' ; $tVer = '5.2.1' ;
if($env:WT_SESSION){
    write-warning "WARNING YOU'RE INSTALLING INTO POWERSHELL7!
THE MODULE WILL GO INTO \DOCS\POWERSHELL\MODULES
(vs \DOCS\WINDOWSPOWERSHELL\MODULES)!" ;
    $bRet=Read-Host "Enter YYY to continue. Anything else will exit"  ;
    if ($bRet.ToUpper() -eq "YYY") {} else {WRITE-WARNING "HALTING!" ; BREAK} ;
} ;
TRY {
    switch($tScop){
        'CurrentUser'{$ModPath = "$(split-path $profile)\Modules\$($tmod)" }
        'AllUsers' {$ModPath = "$($env:ProgramFiles)\WindowsPowerShell\Modules)\$($tmod)"} ;
    } ;
    if($Repository = (Get-PSRepository -Name $localPSRepo -ea 'STOP').name){
        rmo -Name $tmod -ea 0 ;
        Uninstall-Module -Name $tmod -AllVersion -force -ea 0 -whatif:$($whatif);
        gi -path $ModPath -ea 0 |ri -Recurse -force -verbose  -whatif:$($whatif) ;
        if($thisVers = find-module -name $tmod -Repository $Repository -RequiredVersion $tVer){
            $thisvers  | ft -a Name,Version,Repository ;
            $thisVers | install-Module -scope $tScop -Force -AllowClobber -ea 'STOP' -whatif:$($whatif) ;
        }else {
            throw "Unable to:find-module -name $($tmod) -Repository $($Repository) -RequiredVersion $($tVer)"
            break ;
        } ;
        rmo -Name $tmod -force -ea 0 ;
        ipmo -name $tmod -force -verbose -ea 'STOP'  ;
        gmo -name $tmod | ? version -ne $tVer | rmo -Force -Verbose ;
        gmo -name $tmod -list ;
    } else {
        throw "Unable to resolve `lyncRepo to a configured local PSRepository" ;
    } ;
} CATCH {
    $ErrTrapd=$Error[0] ;
    $smsg = "
$(($ErrTrapd | fl * -Force|out-string).trim())" ;
    write-warning "$((get-date).ToString('HH:mm:ss')):$($smsg)" ;
} ;
#-=-=-=-=-=-=-=-=

- You may also want to run the configured Pester Tests of the new script:

        . c:\sc\verb-AAD\Tests\verb-AAD.tests.ps1

Full Processing Details can be found in:

C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-AAD-LOG-BATCH-EXEC-20240923-1613PM-log.txt

---------------------------------------------------------------------------------

2024-09-23 16:15:11 INFO:  :
(Most recent processing log can be found at:c:\sc\verb-AAD\VERB-dev-verb-AAD-LOG-BATCH-EXEC-20240923-1613PM-log.txt)
(perm copy stored at:C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-AAD-LOG-BATCH-EXEC-20240923-1613PM-log.txt
2024-09-23 16:15:11 INFO:  : remove-UnneededFileVariants w
Name                           Value
----                           -----
Path                           c:\sc\verb-AAD
Include                        VERB-dev-verb-AAD-LOG-BATCH-*-log.txt
Pattern
FilterOn                       CreationTime
Keep                           2
KeepToday                      True
verbose                        True
whatif                         False
2024-09-23 16:15:11 INFO:  : #*======^ VERB-dev.psm1:verb-AAD ^======

▒
▒
▒
░
░

LYN-9C5CTV3
 ▓▒▓
TORO\kadritss
 ▓▒▓
Mon 09/23/2024 16:15
 [98ms]

▒
▒
▒
▒
▒

[PS]
:
C:\u\w\p\scripts

$




PS>ipmo -fo -verb verb-aad
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-aad\5.2.1\verb-aad.psd1'.
VERBOSE: Populating RepositorySourceLocation property for module verb-aad.
VERBOSE: Loading module from path 'C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-aad\5.2.1\verb-AAD.psm1'.
VERBOSE: Importing function 'add-AADUserLicense'.
VERBOSE: Importing function 'Add-ADALType'.
VERBOSE: Importing function 'caadCMW'.
VERBOSE: Importing function 'caadtol'.
VERBOSE: Importing function 'caadTOR'.
VERBOSE: Importing function 'caadVEN'.
VERBOSE: Importing function 'cmsolcmw'.
VERBOSE: Importing function 'cmsolTOL'.
VERBOSE: Importing function 'cmsolTOR'.
VERBOSE: Importing function 'cmsolVEN'.
VERBOSE: Importing function 'Connect-AAD'.
VERBOSE: Importing function 'connect-AzureRM'.
VERBOSE: Importing function 'Connect-MSOL'.
VERBOSE: Importing function 'convert-AADUImmuntableIDToADUObjectGUID'.
VERBOSE: Importing function 'convert-ADUObjectGUIDToAADUImmuntableID'.
VERBOSE: Importing function 'Disconnect-AAD'.
VERBOSE: Importing function 'get-AADBearerToken'.
VERBOSE: Importing function 'get-AADBearerTokenHeaders'.
VERBOSE: Importing function 'get-AADCertToken'.
VERBOSE: Importing function 'get-AADLastSync'.
VERBOSE: Importing function 'get-AADLicenseFullName'.
VERBOSE: Importing function 'get-AADlicensePlanList'.
VERBOSE: Importing function 'get-AADToken'.
VERBOSE: Importing function 'get-AADTokenHeaders'.
VERBOSE: Importing function 'get-aaduser'.
VERBOSE: Importing function 'get-AADUserLastSync'.
VERBOSE: Importing function 'get-AADUserLicenseDetails'.
VERBOSE: Importing function 'Get-DsRegStatus'.
VERBOSE: Importing function 'Get-JWTDetails'.
VERBOSE: Importing function 'Get-MsolDisabledPlansForSKU'.
VERBOSE: Importing function 'Get-MsolUnexpectedEnabledPlansForUser'.
VERBOSE: Importing function 'Get-MsolUserLicense'.
VERBOSE: Importing function 'get-MsolUserLicenseDetails'.
VERBOSE: Importing function 'Get-ServiceToken'.
VERBOSE: Importing function 'Get-TokenCache'.
VERBOSE: Importing function 'import-AADAppRegistrationPFX'.
VERBOSE: Importing function 'Initialize-AADSignErrorsHash'.
VERBOSE: Importing function 'New-AADAppAuthCertificate'.
VERBOSE: Importing function 'New-AADAppPermissionsObject'.
WARNING: The names of some imported commands from the module 'verb-aad' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'profile-AAD-Signons' command in the verb-aad' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
WARNING: Some imported command names contain one or more of the following restricted characters: # , ( ) {{ }} [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: The command name 'profile-AAD-Signons' from the module 'verb-aad' contains one or more of the following restricted characters: # , ( ) { } [ ] & - / \ $ ^ ; : " ' < > | ? @ ` * % + = ~
VERBOSE: Importing function 'profile-AAD-Signons'.
VERBOSE: Importing function 'Remove-AADAppRegistrationCBAAuth'.
VERBOSE: Importing function 'remove-AADUserLicense'.
VERBOSE: Importing function 'Remove-MsolUserDirectLicenses'.
VERBOSE: Importing function 'resolve-GuestExternalAddr2UPN'.
VERBOSE: Importing function 'search-AADSignInReports'.
VERBOSE: Importing function 'search-GraphApiAAD'.
VERBOSE: Importing function 'set-AADUserUsageLocation'.
VERBOSE: Importing function 'test-AADUserIsLicensed'.
VERBOSE: Importing function 'test-AzureADSessionIsGlobalAdmin'.
VERBOSE: Importing function 'test-MsolUserLicenseDirectAssigned'.
VERBOSE: Importing function 'test-MsolUserLicenseGroupAssigned'.
VERBOSE: The 'toggle-AADLicense' command in the verb-aad' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'toggle-AADLicense'.
VERBOSE: Importing function 'Update-AADAppRegistrationKeyCertificate'.
VERBOSE: Importing function 'Wait-AADSync'.
VERBOSE: Importing alias 'Build-AADSignErrorsHash'.
VERBOSE: Importing alias 'caad'.
VERBOSE: Importing alias 'cmsol'.
VERBOSE: Importing alias 'convert-GUIDToImmuntableID'.
VERBOSE: Importing alias 'convert-ImmuntableIDToGUID'.
VERBOSE: Importing alias 'daad'.
VERBOSE: Importing alias 'get-MsolLastSync'.
VERBOSE: Importing alias 'get-MsolUserLastSync'.
VERBOSE: Importing alias 'raad'.
VERBOSE: Importing alias 'reconnect-AAD'.
VERBOSE: Importing alias 'Reconnect-MSOL'.
VERBOSE: Importing alias 'rmsol'.
VERBOSE: Importing alias 'Rollover-AADAppRegistrationKeyCertificate'.
VERBOSE: Importing alias 'test-isAADGlobalAdmin'.
VERBOSE: Importing alias 'test-IsGlobalAdmin'.
VERBOSE: Importing alias 'toggle-o365License'.
VERBOSE: Importing alias 'Wait-MSolSync'.

▒
▒
▒
░
░

LYN-9C5CTV3
 ▓▒▓
TORO\kadritss
 ▓▒▓
Mon 09/23/2024 16:15
 [298ms]

▒
▒
▒
▒
▒

[PS]
:
C:\u\w\p\scripts

$




PS>.\processbulk-NewModule.ps1 -Modules verb-Exo -verbose 
VERBOSE: consistent results
Calculated $runSource:ExternalScript
VERBOSE: $rPSBoundParameters:
Key     Value     
---     -----     
Modules {verb-Exo}
Verbose True
VERBOSE: Collect all non-default Params (works back to psv2 w CmdletBinding)
$runSource       : ExternalScript
$CmdletName      : processbulk-NewModule.ps1
$scriptName      : C:\usr\work\ps\scripts\processbulk-NewModule.ps1
$ScriptBaseName  : processbulk-NewModule.ps1
$ScriptNameNoExt : processbulk-NewModule
$ScriptDir       : C:\usr\work\ps\scripts
$PSScriptRoot    : C:\usr\work\ps\scripts
$PSCommandPath   : C:\usr\work\ps\scripts\processbulk-NewModule.ps1
$rPSScriptRoot   : C:\usr\work\ps\scripts
$rPSCommandPath  : C:\usr\work\ps\scripts\processbulk-NewModule.ps1
16:16:33:
#*======v RUNNING processbulk-NewModule.ps1 v======
16:16:33:(Checking IsLocalAdmin & IsElevated session status...)
16:16:35:
#*------v (1/1):PROC:verb-Exo: v------
WARNING: 16:16:35:(unable to locate a prior c:\sc\verb-Exo\processbulk-NewModule-verb-Exo-LOG-BATCH-EXEC-* file... skipping failed build check
==(1/43):ipmo'ing C:\sc\verb-Exo\public\add-EXOLicense.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\add-EXOLicense.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\add-EXOLicense.ps1'.
==(2/43):ipmo'ing C:\sc\verb-Exo\public\check-EXOLegalHold.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\check-EXOLegalHold.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\check-EXOLegalHold.ps1'.
==(3/43):ipmo'ing C:\sc\verb-Exo\public\Connect-EXO.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\Connect-EXO.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\Connect-EXO.ps1'.
==(4/43):ipmo'ing C:\sc\verb-Exo\public\convert-ADUserRecipientTypeRemoteSharedMailbox.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\convert-ADUserRecipientTypeRemoteSharedMailbox.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\convert-ADUserRecipientTypeRemoteSharedMailbox.ps1'.
==(5/43):ipmo'ing C:\sc\verb-Exo\public\convert-ADUserRecipientTypeRemoteUserMailbox.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\convert-ADUserRecipientTypeRemoteUserMailbox.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\convert-ADUserRecipientTypeRemoteUserMailbox.ps1'.
==(6/43):ipmo'ing C:\sc\verb-Exo\public\convert-exoMailboxTypeSharedMailbox.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\convert-exoMailboxTypeSharedMailbox.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\convert-exoMailboxTypeSharedMailbox.ps1'.
==(7/43):ipmo'ing C:\sc\verb-Exo\public\convert-exoMailboxTypeUserMailbox.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\convert-exoMailboxTypeUserMailbox.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\convert-exoMailboxTypeUserMailbox.ps1'.
==(8/43):ipmo'ing C:\sc\verb-Exo\public\convert-HistoricalSearchCSV.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\convert-HistoricalSearchCSV.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\convert-HistoricalSearchCSV.ps1'.
==(9/43):ipmo'ing C:\sc\verb-Exo\public\copy-XPermissionGroupToCloudOnly.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\copy-XPermissionGroupToCloudOnly.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\copy-XPermissionGroupToCloudOnly.ps1'.
==(10/43):ipmo'ing C:\sc\verb-Exo\public\cxotol.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\cxotol.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\cxotol.ps1'.
==(11/43):ipmo'ing C:\sc\verb-Exo\public\cxotor.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\cxotor.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\cxotor.ps1'.
==(12/43):ipmo'ing C:\sc\verb-Exo\public\Disconnect-EXO.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\Disconnect-EXO.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\Disconnect-EXO.ps1'.
==(13/43):ipmo'ing C:\sc\verb-Exo\public\get-AADlicensePlanList.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\get-AADlicensePlanList.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\get-AADlicensePlanList.ps1'.
==(14/43):ipmo'ing C:\sc\verb-Exo\public\get-ADUsersWithSoftDeletedxoMailboxes.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\get-ADUsersWithSoftDeletedxoMailboxes.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\get-ADUsersWithSoftDeletedxoMailboxes.ps1'.
==(15/43):ipmo'ing C:\sc\verb-Exo\public\get-ExoGxMTEventType.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\get-ExoGxMTEventType.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\get-ExoGxMTEventType.ps1'.
==(16/43):ipmo'ing C:\sc\verb-Exo\public\get-ExoMailboxLicenses.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\get-ExoMailboxLicenses.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\get-ExoMailboxLicenses.ps1'.
==(17/43):ipmo'ing C:\sc\verb-Exo\public\get-ExoMessageTraceEventType.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\get-ExoMessageTraceEventType.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\get-ExoMessageTraceEventType.ps1'.
==(18/43):ipmo'ing C:\sc\verb-Exo\public\get-ExoMessageTraceSourceType.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\get-ExoMessageTraceSourceType.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\get-ExoMessageTraceSourceType.ps1'.
==(19/43):ipmo'ing C:\sc\verb-Exo\public\get-EXOMsgTraceDetailed.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\get-EXOMsgTraceDetailed.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\get-EXOMsgTraceDetailed.ps1'.
==(20/43):ipmo'ing C:\sc\verb-Exo\public\get-MailboxFolderStats.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\get-MailboxFolderStats.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\get-MailboxFolderStats.ps1'.
==(21/43):ipmo'ing C:\sc\verb-Exo\public\get-MsgTrace.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\get-MsgTrace.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\get-MsgTrace.ps1'.
==(22/43):ipmo'ing C:\sc\verb-Exo\public\Get-OrgNameFromUPN.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\Get-OrgNameFromUPN.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\Get-OrgNameFromUPN.ps1'.
==(23/43):ipmo'ing C:\sc\verb-Exo\public\get-xoHistSearch.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\get-xoHistSearch.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\get-xoHistSearch.ps1'.
==(24/43):ipmo'ing C:\sc\verb-Exo\public\get-XOMailboxFolderList.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\get-XOMailboxFolderList.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\get-XOMailboxFolderList.ps1'.
==(25/43):ipmo'ing C:\sc\verb-Exo\public\Get-xoMailboxFolderPermissionsRecursive.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\Get-xoMailboxFolderPermissionsRecursive.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\Get-xoMailboxFolderPermissionsRecursive.ps1'.
==(26/43):ipmo'ing C:\sc\verb-Exo\public\get-XOMailboxFolderPermissionsSummary.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\get-XOMailboxFolderPermissionsSummary.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\get-XOMailboxFolderPermissionsSummary.ps1'.
==(27/43):ipmo'ing C:\sc\verb-Exo\public\move-MailboxToXo.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\move-MailboxToXo.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\move-MailboxToXo.ps1'.
==(28/43):ipmo'ing C:\sc\verb-Exo\public\new-DgTor.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\new-DgTor.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\new-DgTor.ps1'.
==(29/43):ipmo'ing C:\sc\verb-Exo\public\new-xoDGFromProperty.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\new-xoDGFromProperty.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\new-xoDGFromProperty.ps1'.
==(30/43):ipmo'ing C:\sc\verb-Exo\public\Reconnect-EXO.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\Reconnect-EXO.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\Reconnect-EXO.ps1'.
==(31/43):ipmo'ing C:\sc\verb-Exo\public\remove-EXOLicense.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\remove-EXOLicense.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\remove-EXOLicense.ps1'.
==(32/43):ipmo'ing C:\sc\verb-Exo\public\Reset-xoMailboxFolderPermissionsRecursive.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\Reset-xoMailboxFolderPermissionsRecursive.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\Reset-xoMailboxFolderPermissionsRecursive.ps1'.
==(33/43):ipmo'ing C:\sc\verb-Exo\public\resolve-AppIDToCBAFriendlyName.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\resolve-AppIDToCBAFriendlyName.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\resolve-AppIDToCBAFriendlyName.ps1'.
==(34/43):ipmo'ing C:\sc\verb-Exo\public\resolve-Name.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\resolve-Name.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\resolve-Name.ps1'.
==(35/43):ipmo'ing C:\sc\verb-Exo\public\resolve-user.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\resolve-user.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\resolve-user.ps1'.
==(36/43):ipmo'ing C:\sc\verb-Exo\public\resolve-xoRcps.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\resolve-xoRcps.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\resolve-xoRcps.ps1'.
==(37/43):ipmo'ing C:\sc\verb-Exo\public\rxotol.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\rxotol.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\rxotol.ps1'.
==(38/43):ipmo'ing C:\sc\verb-Exo\public\rxotor.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\rxotor.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\rxotor.ps1'.
==(39/43):ipmo'ing C:\sc\verb-Exo\public\test-EXOConnectionTDO.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\test-EXOConnectionTDO.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\test-EXOConnectionTDO.ps1'.
==(40/43):ipmo'ing C:\sc\verb-Exo\public\test-ExoDnsRecordTDO.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\test-ExoDnsRecordTDO.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\test-ExoDnsRecordTDO.ps1'.
==(41/43):ipmo'ing C:\sc\verb-Exo\public\test-EXOIsLicensed.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\test-EXOIsLicensed.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\test-EXOIsLicensed.ps1'.
==(42/43):ipmo'ing C:\sc\verb-Exo\public\test-EXOv2Connection.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\test-EXOv2Connection.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\test-EXOv2Connection.ps1'.
==(43/43):ipmo'ing C:\sc\verb-Exo\public\test-xoMailbox.ps1
VERBOSE: Loading module from path 'C:\sc\verb-Exo\public\test-xoMailbox.ps1'.
VERBOSE: Dot-sourcing the script file 'C:\sc\verb-Exo\public\test-xoMailbox.ps1'.
Check for module recursion ('Nesting-limit-exceeded') (tough enough to catch in cross loads, wo having them right in the components of the module!).
WARNING: 16:16:36:NESTED MODULE REQUIRES ENTRY FOUND! (leads to 'nesting-limit-exceeded' post-bild ipmo errs)

Path                                       Line                                                                             
----                                       ----                                                                             
C:\sc\verb-Exo\public\get-xoHistSearch.ps1     ###Requires -Modules ActiveDirectory, AzureAD, MSOnline, ExchangeOnlineMan...
C:\sc\verb-Exo\public\new-DgTor.ps1            ###Requires -Modules ActiveDirectory, AzureAD, MSOnline, ExchangeOnlineMan...
16:16:36:CONTINUE OR ABORT?!!!
16:16:38:(Moving on)
16:16:38:(all nested requires statements - *ARE THEY NECESSARY!?*:
Path                                                              Line                                                      
----                                                              ----                                                      
C:\sc\verb-Exo\public\add-EXOLicense.ps1                              #Requires -Modules AzureAD, MSOnline, ExchangeOnlin...
C:\sc\verb-Exo\public\check-EXOLegalHold.ps1                          ##Requires -Modules ActiveDirectory,verb-Auth,verb-...
C:\sc\verb-Exo\public\copy-XPermissionGroupToCloudOnly.ps1            ##Requires -Modules ActiveDirectory, MSOnline, Azur...
C:\sc\verb-Exo\public\copy-XPermissionGroupToCloudOnly.ps1            #Requires -Modules ActiveDirectory, AzureAD, Exchan...
C:\sc\verb-Exo\public\get-AADlicensePlanList.ps1                      #Requires -Modules AzureAD, verb-Text                 
C:\sc\verb-Exo\public\get-ADUsersWithSoftDeletedxoMailboxes.ps1       #Requires -Modules ActiveDirectory, ExchangeOnlineM...
C:\sc\verb-Exo\public\get-ExoGxMTEventType.ps1                        #Requires -Modules verb-IO, verb-logging, verb-Text   
C:\sc\verb-Exo\public\get-ExoMailboxLicenses.ps1                      #Requires -Modules verb-IO, verb-logging, verb-Text...
C:\sc\verb-Exo\public\get-ExoMessageTraceEventType.ps1                #Requires -Modules verb-IO, verb-logging, verb-Text   
C:\sc\verb-Exo\public\get-ExoMessageTraceSourceType.ps1               #Requires -Modules verb-IO, verb-logging, verb-Text   
C:\sc\verb-Exo\public\get-MailboxFolderStats.ps1                      ##Requires -Modules verb-ex2010                       
C:\sc\verb-Exo\public\get-MsgTrace.ps1                                ##Requires -Modules verb-ex2010                       
C:\sc\verb-Exo\public\get-xoHistSearch.ps1                            #Requires -Modules ExchangeOnlineManagement,verb-Au...
C:\sc\verb-Exo\public\get-xoHistSearch.ps1                            ###Requires -Modules ActiveDirectory, AzureAD, MSOn...
C:\sc\verb-Exo\public\Get-xoMailboxFolderPermissionsRecursive.ps1         #Requires -Modules ActiveDirectory, ExchangeOnl...
C:\sc\verb-Exo\public\new-DgTor.ps1                                   ###Requires -Modules ActiveDirectory, AzureAD, MSOn...
C:\sc\verb-Exo\public\new-DgTor.ps1                                   ##Requires -Modules ActiveDirectory, AzureAD, MSOnl...
C:\sc\verb-Exo\public\new-DgTor.ps1                                   #Requires -Modules ActiveDirectory, AzureAD, MSOnli...
C:\sc\verb-Exo\public\remove-EXOLicense.ps1                           #Requires -Modules AzureAD, MSOnline, ExchangeOnlin...
C:\sc\verb-Exo\public\resolve-Name.ps1                                ##Requires -Modules ActiveDirectory,AzureAD,MSOnlin...
C:\sc\verb-Exo\public\resolve-Name.ps1                                #Requires -Modules ActiveDirectory,AzureAD,MSOnline...
C:\sc\verb-Exo\public\resolve-user.ps1                                #Requires -Modules ActiveDirectory, MSOnline, Azure...
C:\sc\verb-Exo\public\test-EXOIsLicensed.ps1                          ##Requires -Modules AzureAD, verb-Text                
C:\sc\verb-Exo\public\test-EXOv2Connection.ps1                        ##Requires -Modules AzureAD, verb-Text                
C:\sc\verb-Exo\public\test-xoMailbox.ps1                              ##Requires -Modules ActiveDirectory,verb-Auth,verb-...
C:\sc\verb-Exo\public\test-xoMailbox.ps1                              #Requires -Modules ActiveDirectory,verb-Auth,verb-I...)
16:16:58:(executing:Set-BuildEnvironment -Path c:\sc\verb-Exo -Force 
(use -NoBuildInfo if hangs))
==16:16:59:Processing verb-Exo:
Name                           Value                                                                                        
----                           -----                                                                                        
BHProjectName                  verb-Exo                                                                                     
BHModulePath                   C:\sc\verb-Exo\verb-Exo                                                                      
BHPSModulePath                 C:\sc\verb-Exo\verb-Exo                                                                      
BHProjectPath                  C:\sc\verb-Exo                                                                               
BHBuildOutput                  C:\sc\verb-Exo\BuildOutput                                                                   
BHPSModuleManifest             C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1                                                        
BHBuildSystem                  Unknown                                                                                      
BHCommitMessage                vxo v810...                                                                                  
BHBranchName                   master                                                                                       
BHCommitHash                   d02087575728a88dd4b98e92c5503840371c7d3b                                                     
BHBuildNumber                  0
Running:test-modulemanifest -Path C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1 (from $env:BHPSModuleManifest)
VERBOSE: Loading module from path 'C:\sc\verb-Exo\verb-Exo\verb-EXO.psm1'.
VERBOSE: 16:16:59:(no $ttmm_Err: test-ModuleManifest had no errors)
16:16:59:Step-ModuleVersionCalculated w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           c:\sc\verb-Exo                                                                               
Verbose                        True
16:16:59:#*======v RUNNING :Step-ModuleVersionCalculated:c:\sc\verb-Exo v======
16:16:59:profiling existing content...
VERBOSE: 16:16:59:#*======v RUNNING :Get-PSModuleFile:.psd1:C:\sc\verb-Exo v======
VERBOSE: 16:16:59:#*======^ RUNNING :Get-PSModuleFile:.psd1:C:\sc\verb-Exo ^======
VERBOSE: 16:16:59:#*======v RUNNING :Get-PSModuleFile:.psm1:C:\sc\verb-Exo v======
VERBOSE: 16:16:59:#*======^ RUNNING :Get-PSModuleFile:.psm1:C:\sc\verb-Exo ^======
WARNING: 16:16:59:MULTIPLE #requires -version strings matched in:
C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1
(not-permited, wrecks ipmo) - psm1 and constitutent .ps1 files:
Filename                                      LineNumber Line                      
--------                                      ---------- ----                      
convert-HistoricalSearchCSV.ps1                      101     #Requires -Version 3  
get-AADlicensePlanList.ps1                           111     #Requires -Version 3  
get-ADUsersWithSoftDeletedxoMailboxes.ps1             43     #Requires -Version 3  
get-MailboxFolderStats.ps1                            56     #Requires -Version 3  
get-MsgTrace.ps1                                      79     #Requires -Version 3  
Reset-xoMailboxFolderPermissionsRecursive.ps1        276     #Requires -Version 3.0
test-EXOIsLicensed.ps1                                76     #Requires -Version 3  
test-EXOv2Connection.ps1                              97     #Requires -Version 3  
verb-EXO.psm1                                       2737     #Requires -Version 3  
verb-EXO.psm1                                       4113     #Requires -Version 3  
verb-EXO.psm1                                       4383     #Requires -Version 3  
verb-EXO.psm1                                       7304     #Requires -Version 3  
verb-EXO.psm1                                       7607     #Requires -Version 3  
verb-EXO.psm1                                      14395     #Requires -Version 3.0
verb-EXO.psm1                                      19552     #Requires -Version 3  
verb-EXO.psm1                                      19842     #Requires -Version 3
Moving on
WARNING: 16:17:04:RECURSIVE #requires strings matched in:
C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1
(not-permited, wrecks ipmo) - psm1 and constitutent .ps1 files:
EDIT OUT any #requires -Modules line spec'ing 'verb-Exo !'
OR THIS MODULE BUILD WILL CRASH AND REQUIRE REVISION ROLLBACK!
Filename                                    LineNumber Line                                                                 
--------                                    ---------- ----                                                                 
add-EXOLicense.ps1                                 143     #Requires -Modules AzureAD, MSOnline, ExchangeOnlineManagement...
copy-XPermissionGroupToCloudOnly.ps1                82     #Requires -Modules ActiveDirectory, AzureAD, ExchangeOnlineMan...
get-AADlicensePlanList.ps1                         113     #Requires -Modules AzureAD, verb-Text                            
get-ADUsersWithSoftDeletedxoMailboxes.ps1           41     #Requires -Modules ActiveDirectory, ExchangeOnlineManagement, ...
get-ExoGxMTEventType.ps1                            34     #Requires -Modules verb-IO, verb-logging, verb-Text              
get-ExoMailboxLicenses.ps1                         240     #Requires -Modules verb-IO, verb-logging, verb-Text, AzureAD     
get-ExoMessageTraceEventType.ps1                   116     #Requires -Modules verb-IO, verb-logging, verb-Text              
get-ExoMessageTraceSourceType.ps1                  106     #Requires -Modules verb-IO, verb-logging, verb-Text              
get-xoHistSearch.ps1                                85     #Requires -Modules ExchangeOnlineManagement,verb-Auth, verb-IO...
Get-xoMailboxFolderPermissionsRecursive.ps1         68         #Requires -Modules ActiveDirectory, ExchangeOnlineManageme...
new-DgTor.ps1                                      193     #Requires -Modules ActiveDirectory, AzureAD, MSOnline, Exchang...
remove-EXOLicense.ps1                              104     #Requires -Modules AzureAD, MSOnline, ExchangeOnlineManagement...
resolve-Name.ps1                                    52     #Requires -Modules ActiveDirectory,AzureAD,MSOnline,verb-Auth,...
resolve-user.ps1                                   256     #Requires -Modules ActiveDirectory, MSOnline, AzureAD, Exchang...
test-xoMailbox.ps1                                  47     #Requires -Modules ActiveDirectory,verb-Auth,verb-IO,verb-Mods...
verb-EXO.psm1                                      188     #Requires -Modules AzureAD, MSOnline, ExchangeOnlineManagement...
verb-EXO.psm1                                     3294     #Requires -Modules ActiveDirectory, AzureAD, ExchangeOnlineMan...
verb-EXO.psm1                                     4115     #Requires -Modules AzureAD, verb-Text                            
verb-EXO.psm1                                     4381     #Requires -Modules ActiveDirectory, ExchangeOnlineManagement, ...
verb-EXO.psm1                                     4829     #Requires -Modules verb-IO, verb-logging, verb-Text              
verb-EXO.psm1                                     5182     #Requires -Modules verb-IO, verb-logging, verb-Text, AzureAD     
verb-EXO.psm1                                     6194     #Requires -Modules verb-IO, verb-logging, verb-Text              
verb-EXO.psm1                                     6450     #Requires -Modules verb-IO, verb-logging, verb-Text              
verb-EXO.psm1                                     8199     #Requires -Modules ExchangeOnlineManagement,verb-Auth, verb-IO...
verb-EXO.psm1                                     9229         #Requires -Modules ActiveDirectory, ExchangeOnlineManageme...
verb-EXO.psm1                                    11294     #Requires -Modules ActiveDirectory, AzureAD, MSOnline, Exchang...
verb-EXO.psm1                                    13644     #Requires -Modules AzureAD, MSOnline, ExchangeOnlineManagement...
verb-EXO.psm1                                    15388     #Requires -Modules ActiveDirectory,AzureAD,MSOnline,verb-Auth,...
verb-EXO.psm1                                    16106     #Requires -Modules ActiveDirectory, MSOnline, AzureAD, Exchang...
verb-EXO.psm1                                    20356     #Requires -Modules ActiveDirectory,verb-Auth,verb-IO,verb-Mods...
Moving on
VERBOSE: 16:17:07:Import-PowerShellDataFile w
Name                           Value                                                                                        
----                           -----                                                                                        
path                           C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1                                                        
ErrorAction                    STOP                                                                                         
Verbose                        True
VERBOSE: 16:17:07:test-ModuleManifest w
Name                           Value                                                                                        
----                           -----                                                                                        
path                           C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1                                                        
ErrorAction                    STOP                                                                                         
Verbose                        True
VERBOSE: Loading module from path 'C:\sc\verb-Exo\verb-Exo\verb-EXO.psm1'.
VERBOSE: 16:17:07:(no $ttmm_Err: test-ModuleManifest had no errors)
16:17:07:(Test-ModuleManifest:PASSED)
16:17:07:Module:psd1M:calculating *FINGERPRINT* change Version Step
VERBOSE: 16:17:07:import-module w
Name                           Value                                                                                        
----                           -----                                                                                        
Verbose                        True                                                                                         
Name                           C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1                                                        
force                          True                                                                                         
ErrorAction                    STOP
VERBOSE: Loading module from path 'C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1'.
VERBOSE: Importing function 'add-EXOLicense'.
WARNING: The names of some imported commands from the module 'verb-Exo' include unapproved verbs that might make them less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose parameter. For a list of approved verbs, type Get-Verb.
VERBOSE: The 'check-EXOLegalHold' command in the verb-Exo' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'check-EXOLegalHold'.
VERBOSE: Importing function 'Connect-EXO'.
VERBOSE: Importing function 'convert-ADUserRecipientTypeRemoteSharedMailbox'.
VERBOSE: Importing function 'convert-ADUserRecipientTypeRemoteUserMailbox'.
VERBOSE: Importing function 'convert-exoMailboxTypeSharedMailbox'.
VERBOSE: Importing function 'convert-exoMailboxTypeUserMailbox'.
VERBOSE: Importing function 'convert-HistoricalSearchCSV'.
VERBOSE: Importing function 'copy-XPermissionGroupToCloudOnly'.
VERBOSE: Importing function 'cxoTOL'.
VERBOSE: Importing function 'cxoTOR'.
VERBOSE: Importing function 'Disconnect-EXO'.
VERBOSE: Importing function 'get-AADlicensePlanList'.
VERBOSE: Importing function 'get-ADUsersWithSoftDeletedxoMailboxes'.
VERBOSE: Importing function 'get-ExoGxMTEventType'.
VERBOSE: Importing function 'get-ExoMailboxLicenses'.
VERBOSE: Importing function 'get-ExoMessageTraceEventType'.
VERBOSE: Importing function 'get-ExoMessageTraceSourceType'.
VERBOSE: Importing function 'get-EXOMsgTraceDetailed'.
VERBOSE: Importing function 'get-MailboxFolderStats'.
VERBOSE: Importing function 'get-MsgTrace'.
VERBOSE: Importing function 'Get-OrgNameFromUPN'.
VERBOSE: Importing function 'get-xoHistSearch'.
VERBOSE: Importing function 'get-XOMailboxFolderList'.
VERBOSE: Importing function 'Get-xoMailboxFolderPermissionsRecursive'.
VERBOSE: Importing function 'get-XOMailboxFolderPermissionsSummary'.
VERBOSE: Importing function 'move-MailboxToXo'.
VERBOSE: Importing function 'new-DgTor'.
VERBOSE: Importing function 'new-xoDGFromProperty'.
VERBOSE: The 'Reconnect-EXO' command in the verb-Exo' module was imported, but because its name does not include an approved verb, it might be difficult to find. For a list of approved verbs, type Get-Verb.
VERBOSE: Importing function 'Reconnect-EXO'.
VERBOSE: Importing function 'remove-EXOLicense'.
VERBOSE: Importing function 'Reset-xoMailboxFolderPermissionsRecursive'.
VERBOSE: Importing function 'resolve-AppIDToCBAFriendlyName'.
VERBOSE: Importing function 'resolve-Name'.
VERBOSE: Importing function 'resolve-user'.
VERBOSE: Importing function 'Resolve-xoRcps'.
VERBOSE: Importing function 'rxoTOL'.
VERBOSE: Importing function 'rxoTOR'.
VERBOSE: Importing function 'test-EXOConnectionTDO'.
VERBOSE: Importing function 'test-EXOIsLicensed'.
VERBOSE: Importing function 'test-EXOv2Connection'.
VERBOSE: Importing function 'test-xoMailbox'.
VERBOSE: Importing alias 'Connect-EXO2'.
VERBOSE: Importing alias 'convert-ADUserRecipientType'.
VERBOSE: Importing alias 'convert-xoShared'.
VERBOSE: Importing alias 'convertfrom-HistoricalSearch'.
VERBOSE: Importing alias 'cxo'.
VERBOSE: Importing alias 'cxo2'.
VERBOSE: Importing alias 'cxo2cmw'.
VERBOSE: Importing alias 'cxo2TOL'.
VERBOSE: Importing alias 'cxo2TOR'.
VERBOSE: Importing alias 'Disconnect-EXO2'.
VERBOSE: Importing alias 'dxo'.
VERBOSE: Importing alias 'dxo2'.
VERBOSE: Importing alias 'Get-MailboxFolderPermissionsRecursive'.
VERBOSE: Importing alias 'GetFolderPermissions'.
VERBOSE: Importing alias 'nlu'.
VERBOSE: Importing alias 'reconnect-exo2'.
VERBOSE: Importing alias 'ReturnFolderList'.
VERBOSE: Importing alias 'revert-ADuserRecipientType'.
VERBOSE: Importing alias 'revert-xoUserMbx'.
VERBOSE: Importing alias 'rxo'.
VERBOSE: Importing alias 'rxo2'.
VERBOSE: Importing alias 'txo'.
VERBOSE: Importing alias 'ulu'.
16:17:07:Ipmo: PASSED
16:17:07:get-command verb-Exo -gt AST 80% match:
VERBOSE: 16:17:07:get-module |where-object{$_.path -eq 'C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1'} |remove-module w
Name                           Value                                                                                        
----                           -----                                                                                        
Verbose                        True                                                                                         
force                          True                                                                                         
ErrorAction                    STOP
VERBOSE: Performing the operation "Remove-Module" on target "verb-Exo (Path: 'C:\sc\verb-Exo\verb-Exo\verb-Exo.psm1')".
VERBOSE: Removing the imported "get-AADlicensePlanList" function.
VERBOSE: Removing the imported "add-EXOLicense" function.
VERBOSE: Removing the imported "check-EXOLegalHold" function.
VERBOSE: Removing the imported "Connect-EXO" function.
VERBOSE: Removing the imported "convert-ADUserRecipientTypeRemoteSharedMailbox" function.
VERBOSE: Removing the imported "convert-ADUserRecipientTypeRemoteUserMailbox" function.
VERBOSE: Removing the imported "convert-exoMailboxTypeSharedMailbox" function.
VERBOSE: Removing the imported "convert-exoMailboxTypeUserMailbox" function.
VERBOSE: Removing the imported "convert-HistoricalSearchCSV" function.
VERBOSE: Removing the imported "copy-XPermissionGroupToCloudOnly" function.
VERBOSE: Removing the imported "cxoTOL" function.
VERBOSE: Removing the imported "cxoTOR" function.
VERBOSE: Removing the imported "Disconnect-EXO" function.
VERBOSE: Removing the imported "get-ADUsersWithSoftDeletedxoMailboxes" function.
VERBOSE: Removing the imported "get-ExoGxMTEventType" function.
VERBOSE: Removing the imported "get-ExoMailboxLicenses" function.
VERBOSE: Removing the imported "get-ExoMessageTraceEventType" function.
VERBOSE: Removing the imported "get-ExoMessageTraceSourceType" function.
VERBOSE: Removing the imported "get-EXOMsgTraceDetailed" function.
VERBOSE: Removing the imported "get-MailboxFolderStats" function.
VERBOSE: Removing the imported "get-MsgTrace" function.
VERBOSE: Removing the imported "Get-OrgNameFromUPN" function.
VERBOSE: Removing the imported "get-xoHistSearch" function.
VERBOSE: Removing the imported "get-XOMailboxFolderList" function.
VERBOSE: Removing the imported "Get-xoMailboxFolderPermissionsRecursive" function.
VERBOSE: Removing the imported "get-XOMailboxFolderPermissionsSummary" function.
VERBOSE: Removing the imported "move-MailboxToXo" function.
VERBOSE: Removing the imported "new-DgTor" function.
VERBOSE: Removing the imported "new-xoDGFromProperty" function.
VERBOSE: Removing the imported "Reconnect-EXO" function.
VERBOSE: Removing the imported "remove-EXOLicense" function.
VERBOSE: Removing the imported "Reset-xoMailboxFolderPermissionsRecursive" function.
VERBOSE: Removing the imported "resolve-AppIDToCBAFriendlyName" function.
VERBOSE: Removing the imported "resolve-Name" function.
VERBOSE: Removing the imported "resolve-user" function.
VERBOSE: Removing the imported "Resolve-xoRcps" function.
VERBOSE: Removing the imported "rxoTOL" function.
VERBOSE: Removing the imported "rxoTOR" function.
VERBOSE: Removing the imported "test-EXOConnectionTDO" function.
VERBOSE: Removing the imported "test-EXOIsLicensed" function.
VERBOSE: Removing the imported "test-EXOv2Connection" function.
VERBOSE: Removing the imported "test-xoMailbox" function.
VERBOSE: Removing the imported "Connect-EXO2" alias.
VERBOSE: Removing the imported "convert-ADUserRecipientType" alias.
VERBOSE: Removing the imported "convert-xoShared" alias.
VERBOSE: Removing the imported "convertfrom-HistoricalSearch" alias.
VERBOSE: Removing the imported "cxo" alias.
VERBOSE: Removing the imported "cxo2" alias.
VERBOSE: Removing the imported "cxo2cmw" alias.
VERBOSE: Removing the imported "cxo2TOL" alias.
VERBOSE: Removing the imported "cxo2TOR" alias.
VERBOSE: Removing the imported "Disconnect-EXO2" alias.
VERBOSE: Removing the imported "dxo" alias.
VERBOSE: Removing the imported "dxo2" alias.
VERBOSE: Removing the imported "Get-MailboxFolderPermissionsRecursive" alias.
VERBOSE: Removing the imported "GetFolderPermissions" alias.
VERBOSE: Removing the imported "nlu" alias.
VERBOSE: Removing the imported "reconnect-exo2" alias.
VERBOSE: Removing the imported "ReturnFolderList" alias.
VERBOSE: Removing the imported "revert-ADuserRecipientType" alias.
VERBOSE: Removing the imported "revert-xoUserMbx" alias.
VERBOSE: Removing the imported "rxo" alias.
VERBOSE: Removing the imported "rxo2" alias.
VERBOSE: Removing the imported "txo" alias.
VERBOSE: Removing the imported "ulu" alias.
VERBOSE: 16:17:08:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\ActiveDirectory\ActiveDirectory.psd1:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\AzureAD\2.0.2.106\Microsoft.Open.AzureAD16.Graph.PowerShell.dll:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\BuildHelpers\2.0.16\BuildHelpers.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\ExchangeOnlineManagement\3.1.0\netFramework\ExchangeOnlineManagement.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\GroupSet\GroupSet.Schema.psm1:still loaded)
VERBOSE: 16:17:08:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\Microsoft.PowerShell.Host\Microsoft.PowerShell.Host.psd1:still loaded)
VERBOSE: 16:17:08:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\Microsoft.PowerShell.Management\Microsoft.PowerShell.Management.psd1:still loaded)
VERBOSE: 16:17:08:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\Microsoft.PowerShell.Security\Microsoft.PowerShell.Security.psd1:still loaded)
VERBOSE: 16:17:08:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\Microsoft.PowerShell.Utility\Microsoft.PowerShell.Utility.psd1:still loaded)
VERBOSE: 16:17:08:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\Microsoft.WSMan.Management\Microsoft.WSMan.Management.psd1:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\MSOnline\1.1.183.57\MSOnline.psd1:still loaded)
VERBOSE: 16:17:08:(C:\Program Files\WindowsPowerShell\Modules\PackageManagement\1.4.8.1\PackageManagement.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Program Files\WindowsPowerShell\Modules\Pester\3.4.0\Pester.psm1:still loaded)
VERBOSE: 16:17:08:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\pki\pki.psd1:still loaded)
VERBOSE: 16:17:08:(C:\Program Files\WindowsPowerShell\Modules\PowerShellGet\2.2.5\PSModule.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\ProcessSet\ProcessSet.Schema.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\Pscx\3.3.2\Pscx.psm1:still loaded)
VERBOSE: 16:17:08:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\PSDesiredStateConfiguration.psd1:still loaded)
VERBOSE: 16:17:08:(C:\Program Files\WindowsPowerShell\Modules\PSReadline\2.0.0\PSReadLine.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\PSScriptAnalyzer\1.22.0\PSScriptAnalyzer.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\ServiceSet\ServiceSet.Schema.psm1:still loaded)
VERBOSE: 16:17:08:(C:\WINDOWS\system32\WindowsPowerShell\v1.0\Modules\SmbShare\SmbShare.psd1:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-aad\5.2.1\verb-AAD.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-ADMS\4.0.0\verb-ADMS.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Auth\2.3.1\verb-Auth.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-EXO\8.1.0\verb-EXO.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-IO\15.1.0\verb-IO.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-logging\1.4.1\verb-logging.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Mods\1.6.0\verb-Mods.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Network\4.0.0\verb-Network.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Users\kadritss\Documents\WindowsPowerShell\Modules\verb-Text\6.4.0\verb-Text.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\WindowsFeatureSet\WindowsFeatureSet.Schema.psm1:still loaded)
VERBOSE: 16:17:08:(C:\Windows\System32\WindowsPowerShell\v1.0\Modules\PSDesiredStateConfiguration\DSCResources\WindowsOptionalFeatureSet\WindowsOptionalFeatureSet.Schema.psm1:still loaded)
VERBOSE: 16:17:08:(=cmd:Connect-EXO2...)
VERBOSE: 16:17:08:(---param:Prefix...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:UserPrincipalName...)
VERBOSE: 16:17:08:(---param:UserRole...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:MinimumVersion...)
VERBOSE: 16:17:08:(---param:MinNoWinRMVersion...)
VERBOSE: 16:17:08:(---param:ShowProgress...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:convert-ADUserRecipientType...)
VERBOSE: 16:17:08:(---param:ADUser...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:convertfrom-HistoricalSearch...)
VERBOSE: 16:17:08:(---param:Files...)
VERBOSE: 16:17:08:(---param:ToXML...)
VERBOSE: 16:17:08:(---param:ToCSV...)
VERBOSE: 16:17:08:(---param:Ticket...)
VERBOSE: 16:17:08:(---param:DoDots...)
VERBOSE: 16:17:08:(---param:DotsInterval...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:convert-xoShared...)
VERBOSE: 16:17:08:(---param:Mailbox...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:Disconnect-EXO2...)
VERBOSE: 16:17:08:(---param:Prefix...)
VERBOSE: 16:17:08:(---param:MinimumVersion...)
VERBOSE: 16:17:08:(---param:MinNoWinRMVersion...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:Get-MailboxFolderPermissionsRecursive...)
VERBOSE: 16:17:08:(---param:Ticket...)
VERBOSE: 16:17:08:(---param:Mailbox...)
VERBOSE: 16:17:08:(---param:Quiet...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:reconnect-exo2...)
VERBOSE: 16:17:08:(---param:Prefix...)
VERBOSE: 16:17:08:(---param:MinimumVersion...)
VERBOSE: 16:17:08:(---param:MinNoWinRMVersion...)
VERBOSE: 16:17:08:(---param:ProxyEnabled...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:UserRole...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:revert-ADuserRecipientType...)
VERBOSE: 16:17:08:(---param:ADUser...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:revert-xoUserMbx...)
VERBOSE: 16:17:08:(---param:Mailbox...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:add-EXOLicense...)
VERBOSE: 16:17:08:(---param:users...)
VERBOSE: 16:17:08:(---param:Ticket...)
VERBOSE: 16:17:08:(---param:LicenseSkuKeys...)
VERBOSE: 16:17:08:(---param:QueryLicenseSkus...)
VERBOSE: 16:17:08:(---param:LicenseSkuIds...)
VERBOSE: 16:17:08:(---param:Force...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:UserRole...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:check-EXOLegalHold...)
VERBOSE: 16:17:08:(---param:Mailbox...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:Connect-EXO...)
VERBOSE: 16:17:08:(---param:Prefix...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:UserPrincipalName...)
VERBOSE: 16:17:08:(---param:UserRole...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:MinimumVersion...)
VERBOSE: 16:17:08:(---param:MinNoWinRMVersion...)
VERBOSE: 16:17:08:(---param:ShowProgress...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:convert-ADUserRecipientTypeRemoteSharedMailbox...)
VERBOSE: 16:17:08:(---param:ADUser...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:convert-ADUserRecipientTypeRemoteUserMailbox...)
VERBOSE: 16:17:08:(---param:ADUser...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:convert-exoMailboxTypeSharedMailbox...)
VERBOSE: 16:17:08:(---param:Mailbox...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:convert-exoMailboxTypeUserMailbox...)
VERBOSE: 16:17:08:(---param:Mailbox...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:convert-HistoricalSearchCSV...)
VERBOSE: 16:17:08:(---param:Files...)
VERBOSE: 16:17:08:(---param:ToXML...)
VERBOSE: 16:17:08:(---param:ToCSV...)
VERBOSE: 16:17:08:(---param:Ticket...)
VERBOSE: 16:17:08:(---param:DoDots...)
VERBOSE: 16:17:08:(---param:DotsInterval...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:copy-XPermissionGroupToCloudOnly...)
VERBOSE: 16:17:08:(---param:ticket...)
VERBOSE: 16:17:08:(---param:SourceGroupName...)
VERBOSE: 16:17:08:(---param:Mailbox...)
VERBOSE: 16:17:08:(---param:Owner...)
VERBOSE: 16:17:08:(---param:MembersCloudOnly...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:cxoTOL...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:cxoTOR...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:Disconnect-EXO...)
VERBOSE: 16:17:08:(---param:Prefix...)
VERBOSE: 16:17:08:(---param:MinimumVersion...)
VERBOSE: 16:17:08:(---param:MinNoWinRMVersion...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:get-AADlicensePlanList...)
VERBOSE: 16:17:08:(---param:Raw...)
VERBOSE: 16:17:08:(---param:IndexOnName...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:get-ADUsersWithSoftDeletedxoMailboxes...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:get-ExoGxMTEventType...)
VERBOSE: 16:17:08:(---param:EventID...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:get-ExoMailboxLicenses...)
VERBOSE: 16:17:08:(---param:ServicePlanName...)
VERBOSE: 16:17:08:(---param:rgxbannedSPN...)
VERBOSE: 16:17:08:(---param:OutDetail...)
VERBOSE: 16:17:08:(---param:Unfiltered...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:UserRole...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:get-ExoMessageTraceEventType...)
VERBOSE: 16:17:08:(---param:EventID...)
VERBOSE: 16:17:08:(---param:Type...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:get-ExoMessageTraceSourceType...)
VERBOSE: 16:17:08:(---param:Source...)
VERBOSE: 16:17:08:(---param:Type...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:get-EXOMsgTraceDetailed...)
VERBOSE: 16:17:08:(---param:ticket...)
VERBOSE: 16:17:08:(---param:SenderAddress...)
VERBOSE: 16:17:08:(---param:RecipientAddress...)
VERBOSE: 16:17:08:(---param:StartDate...)
VERBOSE: 16:17:08:(---param:EndDate...)
VERBOSE: 16:17:08:(---param:Days...)
VERBOSE: 16:17:08:(---param:subject...)
VERBOSE: 16:17:08:(---param:MessageId...)
VERBOSE: 16:17:08:(---param:MessageTraceId...)
VERBOSE: 16:17:08:(---param:MessageTraceDetailLimit...)
VERBOSE: 16:17:08:(---param:DetailedReportRuleHits...)
VERBOSE: 16:17:08:(---param:Detailed...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:get-MailboxFolderStats...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:Mailbox...)
VERBOSE: 16:17:08:(---param:Ticket...)
VERBOSE: 16:17:08:(---param:IncludeAge...)
VERBOSE: 16:17:08:(---param:IncludeSize...)
VERBOSE: 16:17:08:(---param:NonEmptyOnly...)
VERBOSE: 16:17:08:(---param:asObject...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:get-MsgTrace...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:Recipients...)
VERBOSE: 16:17:08:(---param:Sender...)
VERBOSE: 16:17:08:(---param:Subject...)
VERBOSE: 16:17:08:(---param:Logon...)
VERBOSE: 16:17:08:(---param:Status...)
VERBOSE: 16:17:08:(---param:Connectorid...)
VERBOSE: 16:17:08:(---param:Source...)
VERBOSE: 16:17:08:(---param:MessageId...)
VERBOSE: 16:17:08:(---param:MessageTraceId...)
VERBOSE: 16:17:08:(---param:StartDate...)
VERBOSE: 16:17:08:(---param:EndDate...)
VERBOSE: 16:17:08:(---param:Days...)
VERBOSE: 16:17:08:(---param:Ticket...)
VERBOSE: 16:17:08:(---param:useEXOP...)
VERBOSE: 16:17:08:(---param:asObject...)
VERBOSE: 16:17:08:(---param:ReportFail...)
VERBOSE: 16:17:08:(---param:ReportRowsLimit...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:Get-OrgNameFromUPN...)
VERBOSE: 16:17:08:(---param:UPN...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:get-xoHistSearch...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:Requester...)
VERBOSE: 16:17:08:(---param:Ticket...)
VERBOSE: 16:17:08:(---param:Days...)
VERBOSE: 16:17:08:(---param:StartDate...)
VERBOSE: 16:17:08:(---param:EndDate...)
VERBOSE: 16:17:08:(---param:Recipients...)
VERBOSE: 16:17:08:(---param:Sender...)
VERBOSE: 16:17:08:(---param:MessageID...)
VERBOSE: 16:17:08:(---param:NotifyAddress...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:get-XOMailboxFolderList...)
VERBOSE: 16:17:08:(---param:SMTPAddress...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:Get-xoMailboxFolderPermissionsRecursive...)
VERBOSE: 16:17:08:(---param:Ticket...)
VERBOSE: 16:17:08:(---param:Mailbox...)
VERBOSE: 16:17:08:(---param:Quiet...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:get-XOMailboxFolderPermissionsSummary...)
VERBOSE: 16:17:08:(---param:foldername...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:move-MailboxToXo...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:TargetMailboxes...)
VERBOSE: 16:17:08:(---param:BatchFile...)
VERBOSE: 16:17:08:(---param:BatchName...)
VERBOSE: 16:17:08:(---param:Suspend...)
VERBOSE: 16:17:08:(---param:NoTEST...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:UserRole...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:NoPrompt...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:new-DgTor...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:DNameBase...)
VERBOSE: 16:17:08:(---param:Ticket...)
VERBOSE: 16:17:08:(---param:ManagedBy...)
VERBOSE: 16:17:08:(---param:SiteOverride...)
VERBOSE: 16:17:08:(---param:Members...)
VERBOSE: 16:17:08:(---param:InetReceive...)
VERBOSE: 16:17:08:(---param:HiddenFromAddressLists...)
VERBOSE: 16:17:08:(---param:CloudFirst...)
VERBOSE: 16:17:08:(---param:OutObject...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:new-xoDGFromProperty...)
VERBOSE: 16:17:08:(---param:Members...)
VERBOSE: 16:17:08:(---param:NewDGName...)
VERBOSE: 16:17:08:(---param:ManagedBy...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:Reconnect-EXO...)
VERBOSE: 16:17:08:(---param:Prefix...)
VERBOSE: 16:17:08:(---param:MinimumVersion...)
VERBOSE: 16:17:08:(---param:MinNoWinRMVersion...)
VERBOSE: 16:17:08:(---param:ProxyEnabled...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:UserRole...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:remove-EXOLicense...)
VERBOSE: 16:17:08:(---param:users...)
VERBOSE: 16:17:08:(---param:Ticket...)
VERBOSE: 16:17:08:(---param:LicenseSkuKeys...)
VERBOSE: 16:17:08:(---param:LicenseSkuIds...)
VERBOSE: 16:17:08:(---param:Force...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:UserRole...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:showDebug...)
VERBOSE: 16:17:08:(---param:whatIf...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:Reset-xoMailboxFolderPermissionsRecursive...)
VERBOSE: 16:17:08:(---param:Ticket...)
VERBOSE: 16:17:08:(---param:Mailbox...)
VERBOSE: 16:17:08:(---param:ResetDefaultLevel...)
VERBOSE: 16:17:08:(---param:CalendarLimitedDetails...)
VERBOSE: 16:17:08:(---param:RemoveUnresolveable...)
VERBOSE: 16:17:08:(---param:IgnoreInternal...)
VERBOSE: 16:17:08:(---param:IgnoreExternal...)
VERBOSE: 16:17:08:(---param:Quiet...)
VERBOSE: 16:17:08:(---param:includedfolders...)
VERBOSE: 16:17:08:(---param:excludedfolders...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(---param:WhatIf...)
VERBOSE: 16:17:08:(---param:Confirm...)
VERBOSE: 16:17:08:(=cmd:resolve-AppIDToCBAFriendlyName...)
VERBOSE: 16:17:08:(---param:AppId...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:resolve-Name...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:Identifier...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:resolve-user...)
VERBOSE: 16:17:08:(---param:users...)
VERBOSE: 16:17:08:(---param:Ticket...)
VERBOSE: 16:17:08:(---param:getMobile...)
VERBOSE: 16:17:08:(---param:getQuotaUsage...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:UserRole...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:outObject...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:Resolve-xoRcps...)
VERBOSE: 16:17:08:(---param:Recipients...)
VERBOSE: 16:17:08:(---param:MatchRecipientTypeDetails...)
VERBOSE: 16:17:08:(---param:BlockRecipientTypeDetails...)
VERBOSE: 16:17:08:(---param:getGroups...)
VERBOSE: 16:17:08:(---param:getRecipients...)
VERBOSE: 16:17:08:(---param:getMailboxPrincipals...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:PreviewThreshold...)
VERBOSE: 16:17:08:(---param:UpdateInterval...)
VERBOSE: 16:17:08:(---param:returnObject...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:rxoTOL...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:rxoTOR...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:test-EXOConnectionTDO...)
VERBOSE: 16:17:08:(---param:Organization...)
VERBOSE: 16:17:08:(---param:Prefix...)
VERBOSE: 16:17:08:(---param:ConnectionId...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:test-ExoDnsRecordTDO...)
VERBOSE: 16:17:08:(---param:Name...)
VERBOSE: 16:17:08:(---param:Type...)
VERBOSE: 16:17:08:(---param:filter...)
VERBOSE: 16:17:08:(---param:testValue...)
VERBOSE: 16:17:08:(---param:Server...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:test-EXOIsLicensed...)
VERBOSE: 16:17:08:(---param:User...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:UserRole...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:silent...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:test-EXOv2Connection...)
VERBOSE: 16:17:08:(---param:Prefix...)
VERBOSE: 16:17:08:(---param:Credential...)
VERBOSE: 16:17:08:(---param:CertTag...)
VERBOSE: 16:17:08:(---param:MinNoWinRMVersion...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
VERBOSE: 16:17:08:(=cmd:test-xoMailbox...)
VERBOSE: 16:17:08:(---param:TenOrg...)
VERBOSE: 16:17:08:(---param:Mailboxes...)
VERBOSE: 16:17:08:(---param:Tickets...)
VERBOSE: 16:17:08:(---param:TargetDelegate...)
VERBOSE: 16:17:08:(---param:Days...)
VERBOSE: 16:17:08:(---param:useEXOv2...)
VERBOSE: 16:17:08:(---param:Verbose...)
VERBOSE: 16:17:08:(---param:Debug...)
VERBOSE: 16:17:08:(---param:ErrorAction...)
VERBOSE: 16:17:08:(---param:WarningAction...)
VERBOSE: 16:17:08:(---param:InformationAction...)
VERBOSE: 16:17:08:(---param:ErrorVariable...)
VERBOSE: 16:17:08:(---param:WarningVariable...)
VERBOSE: 16:17:08:(---param:InformationVariable...)
VERBOSE: 16:17:08:(---param:OutVariable...)
VERBOSE: 16:17:08:(---param:OutBuffer...)
VERBOSE: 16:17:08:(---param:PipelineVariable...)
16:17:08:Detecting new features
16:17:08:Detecting breaking changes
VERBOSE: (backup-FileTDO -path C:\sc\verb-Exo\fingerprint)
16:17:08:Writing fingerprint: Out-File w
Name                           Value                                                                                        
----                           -----                                                                                        
Encoding                       utf8                                                                                         
FilePath                       C:\sc\verb-Exo\fingerprint                                                                   
whatif                         False                                                                                        
Verbose                        True
VERBOSE: Performing the operation "Output to File" on target "C:\sc\verb-Exo\fingerprint".
16:17:08:

Fingerprint analysis recommends ModuleVersion Step:Patch. 

This can be implemented with the following command:

Step-ModuleVersion -Path C:\sc\verb-Exo\verb-Exo\verb-Exo.psd1 -By Patch

(the above will use the BuildHelpers module to update the revision stored in the Manifest .psd1 file for the module).
VERBOSE: 16:17:08:Minor/New-Feature Chgs:


Major/Removal/Breaking Chgs:
16:17:08:-applyChange *not* specified, returning 'bumpVersionType' specification to pipeline:
16:17:08:#*======^ RUNNING :Step-ModuleVersionCalculated:c:\sc\verb-Exo ^======
16:17:08:----PsdVers incremented from 8.1.0 to 8.1.1
16:17:08:update-NewModule w
Name                           Value                                                                                        
----                           -----                                                                                        
ModuleName                     verb-Exo                                                                                     
ModDirPath                     c:\sc\verb-Exo                                                                               
RequiredVersion                8.1.1                                                                                        
Repository                     lyncRepo                                                                                     
Merge                          True                                                                                         
RunTest                        True                                                                                         
showdebug                      False                                                                                        
whatif                         False                                                                                        
verbose                        True
VERBOSE: (running verb-dev:update-NewModule)
VERBOSE: consistent results
Calculated $runSource:Function
VERBOSE: $rPSBoundParameters:
Key             Value         
---             -----         
ModuleName      verb-Exo      
ModDirPath      c:\sc\verb-Exo
RequiredVersion 8.1.1         
Repository      lyncRepo      
Merge           True          
RunTest         True          
showDebug       False         
whatIf          False         
Verbose         True
VERBOSE: Collect all non-default Params (works back to psv2 w CmdletBinding)
MODULE-HOMED FUNCTION:Use $CmdletName to reference the running function name for transcripts etc (under a .psm1 $ScriptName will reflect the .psm1 file  fullname)
$runSource       : Function
$CmdletName      : update-NewModule
$scriptName      : C:\sc\verb-dev\verb-dev\VERB-dev.psm1
$ScriptBaseName  : VERB-dev.psm1
$ScriptNameNoExt : VERB-dev
$ScriptDir       : C:\sc\verb-dev\verb-dev
$PSScriptRoot    : C:\sc\verb-dev\verb-dev
$PSCommandPath   : C:\sc\verb-dev\verb-dev\VERB-dev.psm1
$rPSScriptRoot   : C:\sc\verb-dev\verb-dev
$rPSCommandPath  : C:\sc\verb-dev\verb-dev\VERB-dev.psm1
16:17:11:( processing $tModName:verb-logging	$tModFile:C:\sc\verb-logging\verb-logging\verb-logging.psm1	$tModCmdlet:write-log )
VERBOSE: (confirmed verb-logging loaded: write-log present)
16:17:11:( processing $tModName:verb-IO	$tModFile:C:\sc\verb-IO\verb-IO\verb-IO.psm1	$tModCmdlet:Add-PSTitleBar )
VERBOSE: (confirmed verb-IO loaded: Add-PSTitleBar present)
16:17:12:( processing $tModName:verb-Mods	$tModFile:C:\sc\verb-Mods\verb-Mods\verb-Mods.psm1	$tModCmdlet:check-ReqMods )
VERBOSE: (confirmed verb-Mods loaded: check-ReqMods present)
16:17:12:( processing $tModName:verb-Text	$tModFile:C:\sc\verb-Text\verb-Text\verb-Text.psm1	$tModCmdlet:Remove-StringDiacritic )
VERBOSE: (confirmed verb-Text loaded: Remove-StringDiacritic present)
VERBOSE: start-Log w
Name                           Value                                                                                        
----                           -----                                                                                        
Path                           C:\sc\verb-dev\verb-dev\VERB-dev.psm1                                                        
NoTimeStamp                    False                                                                                        
Tag                            verb-Exo                                                                                     
showdebug                      False                                                                                        
Verbose                        True                                                                                         
whatif                         False
VERBOSE: Name                           Value                                                                                        
----                           -----                                                                                        
logging                        True                                                                                         
logfile                        C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-Exo-LOG-BATCH-EXEC-20240923-1617PM-log.txt        
transcript                     C:\sc\verb-dev\verb-dev\logs\VERB-dev-verb-Exo-Transcript-BATCH-EXEC-20240923-1617PM-trans...
**********************
Windows PowerShell transcript end
End time: 20240923161712
**********************
